{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/src/components/NotaFormulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EncuestaFormulario() {\n  _s();\n  // Definir estado para el título y el dueño\n  const [titulo, setTitulo] = useState('');\n  const [dueno, setDueno] = useState('');\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevenir el comportamiento predeterminado del formulario\n\n    const url = `http://localhost:8000/encuestas/`; // URL de la API\n\n    try {\n      // Enviar la solicitud POST a la API\n      const response = await fetch(url, {\n        method: 'POST',\n        // Método HTTP\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          titulo,\n          dueno: parseInt(dueno, 10)\n        }) // Cuerpo de la solicitud (convertir dueno a entero)\n      });\n\n      // Verificar si la respuesta es exitosa\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n\n      // Si la respuesta es exitosa, mostrar un mensaje de éxito\n      const result = await response.json(); // Suponiendo que la API responde con JSON\n      console.log('Encuesta creada:', result);\n      alert('Encuesta creada con éxito!');\n    } catch (error) {\n      // Si hay algún error, mostrar un mensaje de error\n      console.error('Error al crear la encuesta:', error);\n      alert('Error al crear la encuesta');\n    }\n\n    // Limpiar los campos del formulario después de enviarlo\n    setTitulo('');\n    setDueno('');\n  };\n\n  // Renderizar el formulario\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"Username\",\n      class: \"relative block rounded-md border border-gray-200 shadow-sm focus-within:border-blue-600 focus-within:ring-1 focus-within:ring-blue-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Username\",\n        class: \"peer border-none bg-transparent placeholder-transparent focus:border-transparent focus:outline-none focus:ring-0\",\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"pointer-events-none absolute start-2.5 top-0 -translate-y-1/2 bg-white p-0.5 text-xs text-gray-700 transition-all peer-placeholder-shown:top-1/2 peer-placeholder-shown:text-sm peer-focus:top-0 peer-focus:text-xs\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: titulo,\n      onChange: e => setTitulo(e.target.value),\n      placeholder: \"T\\xEDtulo de la encuesta\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\" // Cambiado de number a text para adaptarse a los cambios\n      ,\n      value: dueno,\n      onChange: e => setDueno(e.target.value),\n      placeholder: \"ID del due\\xF1o de la encuesta\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Crear Encuesta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(EncuestaFormulario, \"jlKdIL76t7pxlb+0HDuDTt7knBo=\");\n_c = EncuestaFormulario;\nexport default EncuestaFormulario;\nvar _c;\n$RefreshReg$(_c, \"EncuestaFormulario\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EncuestaFormulario","_s","titulo","setTitulo","dueno","setDueno","handleSubmit","event","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","parseInt","ok","Error","status","result","json","console","log","alert","error","onSubmit","children","for","class","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/src/components/NotaFormulario.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction EncuestaFormulario() {\n    // Definir estado para el título y el dueño\n    const [titulo, setTitulo] = useState('');\n    const [dueno, setDueno] = useState('');\n\n    // Función para manejar el envío del formulario\n    const handleSubmit = async (event) => {\n        event.preventDefault();  // Prevenir el comportamiento predeterminado del formulario\n\n        const url = `http://localhost:8000/encuestas/`; // URL de la API\n        \n        try {\n            // Enviar la solicitud POST a la API\n            const response = await fetch(url, {\n                method: 'POST',  // Método HTTP\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ titulo, dueno: parseInt(dueno, 10) })  // Cuerpo de la solicitud (convertir dueno a entero)\n            });\n\n            // Verificar si la respuesta es exitosa\n            if (!response.ok) {\n                throw new Error(`Error: ${response.status}`);\n            }\n\n            // Si la respuesta es exitosa, mostrar un mensaje de éxito\n            const result = await response.json(); // Suponiendo que la API responde con JSON\n            console.log('Encuesta creada:', result);\n            alert('Encuesta creada con éxito!');\n        } catch (error) {\n            // Si hay algún error, mostrar un mensaje de error\n            console.error('Error al crear la encuesta:', error);\n            alert('Error al crear la encuesta');\n        }\n\n        // Limpiar los campos del formulario después de enviarlo\n        setTitulo('');\n        setDueno('');\n    };\n\n    // Renderizar el formulario\n    return (\n        <form onSubmit={handleSubmit}>\n            {/* Campo para ingresar el título de la encuesta */}\n            <label\n  for=\"Username\"\n  class=\"relative block rounded-md border border-gray-200 shadow-sm focus-within:border-blue-600 focus-within:ring-1 focus-within:ring-blue-600\"\n>\n  <input\n    type=\"text\"\n    id=\"Username\"\n    class=\"peer border-none bg-transparent placeholder-transparent focus:border-transparent focus:outline-none focus:ring-0\"\n    placeholder=\"Username\"\n  />\n\n  <span\n    class=\"pointer-events-none absolute start-2.5 top-0 -translate-y-1/2 bg-white p-0.5 text-xs text-gray-700 transition-all peer-placeholder-shown:top-1/2 peer-placeholder-shown:text-sm peer-focus:top-0 peer-focus:text-xs\"\n  >\n    Username\n  </span>\n</label>\n            <input\n                type=\"text\"\n                value={titulo}\n                onChange={(e) => setTitulo(e.target.value)}\n                placeholder=\"Título de la encuesta\"\n                required\n            />\n            {/* Campo para ingresar el ID del dueño de la encuesta */}\n            <input\n                type=\"text\" // Cambiado de number a text para adaptarse a los cambios\n                value={dueno}\n                onChange={(e) => setDueno(e.target.value)}\n                placeholder=\"ID del dueño de la encuesta\"\n                required\n            />\n            {/* Botón para enviar el formulario */}\n            <button type=\"submit\">Crear Encuesta</button>\n        </form>\n    );\n}\n\nexport default EncuestaFormulario;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}