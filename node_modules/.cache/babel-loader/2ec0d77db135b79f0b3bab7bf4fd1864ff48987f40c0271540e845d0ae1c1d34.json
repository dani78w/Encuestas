{"ast":null,"code":"import { mergeProps as $bvdLj$mergeProps, filterDOMProps as $bvdLj$filterDOMProps, useFormReset as $bvdLj$useFormReset } from \"@react-aria/utils\";\nimport { useFocusable as $bvdLj$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $bvdLj$usePress } from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {\n  let {\n    isDisabled = false,\n    isReadOnly = false,\n    value: value,\n    name: name,\n    children: children,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    validationState = \"valid\",\n    isInvalid: isInvalid\n  } = props;\n  let onChange = e => {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) console.warn(\"If you do not provide children, you must specify an aria-label for accessibility\");\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  let {\n    pressProps: pressProps,\n    isPressed: isPressed\n  } = (0, $bvdLj$usePress)({\n    isDisabled: isDisabled\n  });\n  // iOS does not toggle checkboxes if you drag off and back onto the label, so handle it ourselves.\n  let {\n    pressProps: labelProps,\n    isPressed: isLabelPressed\n  } = (0, $bvdLj$usePress)({\n    isDisabled: isDisabled || isReadOnly,\n    onPress() {\n      state.toggle();\n    }\n  });\n  let {\n    focusableProps: focusableProps\n  } = (0, $bvdLj$useFocusable)(props, ref);\n  let interactions = (0, $bvdLj$mergeProps)(pressProps, focusableProps);\n  let domProps = (0, $bvdLj$filterDOMProps)(props, {\n    labelable: true\n  });\n  (0, $bvdLj$useFormReset)(ref, state.isSelected, state.setSelected);\n  return {\n    labelProps: (0, $bvdLj$mergeProps)(labelProps, {\n      onClick: e => e.preventDefault()\n    }),\n    inputProps: (0, $bvdLj$mergeProps)(domProps, {\n      \"aria-invalid\": isInvalid || validationState === \"invalid\" || undefined,\n      \"aria-errormessage\": props[\"aria-errormessage\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-readonly\": isReadOnly || undefined,\n      onChange: onChange,\n      disabled: isDisabled,\n      ...(value == null ? {} : {\n        value: value\n      }),\n      name: name,\n      type: \"checkbox\",\n      ...interactions\n    }),\n    isSelected: state.isSelected,\n    isPressed: isPressed || isLabelPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isInvalid: isInvalid || validationState === \"invalid\"\n  };\n}\nexport { $d2c8e2b0480f3f34$export$cbe85ee05b554577 as useToggle };","map":{"version":3,"names":["mergeProps","$bvdLj$mergeProps","filterDOMProps","$bvdLj$filterDOMProps","useFormReset","$bvdLj$useFormReset","useFocusable","$bvdLj$useFocusable","usePress","$bvdLj$usePress","$d2c8e2b0480f3f34$export$cbe85ee05b554577","props","state","ref","isDisabled","isReadOnly","value","name","children","ariaLabel","ariaLabelledby","validationState","isInvalid","onChange","e","stopPropagation","setSelected","target","checked","hasChildren","hasAriaLabel","console","warn","pressProps","isPressed","labelProps","isLabelPressed","onPress","toggle","focusableProps","interactions","domProps","labelable","isSelected","onClick","preventDefault","inputProps","undefined","disabled","type","useToggle"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/toggle/dist/useToggle.mjs"],"sourcesContent":["import {mergeProps as $bvdLj$mergeProps, filterDOMProps as $bvdLj$filterDOMProps, useFormReset as $bvdLj$useFormReset} from \"@react-aria/utils\";\nimport {useFocusable as $bvdLj$useFocusable} from \"@react-aria/focus\";\nimport {usePress as $bvdLj$usePress} from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nfunction $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {\n    let { isDisabled: isDisabled = false, isReadOnly: isReadOnly = false, value: value, name: name, children: children, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledby, validationState: validationState = \"valid\", isInvalid: isInvalid } = props;\n    let onChange = (e)=>{\n        // since we spread props on label, onChange will end up there as well as in here.\n        // so we have to stop propagation at the lowest level that we care about\n        e.stopPropagation();\n        state.setSelected(e.target.checked);\n    };\n    let hasChildren = children != null;\n    let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n    if (!hasChildren && !hasAriaLabel) console.warn(\"If you do not provide children, you must specify an aria-label for accessibility\");\n    // This handles focusing the input on pointer down, which Safari does not do by default.\n    let { pressProps: pressProps, isPressed: isPressed } = (0, $bvdLj$usePress)({\n        isDisabled: isDisabled\n    });\n    // iOS does not toggle checkboxes if you drag off and back onto the label, so handle it ourselves.\n    let { pressProps: labelProps, isPressed: isLabelPressed } = (0, $bvdLj$usePress)({\n        isDisabled: isDisabled || isReadOnly,\n        onPress () {\n            state.toggle();\n        }\n    });\n    let { focusableProps: focusableProps } = (0, $bvdLj$useFocusable)(props, ref);\n    let interactions = (0, $bvdLj$mergeProps)(pressProps, focusableProps);\n    let domProps = (0, $bvdLj$filterDOMProps)(props, {\n        labelable: true\n    });\n    (0, $bvdLj$useFormReset)(ref, state.isSelected, state.setSelected);\n    return {\n        labelProps: (0, $bvdLj$mergeProps)(labelProps, {\n            onClick: (e)=>e.preventDefault()\n        }),\n        inputProps: (0, $bvdLj$mergeProps)(domProps, {\n            \"aria-invalid\": isInvalid || validationState === \"invalid\" || undefined,\n            \"aria-errormessage\": props[\"aria-errormessage\"],\n            \"aria-controls\": props[\"aria-controls\"],\n            \"aria-readonly\": isReadOnly || undefined,\n            onChange: onChange,\n            disabled: isDisabled,\n            ...value == null ? {} : {\n                value: value\n            },\n            name: name,\n            type: \"checkbox\",\n            ...interactions\n        }),\n        isSelected: state.isSelected,\n        isPressed: isPressed || isLabelPressed,\n        isDisabled: isDisabled,\n        isReadOnly: isReadOnly,\n        isInvalid: isInvalid || validationState === \"invalid\"\n    };\n}\n\n\nexport {$d2c8e2b0480f3f34$export$cbe85ee05b554577 as useToggle};\n//# sourceMappingURL=useToggle.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}