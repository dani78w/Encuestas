{"ast":null,"code":"import { Point as $3041db3296945e6e$export$baf26146a414f24a } from \"./Point.mjs\";\nimport { Rect as $60423f92c7f9ad87$export$c79fc6492f3af13d } from \"./Rect.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nclass $364191b3decf3697$var$RollingAverage {\n  addSample(sample) {\n    this.count++;\n    this.value += (sample - this.value) / this.count;\n  }\n  constructor() {\n    this.count = 0;\n    this.value = 0;\n  }\n}\nclass $364191b3decf3697$export$4455ee6afb38dcbb {\n  setVisibleRect(rect) {\n    let time = performance.now() - this.startTime;\n    if (time < 500) {\n      this.averageTime.addSample(time);\n      if (rect.x !== this.visibleRect.x && time > 0) this.velocity.x = (rect.x - this.visibleRect.x) / time;\n      if (rect.y !== this.visibleRect.y && time > 0) this.velocity.y = (rect.y - this.visibleRect.y) / time;\n    }\n    this.startTime = performance.now();\n    this.visibleRect = rect;\n  }\n  collectMetrics() {\n    let time = performance.now() - this.startTime;\n    if (time < 500) this.averagePerf.addSample(time);\n    if (this.visibleRect.height > 0) {\n      let o = Math.abs(this.velocity.y * (this.averageTime.value + this.averagePerf.value));\n      this.overscanY.addSample(o);\n    }\n    if (this.visibleRect.width > 0) {\n      let o = Math.abs(this.velocity.x * (this.averageTime.value + this.averagePerf.value));\n      this.overscanX.addSample(o);\n    }\n  }\n  getOverscannedRect() {\n    let overscanned = this.visibleRect.copy();\n    let overscanY = Math.round(Math.min(this.visibleRect.height * 2, this.overscanY.value) / 100) * 100;\n    if (this.velocity.y > 0) {\n      overscanned.y -= overscanY * 0.2;\n      overscanned.height += overscanY + overscanY * 0.2;\n    } else {\n      overscanned.y -= overscanY;\n      overscanned.height += overscanY + overscanY * 0.2;\n    }\n    let overscanX = Math.round(Math.min(this.visibleRect.width * 2, this.overscanX.value) / 100) * 100;\n    if (this.velocity.x > 0) {\n      overscanned.x -= overscanX * 0.2;\n      overscanned.width += overscanX + overscanX * 0.2;\n    } else {\n      overscanned.x -= overscanX;\n      overscanned.width += overscanX + overscanX * 0.2;\n    }\n    return overscanned;\n  }\n  constructor() {\n    this.startTime = 0;\n    this.averagePerf = new $364191b3decf3697$var$RollingAverage();\n    this.averageTime = new $364191b3decf3697$var$RollingAverage();\n    this.velocity = new (0, $3041db3296945e6e$export$baf26146a414f24a)(5, 5);\n    this.overscanX = new $364191b3decf3697$var$RollingAverage();\n    this.overscanY = new $364191b3decf3697$var$RollingAverage();\n    this.visibleRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)();\n  }\n}\nexport { $364191b3decf3697$export$4455ee6afb38dcbb as OverscanManager };","map":{"version":3,"names":["Point","$3041db3296945e6e$export$baf26146a414f24a","Rect","$60423f92c7f9ad87$export$c79fc6492f3af13d","$364191b3decf3697$var$RollingAverage","addSample","sample","count","value","constructor","$364191b3decf3697$export$4455ee6afb38dcbb","setVisibleRect","rect","time","performance","now","startTime","averageTime","x","visibleRect","velocity","y","collectMetrics","averagePerf","height","o","Math","abs","overscanY","width","overscanX","getOverscannedRect","overscanned","copy","round","min","OverscanManager"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/virtualizer/dist/OverscanManager.mjs"],"sourcesContent":["import {Point as $3041db3296945e6e$export$baf26146a414f24a} from \"./Point.mjs\";\nimport {Rect as $60423f92c7f9ad87$export$c79fc6492f3af13d} from \"./Rect.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nclass $364191b3decf3697$var$RollingAverage {\n    addSample(sample) {\n        this.count++;\n        this.value += (sample - this.value) / this.count;\n    }\n    constructor(){\n        this.count = 0;\n        this.value = 0;\n    }\n}\nclass $364191b3decf3697$export$4455ee6afb38dcbb {\n    setVisibleRect(rect) {\n        let time = performance.now() - this.startTime;\n        if (time < 500) {\n            this.averageTime.addSample(time);\n            if (rect.x !== this.visibleRect.x && time > 0) this.velocity.x = (rect.x - this.visibleRect.x) / time;\n            if (rect.y !== this.visibleRect.y && time > 0) this.velocity.y = (rect.y - this.visibleRect.y) / time;\n        }\n        this.startTime = performance.now();\n        this.visibleRect = rect;\n    }\n    collectMetrics() {\n        let time = performance.now() - this.startTime;\n        if (time < 500) this.averagePerf.addSample(time);\n        if (this.visibleRect.height > 0) {\n            let o = Math.abs(this.velocity.y * (this.averageTime.value + this.averagePerf.value));\n            this.overscanY.addSample(o);\n        }\n        if (this.visibleRect.width > 0) {\n            let o = Math.abs(this.velocity.x * (this.averageTime.value + this.averagePerf.value));\n            this.overscanX.addSample(o);\n        }\n    }\n    getOverscannedRect() {\n        let overscanned = this.visibleRect.copy();\n        let overscanY = Math.round(Math.min(this.visibleRect.height * 2, this.overscanY.value) / 100) * 100;\n        if (this.velocity.y > 0) {\n            overscanned.y -= overscanY * 0.2;\n            overscanned.height += overscanY + overscanY * 0.2;\n        } else {\n            overscanned.y -= overscanY;\n            overscanned.height += overscanY + overscanY * 0.2;\n        }\n        let overscanX = Math.round(Math.min(this.visibleRect.width * 2, this.overscanX.value) / 100) * 100;\n        if (this.velocity.x > 0) {\n            overscanned.x -= overscanX * 0.2;\n            overscanned.width += overscanX + overscanX * 0.2;\n        } else {\n            overscanned.x -= overscanX;\n            overscanned.width += overscanX + overscanX * 0.2;\n        }\n        return overscanned;\n    }\n    constructor(){\n        this.startTime = 0;\n        this.averagePerf = new $364191b3decf3697$var$RollingAverage();\n        this.averageTime = new $364191b3decf3697$var$RollingAverage();\n        this.velocity = new (0, $3041db3296945e6e$export$baf26146a414f24a)(5, 5);\n        this.overscanX = new $364191b3decf3697$var$RollingAverage();\n        this.overscanY = new $364191b3decf3697$var$RollingAverage();\n        this.visibleRect = new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)();\n    }\n}\n\n\nexport {$364191b3decf3697$export$4455ee6afb38dcbb as OverscanManager};\n//# sourceMappingURL=OverscanManager.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}