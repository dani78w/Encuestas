{"ast":null,"code":"import { isElementInChildOfActiveScope as $jtpZv$isElementInChildOfActiveScope } from \"@react-aria/focus\";\nimport { useEffect as $jtpZv$useEffect } from \"react\";\nimport { useInteractOutside as $jtpZv$useInteractOutside, useFocusWithin as $jtpZv$useFocusWithin } from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $a11501f3d1d39e6c$var$visibleOverlays = [];\nfunction $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {\n  let {\n    onClose: onClose,\n    shouldCloseOnBlur: shouldCloseOnBlur,\n    isOpen: isOpen,\n    isDismissable = false,\n    isKeyboardDismissDisabled = false,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n  } = props;\n  // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n  (0, $jtpZv$useEffect)(() => {\n    if (isOpen) $a11501f3d1d39e6c$var$visibleOverlays.push(ref);\n    return () => {\n      let index = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);\n      if (index >= 0) $a11501f3d1d39e6c$var$visibleOverlays.splice(index, 1);\n    };\n  }, [isOpen, ref]);\n  // Only hide the overlay when it is the topmost visible overlay in the stack\n  let onHide = () => {\n    if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose) onClose();\n  };\n  let onInteractOutsideStart = e => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  };\n  let onInteractOutside = e => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      onHide();\n    }\n  };\n  // Handle the escape key\n  let onKeyDown = e => {\n    if (e.key === \"Escape\" && !isKeyboardDismissDisabled && !e.nativeEvent.isComposing) {\n      e.stopPropagation();\n      e.preventDefault();\n      onHide();\n    }\n  };\n  // Handle clicking outside the overlay to close it\n  (0, $jtpZv$useInteractOutside)({\n    ref: ref,\n    onInteractOutside: isDismissable && isOpen ? onInteractOutside : null,\n    onInteractOutsideStart: onInteractOutsideStart\n  });\n  let {\n    focusWithinProps: focusWithinProps\n  } = (0, $jtpZv$useFocusWithin)({\n    isDisabled: !shouldCloseOnBlur,\n    onBlurWithin: e => {\n      // Do not close if relatedTarget is null, which means focus is lost to the body.\n      // That can happen when switching tabs, or due to a VoiceOver/Chrome bug with Control+Option+Arrow navigation.\n      // Clicking on the body to close the overlay should already be handled by useInteractOutside.\n      // https://github.com/adobe/react-spectrum/issues/4130\n      // https://github.com/adobe/react-spectrum/issues/4922\n      //\n      // If focus is moving into a child focus scope (e.g. menu inside a dialog),\n      // do not close the outer overlay. At this point, the active scope should\n      // still be the outer overlay, since blur events run before focus.\n      if (!e.relatedTarget || (0, $jtpZv$isElementInChildOfActiveScope)(e.relatedTarget)) return;\n      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget)) onClose();\n    }\n  });\n  let onPointerDownUnderlay = e => {\n    // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846\n    if (e.target === e.currentTarget) e.preventDefault();\n  };\n  return {\n    overlayProps: {\n      onKeyDown: onKeyDown,\n      ...focusWithinProps\n    },\n    underlayProps: {\n      onPointerDown: onPointerDownUnderlay\n    }\n  };\n}\nexport { $a11501f3d1d39e6c$export$ea8f71083e90600f as useOverlay };","map":{"version":3,"names":["isElementInChildOfActiveScope","$jtpZv$isElementInChildOfActiveScope","useEffect","$jtpZv$useEffect","useInteractOutside","$jtpZv$useInteractOutside","useFocusWithin","$jtpZv$useFocusWithin","$a11501f3d1d39e6c$var$visibleOverlays","$a11501f3d1d39e6c$export$ea8f71083e90600f","props","ref","onClose","shouldCloseOnBlur","isOpen","isDismissable","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","push","index","indexOf","splice","onHide","length","onInteractOutsideStart","e","target","stopPropagation","preventDefault","onInteractOutside","onKeyDown","key","nativeEvent","isComposing","focusWithinProps","isDisabled","onBlurWithin","relatedTarget","onPointerDownUnderlay","currentTarget","overlayProps","underlayProps","onPointerDown","useOverlay"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/overlays/dist/useOverlay.mjs"],"sourcesContent":["import {isElementInChildOfActiveScope as $jtpZv$isElementInChildOfActiveScope} from \"@react-aria/focus\";\nimport {useEffect as $jtpZv$useEffect} from \"react\";\nimport {useInteractOutside as $jtpZv$useInteractOutside, useFocusWithin as $jtpZv$useFocusWithin} from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nconst $a11501f3d1d39e6c$var$visibleOverlays = [];\nfunction $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {\n    let { onClose: onClose, shouldCloseOnBlur: shouldCloseOnBlur, isOpen: isOpen, isDismissable: isDismissable = false, isKeyboardDismissDisabled: isKeyboardDismissDisabled = false, shouldCloseOnInteractOutside: shouldCloseOnInteractOutside } = props;\n    // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n    (0, $jtpZv$useEffect)(()=>{\n        if (isOpen) $a11501f3d1d39e6c$var$visibleOverlays.push(ref);\n        return ()=>{\n            let index = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);\n            if (index >= 0) $a11501f3d1d39e6c$var$visibleOverlays.splice(index, 1);\n        };\n    }, [\n        isOpen,\n        ref\n    ]);\n    // Only hide the overlay when it is the topmost visible overlay in the stack\n    let onHide = ()=>{\n        if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose) onClose();\n    };\n    let onInteractOutsideStart = (e)=>{\n        if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n            if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        }\n    };\n    let onInteractOutside = (e)=>{\n        if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n            if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            onHide();\n        }\n    };\n    // Handle the escape key\n    let onKeyDown = (e)=>{\n        if (e.key === \"Escape\" && !isKeyboardDismissDisabled && !e.nativeEvent.isComposing) {\n            e.stopPropagation();\n            e.preventDefault();\n            onHide();\n        }\n    };\n    // Handle clicking outside the overlay to close it\n    (0, $jtpZv$useInteractOutside)({\n        ref: ref,\n        onInteractOutside: isDismissable && isOpen ? onInteractOutside : null,\n        onInteractOutsideStart: onInteractOutsideStart\n    });\n    let { focusWithinProps: focusWithinProps } = (0, $jtpZv$useFocusWithin)({\n        isDisabled: !shouldCloseOnBlur,\n        onBlurWithin: (e)=>{\n            // Do not close if relatedTarget is null, which means focus is lost to the body.\n            // That can happen when switching tabs, or due to a VoiceOver/Chrome bug with Control+Option+Arrow navigation.\n            // Clicking on the body to close the overlay should already be handled by useInteractOutside.\n            // https://github.com/adobe/react-spectrum/issues/4130\n            // https://github.com/adobe/react-spectrum/issues/4922\n            //\n            // If focus is moving into a child focus scope (e.g. menu inside a dialog),\n            // do not close the outer overlay. At this point, the active scope should\n            // still be the outer overlay, since blur events run before focus.\n            if (!e.relatedTarget || (0, $jtpZv$isElementInChildOfActiveScope)(e.relatedTarget)) return;\n            if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget)) onClose();\n        }\n    });\n    let onPointerDownUnderlay = (e)=>{\n        // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846\n        if (e.target === e.currentTarget) e.preventDefault();\n    };\n    return {\n        overlayProps: {\n            onKeyDown: onKeyDown,\n            ...focusWithinProps\n        },\n        underlayProps: {\n            onPointerDown: onPointerDownUnderlay\n        }\n    };\n}\n\n\nexport {$a11501f3d1d39e6c$export$ea8f71083e90600f as useOverlay};\n//# sourceMappingURL=useOverlay.mjs.map\n"],"mappings":"AAAA,SAAQA,6BAA6B,IAAIC,oCAAoC,QAAO,mBAAmB;AACvG,SAAQC,SAAS,IAAIC,gBAAgB,QAAO,OAAO;AACnD,SAAQC,kBAAkB,IAAIC,yBAAyB,EAAEC,cAAc,IAAIC,qBAAqB,QAAO,0BAA0B;;AAEjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,qCAAqC,GAAG,EAAE;AAChD,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC3D,IAAI;IAAEC,OAAO,EAAEA,OAAO;IAAEC,iBAAiB,EAAEA,iBAAiB;IAAEC,MAAM,EAAEA,MAAM;IAAiBC,aAAa,GAAG,KAAK;IAA6BC,yBAAyB,GAAG,KAAK;IAAEC,4BAA4B,EAAEA;EAA6B,CAAC,GAAGP,KAAK;EACtP;EACA,CAAC,CAAC,EAAEP,gBAAgB,EAAE,MAAI;IACtB,IAAIW,MAAM,EAAEN,qCAAqC,CAACU,IAAI,CAACP,GAAG,CAAC;IAC3D,OAAO,MAAI;MACP,IAAIQ,KAAK,GAAGX,qCAAqC,CAACY,OAAO,CAACT,GAAG,CAAC;MAC9D,IAAIQ,KAAK,IAAI,CAAC,EAAEX,qCAAqC,CAACa,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC;EACL,CAAC,EAAE,CACCL,MAAM,EACNH,GAAG,CACN,CAAC;EACF;EACA,IAAIW,MAAM,GAAGA,CAAA,KAAI;IACb,IAAId,qCAAqC,CAACA,qCAAqC,CAACe,MAAM,GAAG,CAAC,CAAC,KAAKZ,GAAG,IAAIC,OAAO,EAAEA,OAAO,CAAC,CAAC;EAC7H,CAAC;EACD,IAAIY,sBAAsB,GAAIC,CAAC,IAAG;IAC9B,IAAI,CAACR,4BAA4B,IAAIA,4BAA4B,CAACQ,CAAC,CAACC,MAAM,CAAC,EAAE;MACzE,IAAIlB,qCAAqC,CAACA,qCAAqC,CAACe,MAAM,GAAG,CAAC,CAAC,KAAKZ,GAAG,EAAE;QACjGc,CAAC,CAACE,eAAe,CAAC,CAAC;QACnBF,CAAC,CAACG,cAAc,CAAC,CAAC;MACtB;IACJ;EACJ,CAAC;EACD,IAAIC,iBAAiB,GAAIJ,CAAC,IAAG;IACzB,IAAI,CAACR,4BAA4B,IAAIA,4BAA4B,CAACQ,CAAC,CAACC,MAAM,CAAC,EAAE;MACzE,IAAIlB,qCAAqC,CAACA,qCAAqC,CAACe,MAAM,GAAG,CAAC,CAAC,KAAKZ,GAAG,EAAE;QACjGc,CAAC,CAACE,eAAe,CAAC,CAAC;QACnBF,CAAC,CAACG,cAAc,CAAC,CAAC;MACtB;MACAN,MAAM,CAAC,CAAC;IACZ;EACJ,CAAC;EACD;EACA,IAAIQ,SAAS,GAAIL,CAAC,IAAG;IACjB,IAAIA,CAAC,CAACM,GAAG,KAAK,QAAQ,IAAI,CAACf,yBAAyB,IAAI,CAACS,CAAC,CAACO,WAAW,CAACC,WAAW,EAAE;MAChFR,CAAC,CAACE,eAAe,CAAC,CAAC;MACnBF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBN,MAAM,CAAC,CAAC;IACZ;EACJ,CAAC;EACD;EACA,CAAC,CAAC,EAAEjB,yBAAyB,EAAE;IAC3BM,GAAG,EAAEA,GAAG;IACRkB,iBAAiB,EAAEd,aAAa,IAAID,MAAM,GAAGe,iBAAiB,GAAG,IAAI;IACrEL,sBAAsB,EAAEA;EAC5B,CAAC,CAAC;EACF,IAAI;IAAEU,gBAAgB,EAAEA;EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE3B,qBAAqB,EAAE;IACpE4B,UAAU,EAAE,CAACtB,iBAAiB;IAC9BuB,YAAY,EAAGX,CAAC,IAAG;MACf;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACA,CAAC,CAACY,aAAa,IAAI,CAAC,CAAC,EAAEpC,oCAAoC,EAAEwB,CAAC,CAACY,aAAa,CAAC,EAAE;MACpF,IAAI,CAACpB,4BAA4B,IAAIA,4BAA4B,CAACQ,CAAC,CAACY,aAAa,CAAC,EAAEzB,OAAO,CAAC,CAAC;IACjG;EACJ,CAAC,CAAC;EACF,IAAI0B,qBAAqB,GAAIb,CAAC,IAAG;IAC7B;IACA,IAAIA,CAAC,CAACC,MAAM,KAAKD,CAAC,CAACc,aAAa,EAAEd,CAAC,CAACG,cAAc,CAAC,CAAC;EACxD,CAAC;EACD,OAAO;IACHY,YAAY,EAAE;MACVV,SAAS,EAAEA,SAAS;MACpB,GAAGI;IACP,CAAC;IACDO,aAAa,EAAE;MACXC,aAAa,EAAEJ;IACnB;EACJ,CAAC;AACL;AAGA,SAAQ7B,yCAAyC,IAAIkC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}