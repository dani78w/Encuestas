{"ast":null,"code":"import { useListState as $e72dd72e1c76a225$export$2f645645f7bca764 } from \"./useListState.mjs\";\nimport { useControlledState as $eBozH$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $eBozH$useMemo } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $a0d645289fe9b86b$export$e7f05e985daf4b5f(props) {\n  var _props_defaultSelectedKey;\n  let [selectedKey, setSelectedKey] = (0, $eBozH$useControlledState)(props.selectedKey, (_props_defaultSelectedKey = props.defaultSelectedKey) !== null && _props_defaultSelectedKey !== void 0 ? _props_defaultSelectedKey : null, props.onSelectionChange);\n  let selectedKeys = (0, $eBozH$useMemo)(() => selectedKey != null ? [selectedKey] : [], [selectedKey]);\n  let {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager\n  } = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({\n    ...props,\n    selectionMode: \"single\",\n    disallowEmptySelection: true,\n    allowDuplicateSelectionEvents: true,\n    selectedKeys: selectedKeys,\n    onSelectionChange: keys => {\n      var _keys_values_next_value;\n      let key = (_keys_values_next_value = keys.values().next().value) !== null && _keys_values_next_value !== void 0 ? _keys_values_next_value : null;\n      // Always fire onSelectionChange, even if the key is the same\n      // as the current key (useControlledState does not).\n      if (key === selectedKey && props.onSelectionChange) props.onSelectionChange(key);\n      setSelectedKey(key);\n    }\n  });\n  let selectedItem = selectedKey != null ? collection.getItem(selectedKey) : null;\n  return {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager,\n    selectedKey: selectedKey,\n    setSelectedKey: setSelectedKey,\n    selectedItem: selectedItem\n  };\n}\nexport { $a0d645289fe9b86b$export$e7f05e985daf4b5f as useSingleSelectListState };","map":{"version":3,"names":["useListState","$e72dd72e1c76a225$export$2f645645f7bca764","useControlledState","$eBozH$useControlledState","useMemo","$eBozH$useMemo","$a0d645289fe9b86b$export$e7f05e985daf4b5f","props","_props_defaultSelectedKey","selectedKey","setSelectedKey","defaultSelectedKey","onSelectionChange","selectedKeys","collection","disabledKeys","selectionManager","selectionMode","disallowEmptySelection","allowDuplicateSelectionEvents","keys","_keys_values_next_value","key","values","next","value","selectedItem","getItem","useSingleSelectListState"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/list/dist/useSingleSelectListState.mjs"],"sourcesContent":["import {useListState as $e72dd72e1c76a225$export$2f645645f7bca764} from \"./useListState.mjs\";\nimport {useControlledState as $eBozH$useControlledState} from \"@react-stately/utils\";\nimport {useMemo as $eBozH$useMemo} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nfunction $a0d645289fe9b86b$export$e7f05e985daf4b5f(props) {\n    var _props_defaultSelectedKey;\n    let [selectedKey, setSelectedKey] = (0, $eBozH$useControlledState)(props.selectedKey, (_props_defaultSelectedKey = props.defaultSelectedKey) !== null && _props_defaultSelectedKey !== void 0 ? _props_defaultSelectedKey : null, props.onSelectionChange);\n    let selectedKeys = (0, $eBozH$useMemo)(()=>selectedKey != null ? [\n            selectedKey\n        ] : [], [\n        selectedKey\n    ]);\n    let { collection: collection, disabledKeys: disabledKeys, selectionManager: selectionManager } = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({\n        ...props,\n        selectionMode: \"single\",\n        disallowEmptySelection: true,\n        allowDuplicateSelectionEvents: true,\n        selectedKeys: selectedKeys,\n        onSelectionChange: (keys)=>{\n            var _keys_values_next_value;\n            let key = (_keys_values_next_value = keys.values().next().value) !== null && _keys_values_next_value !== void 0 ? _keys_values_next_value : null;\n            // Always fire onSelectionChange, even if the key is the same\n            // as the current key (useControlledState does not).\n            if (key === selectedKey && props.onSelectionChange) props.onSelectionChange(key);\n            setSelectedKey(key);\n        }\n    });\n    let selectedItem = selectedKey != null ? collection.getItem(selectedKey) : null;\n    return {\n        collection: collection,\n        disabledKeys: disabledKeys,\n        selectionManager: selectionManager,\n        selectedKey: selectedKey,\n        setSelectedKey: setSelectedKey,\n        selectedItem: selectedItem\n    };\n}\n\n\nexport {$a0d645289fe9b86b$export$e7f05e985daf4b5f as useSingleSelectListState};\n//# sourceMappingURL=useSingleSelectListState.mjs.map\n"],"mappings":"AAAA,SAAQA,YAAY,IAAIC,yCAAyC,QAAO,oBAAoB;AAC5F,SAAQC,kBAAkB,IAAIC,yBAAyB,QAAO,sBAAsB;AACpF,SAAQC,OAAO,IAAIC,cAAc,QAAO,OAAO;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,yCAAyCA,CAACC,KAAK,EAAE;EACtD,IAAIC,yBAAyB;EAC7B,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAEP,yBAAyB,EAAEI,KAAK,CAACE,WAAW,EAAE,CAACD,yBAAyB,GAAGD,KAAK,CAACI,kBAAkB,MAAM,IAAI,IAAIH,yBAAyB,KAAK,KAAK,CAAC,GAAGA,yBAAyB,GAAG,IAAI,EAAED,KAAK,CAACK,iBAAiB,CAAC;EAC1P,IAAIC,YAAY,GAAG,CAAC,CAAC,EAAER,cAAc,EAAE,MAAII,WAAW,IAAI,IAAI,GAAG,CACzDA,WAAW,CACd,GAAG,EAAE,EAAE,CACRA,WAAW,CACd,CAAC;EACF,IAAI;IAAEK,UAAU,EAAEA,UAAU;IAAEC,YAAY,EAAEA,YAAY;IAAEC,gBAAgB,EAAEA;EAAiB,CAAC,GAAG,CAAC,CAAC,EAAEf,yCAAyC,EAAE;IAC5I,GAAGM,KAAK;IACRU,aAAa,EAAE,QAAQ;IACvBC,sBAAsB,EAAE,IAAI;IAC5BC,6BAA6B,EAAE,IAAI;IACnCN,YAAY,EAAEA,YAAY;IAC1BD,iBAAiB,EAAGQ,IAAI,IAAG;MACvB,IAAIC,uBAAuB;MAC3B,IAAIC,GAAG,GAAG,CAACD,uBAAuB,GAAGD,IAAI,CAACG,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,MAAM,IAAI,IAAIJ,uBAAuB,KAAK,KAAK,CAAC,GAAGA,uBAAuB,GAAG,IAAI;MAChJ;MACA;MACA,IAAIC,GAAG,KAAKb,WAAW,IAAIF,KAAK,CAACK,iBAAiB,EAAEL,KAAK,CAACK,iBAAiB,CAACU,GAAG,CAAC;MAChFZ,cAAc,CAACY,GAAG,CAAC;IACvB;EACJ,CAAC,CAAC;EACF,IAAII,YAAY,GAAGjB,WAAW,IAAI,IAAI,GAAGK,UAAU,CAACa,OAAO,CAAClB,WAAW,CAAC,GAAG,IAAI;EAC/E,OAAO;IACHK,UAAU,EAAEA,UAAU;IACtBC,YAAY,EAAEA,YAAY;IAC1BC,gBAAgB,EAAEA,gBAAgB;IAClCP,WAAW,EAAEA,WAAW;IACxBC,cAAc,EAAEA,cAAc;IAC9BgB,YAAY,EAAEA;EAClB,CAAC;AACL;AAGA,SAAQpB,yCAAyC,IAAIsB,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}