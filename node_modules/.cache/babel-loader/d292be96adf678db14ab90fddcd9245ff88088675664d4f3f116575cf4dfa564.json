{"ast":null,"code":"import { useEffect as $jNP0e$useEffect } from \"react\";\nimport { useFormValidation as $jNP0e$useFormValidation } from \"@react-aria/form\";\nimport { useFormValidationState as $jNP0e$useFormValidationState } from \"@react-stately/form\";\nimport { useToggle as $jNP0e$useToggle } from \"@react-aria/toggle\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {\n  // Create validation state here because it doesn't make sense to add to general useToggleState.\n  let validationState = (0, $jNP0e$useFormValidationState)({\n    ...props,\n    value: state.isSelected\n  });\n  let {\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = validationState.displayValidation;\n  let {\n    labelProps: labelProps,\n    inputProps: inputProps,\n    isSelected: isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  } = (0, $jNP0e$useToggle)({\n    ...props,\n    isInvalid: isInvalid\n  }, state, inputRef);\n  (0, $jNP0e$useFormValidation)(props, validationState, inputRef);\n  let {\n    isIndeterminate: isIndeterminate,\n    isRequired: isRequired,\n    validationBehavior = \"aria\"\n  } = props;\n  (0, $jNP0e$useEffect)(() => {\n    // indeterminate is a property, but it can only be set via javascript\n    // https://css-tricks.com/indeterminate-checkboxes/\n    if (inputRef.current) inputRef.current.indeterminate = !!isIndeterminate;\n  });\n  return {\n    labelProps: labelProps,\n    inputProps: {\n      ...inputProps,\n      checked: isSelected,\n      \"aria-required\": isRequired && validationBehavior === \"aria\" || undefined,\n      required: isRequired && validationBehavior === \"native\"\n    },\n    isSelected: isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  };\n}\nexport { $406796ff087fe49b$export$e375f10ce42261c5 as useCheckbox };","map":{"version":3,"names":["useEffect","$jNP0e$useEffect","useFormValidation","$jNP0e$useFormValidation","useFormValidationState","$jNP0e$useFormValidationState","useToggle","$jNP0e$useToggle","$406796ff087fe49b$export$e375f10ce42261c5","props","state","inputRef","validationState","value","isSelected","isInvalid","validationErrors","validationDetails","displayValidation","labelProps","inputProps","isPressed","isDisabled","isReadOnly","isIndeterminate","isRequired","validationBehavior","current","indeterminate","checked","undefined","required","useCheckbox"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/checkbox/dist/useCheckbox.mjs"],"sourcesContent":["import {useEffect as $jNP0e$useEffect} from \"react\";\nimport {useFormValidation as $jNP0e$useFormValidation} from \"@react-aria/form\";\nimport {useFormValidationState as $jNP0e$useFormValidationState} from \"@react-stately/form\";\nimport {useToggle as $jNP0e$useToggle} from \"@react-aria/toggle\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\nfunction $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {\n    // Create validation state here because it doesn't make sense to add to general useToggleState.\n    let validationState = (0, $jNP0e$useFormValidationState)({\n        ...props,\n        value: state.isSelected\n    });\n    let { isInvalid: isInvalid, validationErrors: validationErrors, validationDetails: validationDetails } = validationState.displayValidation;\n    let { labelProps: labelProps, inputProps: inputProps, isSelected: isSelected, isPressed: isPressed, isDisabled: isDisabled, isReadOnly: isReadOnly } = (0, $jNP0e$useToggle)({\n        ...props,\n        isInvalid: isInvalid\n    }, state, inputRef);\n    (0, $jNP0e$useFormValidation)(props, validationState, inputRef);\n    let { isIndeterminate: isIndeterminate, isRequired: isRequired, validationBehavior: validationBehavior = \"aria\" } = props;\n    (0, $jNP0e$useEffect)(()=>{\n        // indeterminate is a property, but it can only be set via javascript\n        // https://css-tricks.com/indeterminate-checkboxes/\n        if (inputRef.current) inputRef.current.indeterminate = !!isIndeterminate;\n    });\n    return {\n        labelProps: labelProps,\n        inputProps: {\n            ...inputProps,\n            checked: isSelected,\n            \"aria-required\": isRequired && validationBehavior === \"aria\" || undefined,\n            required: isRequired && validationBehavior === \"native\"\n        },\n        isSelected: isSelected,\n        isPressed: isPressed,\n        isDisabled: isDisabled,\n        isReadOnly: isReadOnly,\n        isInvalid: isInvalid,\n        validationErrors: validationErrors,\n        validationDetails: validationDetails\n    };\n}\n\n\nexport {$406796ff087fe49b$export$e375f10ce42261c5 as useCheckbox};\n//# sourceMappingURL=useCheckbox.mjs.map\n"],"mappings":"AAAA,SAAQA,SAAS,IAAIC,gBAAgB,QAAO,OAAO;AACnD,SAAQC,iBAAiB,IAAIC,wBAAwB,QAAO,kBAAkB;AAC9E,SAAQC,sBAAsB,IAAIC,6BAA6B,QAAO,qBAAqB;AAC3F,SAAQC,SAAS,IAAIC,gBAAgB,QAAO,oBAAoB;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EACvE;EACA,IAAIC,eAAe,GAAG,CAAC,CAAC,EAAEP,6BAA6B,EAAE;IACrD,GAAGI,KAAK;IACRI,KAAK,EAAEH,KAAK,CAACI;EACjB,CAAC,CAAC;EACF,IAAI;IAAEC,SAAS,EAAEA,SAAS;IAAEC,gBAAgB,EAAEA,gBAAgB;IAAEC,iBAAiB,EAAEA;EAAkB,CAAC,GAAGL,eAAe,CAACM,iBAAiB;EAC1I,IAAI;IAAEC,UAAU,EAAEA,UAAU;IAAEC,UAAU,EAAEA,UAAU;IAAEN,UAAU,EAAEA,UAAU;IAAEO,SAAS,EAAEA,SAAS;IAAEC,UAAU,EAAEA,UAAU;IAAEC,UAAU,EAAEA;EAAW,CAAC,GAAG,CAAC,CAAC,EAAEhB,gBAAgB,EAAE;IACzK,GAAGE,KAAK;IACRM,SAAS,EAAEA;EACf,CAAC,EAAEL,KAAK,EAAEC,QAAQ,CAAC;EACnB,CAAC,CAAC,EAAER,wBAAwB,EAAEM,KAAK,EAAEG,eAAe,EAAED,QAAQ,CAAC;EAC/D,IAAI;IAAEa,eAAe,EAAEA,eAAe;IAAEC,UAAU,EAAEA,UAAU;IAAsBC,kBAAkB,GAAG;EAAO,CAAC,GAAGjB,KAAK;EACzH,CAAC,CAAC,EAAER,gBAAgB,EAAE,MAAI;IACtB;IACA;IACA,IAAIU,QAAQ,CAACgB,OAAO,EAAEhB,QAAQ,CAACgB,OAAO,CAACC,aAAa,GAAG,CAAC,CAACJ,eAAe;EAC5E,CAAC,CAAC;EACF,OAAO;IACHL,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAE;MACR,GAAGA,UAAU;MACbS,OAAO,EAAEf,UAAU;MACnB,eAAe,EAAEW,UAAU,IAAIC,kBAAkB,KAAK,MAAM,IAAII,SAAS;MACzEC,QAAQ,EAAEN,UAAU,IAAIC,kBAAkB,KAAK;IACnD,CAAC;IACDZ,UAAU,EAAEA,UAAU;IACtBO,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAEA,UAAU;IACtBR,SAAS,EAAEA,SAAS;IACpBC,gBAAgB,EAAEA,gBAAgB;IAClCC,iBAAiB,EAAEA;EACvB,CAAC;AACL;AAGA,SAAQT,yCAAyC,IAAIwB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}