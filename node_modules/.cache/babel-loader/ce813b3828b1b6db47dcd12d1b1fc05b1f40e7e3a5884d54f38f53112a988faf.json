{"ast":null,"code":"import { TableColumnLayout as $a9e7ae544a4e41dd$export$7ff77a162970b30e } from \"./TableColumnLayout.mjs\";\nimport { useState as $cPT3l$useState, useMemo as $cPT3l$useMemo, useCallback as $cPT3l$useCallback } from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $292bc4e09cd0eb62$export$cb895dcf85db1319(props, state) {\n  let {\n    getDefaultWidth: getDefaultWidth,\n    getDefaultMinWidth: getDefaultMinWidth,\n    tableWidth = 0\n  } = props;\n  let [resizingColumn, setResizingColumn] = (0, $cPT3l$useState)(null);\n  let columnLayout = (0, $cPT3l$useMemo)(() => new (0, $a9e7ae544a4e41dd$export$7ff77a162970b30e)({\n    getDefaultWidth: getDefaultWidth,\n    getDefaultMinWidth: getDefaultMinWidth\n  }), [getDefaultWidth, getDefaultMinWidth]);\n  let [controlledColumns, uncontrolledColumns] = (0, $cPT3l$useMemo)(() => columnLayout.splitColumnsIntoControlledAndUncontrolled(state.collection.columns), [state.collection.columns, columnLayout]);\n  // uncontrolled column widths\n  let [uncontrolledWidths, setUncontrolledWidths] = (0, $cPT3l$useState)(() => columnLayout.getInitialUncontrolledWidths(uncontrolledColumns));\n  // Update uncontrolled widths if the columns changed.\n  let [lastColumns, setLastColumns] = (0, $cPT3l$useState)(state.collection.columns);\n  if (state.collection.columns !== lastColumns) {\n    if (state.collection.columns.length !== lastColumns.length || state.collection.columns.some((c, i) => c.key !== lastColumns[i].key)) {\n      let newUncontrolledWidths = columnLayout.getInitialUncontrolledWidths(uncontrolledColumns);\n      setUncontrolledWidths(newUncontrolledWidths);\n    }\n    setLastColumns(state.collection.columns);\n  }\n  // combine columns back into one map that maintains same order as the columns\n  let colWidths = (0, $cPT3l$useMemo)(() => columnLayout.recombineColumns(state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns), [state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns, columnLayout]);\n  let startResize = (0, $cPT3l$useCallback)(key => {\n    setResizingColumn(key);\n  }, [setResizingColumn]);\n  let updateResizedColumns = (0, $cPT3l$useCallback)((key, width) => {\n    let newControlled = new Map(Array.from(controlledColumns).map(([key, entry]) => [key, entry.props.width]));\n    let newSizes = columnLayout.resizeColumnWidth(tableWidth, state.collection, newControlled, uncontrolledWidths, key, width);\n    let map = new Map(Array.from(uncontrolledColumns).map(([key]) => [key, newSizes.get(key)]));\n    map.set(key, width);\n    setUncontrolledWidths(map);\n    return newSizes;\n  }, [controlledColumns, uncontrolledColumns, setUncontrolledWidths, tableWidth, columnLayout, state.collection, uncontrolledWidths]);\n  let endResize = (0, $cPT3l$useCallback)(() => {\n    setResizingColumn(null);\n  }, [setResizingColumn]);\n  (0, $cPT3l$useMemo)(() => columnLayout.buildColumnWidths(tableWidth, state.collection, colWidths), [tableWidth, state.collection, colWidths, columnLayout]);\n  return (0, $cPT3l$useMemo)(() => ({\n    resizingColumn: resizingColumn,\n    updateResizedColumns: updateResizedColumns,\n    startResize: startResize,\n    endResize: endResize,\n    getColumnWidth: key => columnLayout.getColumnWidth(key),\n    getColumnMinWidth: key => columnLayout.getColumnMinWidth(key),\n    getColumnMaxWidth: key => columnLayout.getColumnMaxWidth(key),\n    tableState: state\n  }), [columnLayout, resizingColumn, updateResizedColumns, startResize, endResize, state]);\n}\nexport { $292bc4e09cd0eb62$export$cb895dcf85db1319 as useTableColumnResizeState };","map":{"version":3,"names":["TableColumnLayout","$a9e7ae544a4e41dd$export$7ff77a162970b30e","useState","$cPT3l$useState","useMemo","$cPT3l$useMemo","useCallback","$cPT3l$useCallback","$292bc4e09cd0eb62$export$cb895dcf85db1319","props","state","getDefaultWidth","getDefaultMinWidth","tableWidth","resizingColumn","setResizingColumn","columnLayout","controlledColumns","uncontrolledColumns","splitColumnsIntoControlledAndUncontrolled","collection","columns","uncontrolledWidths","setUncontrolledWidths","getInitialUncontrolledWidths","lastColumns","setLastColumns","length","some","c","i","key","newUncontrolledWidths","colWidths","recombineColumns","startResize","updateResizedColumns","width","newControlled","Map","Array","from","map","entry","newSizes","resizeColumnWidth","get","set","endResize","buildColumnWidths","getColumnWidth","getColumnMinWidth","getColumnMaxWidth","tableState","useTableColumnResizeState"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/table/dist/useTableColumnResizeState.mjs"],"sourcesContent":["import {TableColumnLayout as $a9e7ae544a4e41dd$export$7ff77a162970b30e} from \"./TableColumnLayout.mjs\";\nimport {useState as $cPT3l$useState, useMemo as $cPT3l$useMemo, useCallback as $cPT3l$useCallback} from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nfunction $292bc4e09cd0eb62$export$cb895dcf85db1319(props, state) {\n    let { getDefaultWidth: getDefaultWidth, getDefaultMinWidth: getDefaultMinWidth, tableWidth: tableWidth = 0 } = props;\n    let [resizingColumn, setResizingColumn] = (0, $cPT3l$useState)(null);\n    let columnLayout = (0, $cPT3l$useMemo)(()=>new (0, $a9e7ae544a4e41dd$export$7ff77a162970b30e)({\n            getDefaultWidth: getDefaultWidth,\n            getDefaultMinWidth: getDefaultMinWidth\n        }), [\n        getDefaultWidth,\n        getDefaultMinWidth\n    ]);\n    let [controlledColumns, uncontrolledColumns] = (0, $cPT3l$useMemo)(()=>columnLayout.splitColumnsIntoControlledAndUncontrolled(state.collection.columns), [\n        state.collection.columns,\n        columnLayout\n    ]);\n    // uncontrolled column widths\n    let [uncontrolledWidths, setUncontrolledWidths] = (0, $cPT3l$useState)(()=>columnLayout.getInitialUncontrolledWidths(uncontrolledColumns));\n    // Update uncontrolled widths if the columns changed.\n    let [lastColumns, setLastColumns] = (0, $cPT3l$useState)(state.collection.columns);\n    if (state.collection.columns !== lastColumns) {\n        if (state.collection.columns.length !== lastColumns.length || state.collection.columns.some((c, i)=>c.key !== lastColumns[i].key)) {\n            let newUncontrolledWidths = columnLayout.getInitialUncontrolledWidths(uncontrolledColumns);\n            setUncontrolledWidths(newUncontrolledWidths);\n        }\n        setLastColumns(state.collection.columns);\n    }\n    // combine columns back into one map that maintains same order as the columns\n    let colWidths = (0, $cPT3l$useMemo)(()=>columnLayout.recombineColumns(state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns), [\n        state.collection.columns,\n        uncontrolledWidths,\n        uncontrolledColumns,\n        controlledColumns,\n        columnLayout\n    ]);\n    let startResize = (0, $cPT3l$useCallback)((key)=>{\n        setResizingColumn(key);\n    }, [\n        setResizingColumn\n    ]);\n    let updateResizedColumns = (0, $cPT3l$useCallback)((key, width)=>{\n        let newControlled = new Map(Array.from(controlledColumns).map(([key, entry])=>[\n                key,\n                entry.props.width\n            ]));\n        let newSizes = columnLayout.resizeColumnWidth(tableWidth, state.collection, newControlled, uncontrolledWidths, key, width);\n        let map = new Map(Array.from(uncontrolledColumns).map(([key])=>[\n                key,\n                newSizes.get(key)\n            ]));\n        map.set(key, width);\n        setUncontrolledWidths(map);\n        return newSizes;\n    }, [\n        controlledColumns,\n        uncontrolledColumns,\n        setUncontrolledWidths,\n        tableWidth,\n        columnLayout,\n        state.collection,\n        uncontrolledWidths\n    ]);\n    let endResize = (0, $cPT3l$useCallback)(()=>{\n        setResizingColumn(null);\n    }, [\n        setResizingColumn\n    ]);\n    (0, $cPT3l$useMemo)(()=>columnLayout.buildColumnWidths(tableWidth, state.collection, colWidths), [\n        tableWidth,\n        state.collection,\n        colWidths,\n        columnLayout\n    ]);\n    return (0, $cPT3l$useMemo)(()=>({\n            resizingColumn: resizingColumn,\n            updateResizedColumns: updateResizedColumns,\n            startResize: startResize,\n            endResize: endResize,\n            getColumnWidth: (key)=>columnLayout.getColumnWidth(key),\n            getColumnMinWidth: (key)=>columnLayout.getColumnMinWidth(key),\n            getColumnMaxWidth: (key)=>columnLayout.getColumnMaxWidth(key),\n            tableState: state\n        }), [\n        columnLayout,\n        resizingColumn,\n        updateResizedColumns,\n        startResize,\n        endResize,\n        state\n    ]);\n}\n\n\nexport {$292bc4e09cd0eb62$export$cb895dcf85db1319 as useTableColumnResizeState};\n//# sourceMappingURL=useTableColumnResizeState.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}