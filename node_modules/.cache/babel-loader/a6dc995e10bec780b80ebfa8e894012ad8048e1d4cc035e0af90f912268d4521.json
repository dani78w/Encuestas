{"ast":null,"code":"import { gridIds as $2140fb2337097f2d$export$552312adfd451dab } from \"./utils.mjs\";\nimport $dDeJM$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { TableKeyboardDelegate as $0ba3c81c7f1caedd$export$da43f8f5cb04028d } from \"./TableKeyboardDelegate.mjs\";\nimport { announce as $dDeJM$announce } from \"@react-aria/live-announcer\";\nimport { useGrid as $dDeJM$useGrid } from \"@react-aria/grid\";\nimport { useId as $dDeJM$useId, useDescription as $dDeJM$useDescription, useUpdateEffect as $dDeJM$useUpdateEffect, mergeProps as $dDeJM$mergeProps } from \"@react-aria/utils\";\nimport { useMemo as $dDeJM$useMemo } from \"react\";\nimport { tableNestedRows as $dDeJM$tableNestedRows } from \"@react-stately/flags\";\nimport { useCollator as $dDeJM$useCollator, useLocale as $dDeJM$useLocale, useLocalizedStringFormatter as $dDeJM$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref) {\n  let {\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized,\n    layout: layout\n  } = props;\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = (0, $dDeJM$useCollator)({\n    usage: \"search\",\n    sensitivity: \"base\"\n  });\n  let {\n    direction: direction\n  } = (0, $dDeJM$useLocale)();\n  let disabledBehavior = state.selectionManager.disabledBehavior;\n  let delegate = (0, $dDeJM$useMemo)(() => keyboardDelegate || new (0, $0ba3c81c7f1caedd$export$da43f8f5cb04028d)({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    disabledBehavior: disabledBehavior,\n    ref: ref,\n    direction: direction,\n    collator: collator,\n    layout: layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, disabledBehavior, ref, direction, collator, layout]);\n  let id = (0, $dDeJM$useId)(props.id);\n  (0, $2140fb2337097f2d$export$552312adfd451dab).set(state, id);\n  let {\n    gridProps: gridProps\n  } = (0, $dDeJM$useGrid)({\n    ...props,\n    id: id,\n    keyboardDelegate: delegate\n  }, state, ref);\n  // Override to include header rows\n  if (isVirtualized) gridProps[\"aria-rowcount\"] = state.collection.size + state.collection.headerRows.length;\n  if ((0, $dDeJM$tableNestedRows)() && \"expandedKeys\" in state) gridProps.role = \"treegrid\";\n  let {\n    column: column,\n    direction: sortDirection\n  } = state.sortDescriptor || {};\n  let stringFormatter = (0, $dDeJM$useLocalizedStringFormatter)((0, $parcel$interopDefault($dDeJM$intlStringsmodulejs)), \"@react-aria/table\");\n  let sortDescription = (0, $dDeJM$useMemo)(() => {\n    var _state_collection_columns_find;\n    let columnName = (_state_collection_columns_find = state.collection.columns.find(c => c.key === column)) === null || _state_collection_columns_find === void 0 ? void 0 : _state_collection_columns_find.textValue;\n    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {\n      columnName: columnName\n    }) : undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortDirection, column, state.collection.columns]);\n  let descriptionProps = (0, $dDeJM$useDescription)(sortDescription);\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  (0, $dDeJM$useUpdateEffect)(() => {\n    (0, $dDeJM$announce)(sortDescription, \"assertive\", 500);\n  }, [sortDescription]);\n  return {\n    gridProps: (0, $dDeJM$mergeProps)(gridProps, descriptionProps, {\n      // merge sort description with long press information\n      \"aria-describedby\": [descriptionProps[\"aria-describedby\"], gridProps[\"aria-describedby\"]].filter(Boolean).join(\" \")\n    })\n  };\n}\nexport { $6e31608fbba75bab$export$25bceaac3c7e4dc7 as useTable };","map":{"version":3,"names":["gridIds","$2140fb2337097f2d$export$552312adfd451dab","$dDeJM$intlStringsmodulejs","TableKeyboardDelegate","$0ba3c81c7f1caedd$export$da43f8f5cb04028d","announce","$dDeJM$announce","useGrid","$dDeJM$useGrid","useId","$dDeJM$useId","useDescription","$dDeJM$useDescription","useUpdateEffect","$dDeJM$useUpdateEffect","mergeProps","$dDeJM$mergeProps","useMemo","$dDeJM$useMemo","tableNestedRows","$dDeJM$tableNestedRows","useCollator","$dDeJM$useCollator","useLocale","$dDeJM$useLocale","useLocalizedStringFormatter","$dDeJM$useLocalizedStringFormatter","$parcel$interopDefault","a","__esModule","default","$6e31608fbba75bab$export$25bceaac3c7e4dc7","props","state","ref","keyboardDelegate","isVirtualized","layout","collator","usage","sensitivity","direction","disabledBehavior","selectionManager","delegate","collection","disabledKeys","id","set","gridProps","size","headerRows","length","role","column","sortDirection","sortDescriptor","stringFormatter","sortDescription","_state_collection_columns_find","columnName","columns","find","c","key","textValue","format","undefined","descriptionProps","filter","Boolean","join","useTable"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/table/dist/useTable.mjs"],"sourcesContent":["import {gridIds as $2140fb2337097f2d$export$552312adfd451dab} from \"./utils.mjs\";\nimport $dDeJM$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport {TableKeyboardDelegate as $0ba3c81c7f1caedd$export$da43f8f5cb04028d} from \"./TableKeyboardDelegate.mjs\";\nimport {announce as $dDeJM$announce} from \"@react-aria/live-announcer\";\nimport {useGrid as $dDeJM$useGrid} from \"@react-aria/grid\";\nimport {useId as $dDeJM$useId, useDescription as $dDeJM$useDescription, useUpdateEffect as $dDeJM$useUpdateEffect, mergeProps as $dDeJM$mergeProps} from \"@react-aria/utils\";\nimport {useMemo as $dDeJM$useMemo} from \"react\";\nimport {tableNestedRows as $dDeJM$tableNestedRows} from \"@react-stately/flags\";\nimport {useCollator as $dDeJM$useCollator, useLocale as $dDeJM$useLocale, useLocalizedStringFormatter as $dDeJM$useLocalizedStringFormatter} from \"@react-aria/i18n\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\n\n\n\n\n\nfunction $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref) {\n    let { keyboardDelegate: keyboardDelegate, isVirtualized: isVirtualized, layout: layout } = props;\n    // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n    // When virtualized, the layout object will be passed in as a prop and override this.\n    let collator = (0, $dDeJM$useCollator)({\n        usage: \"search\",\n        sensitivity: \"base\"\n    });\n    let { direction: direction } = (0, $dDeJM$useLocale)();\n    let disabledBehavior = state.selectionManager.disabledBehavior;\n    let delegate = (0, $dDeJM$useMemo)(()=>keyboardDelegate || new (0, $0ba3c81c7f1caedd$export$da43f8f5cb04028d)({\n            collection: state.collection,\n            disabledKeys: state.disabledKeys,\n            disabledBehavior: disabledBehavior,\n            ref: ref,\n            direction: direction,\n            collator: collator,\n            layout: layout\n        }), [\n        keyboardDelegate,\n        state.collection,\n        state.disabledKeys,\n        disabledBehavior,\n        ref,\n        direction,\n        collator,\n        layout\n    ]);\n    let id = (0, $dDeJM$useId)(props.id);\n    (0, $2140fb2337097f2d$export$552312adfd451dab).set(state, id);\n    let { gridProps: gridProps } = (0, $dDeJM$useGrid)({\n        ...props,\n        id: id,\n        keyboardDelegate: delegate\n    }, state, ref);\n    // Override to include header rows\n    if (isVirtualized) gridProps[\"aria-rowcount\"] = state.collection.size + state.collection.headerRows.length;\n    if ((0, $dDeJM$tableNestedRows)() && \"expandedKeys\" in state) gridProps.role = \"treegrid\";\n    let { column: column, direction: sortDirection } = state.sortDescriptor || {};\n    let stringFormatter = (0, $dDeJM$useLocalizedStringFormatter)((0, ($parcel$interopDefault($dDeJM$intlStringsmodulejs))), \"@react-aria/table\");\n    let sortDescription = (0, $dDeJM$useMemo)(()=>{\n        var _state_collection_columns_find;\n        let columnName = (_state_collection_columns_find = state.collection.columns.find((c)=>c.key === column)) === null || _state_collection_columns_find === void 0 ? void 0 : _state_collection_columns_find.textValue;\n        return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {\n            columnName: columnName\n        }) : undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        sortDirection,\n        column,\n        state.collection.columns\n    ]);\n    let descriptionProps = (0, $dDeJM$useDescription)(sortDescription);\n    // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n    (0, $dDeJM$useUpdateEffect)(()=>{\n        (0, $dDeJM$announce)(sortDescription, \"assertive\", 500);\n    }, [\n        sortDescription\n    ]);\n    return {\n        gridProps: (0, $dDeJM$mergeProps)(gridProps, descriptionProps, {\n            // merge sort description with long press information\n            \"aria-describedby\": [\n                descriptionProps[\"aria-describedby\"],\n                gridProps[\"aria-describedby\"]\n            ].filter(Boolean).join(\" \")\n        })\n    };\n}\n\n\nexport {$6e31608fbba75bab$export$25bceaac3c7e4dc7 as useTable};\n//# sourceMappingURL=useTable.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}