{"ast":null,"code":"import { checkboxGroupData as $1ae600c947479353$export$ec98120685d4f57d } from \"./utils.mjs\";\nimport { filterDOMProps as $gtLuF$filterDOMProps, mergeProps as $gtLuF$mergeProps } from \"@react-aria/utils\";\nimport { useField as $gtLuF$useField } from \"@react-aria/label\";\nimport { useFocusWithin as $gtLuF$useFocusWithin } from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {\n  let {\n    isDisabled: isDisabled,\n    name: name,\n    validationBehavior = \"aria\"\n  } = props;\n  let {\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = state.displayValidation;\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $gtLuF$useField)({\n    ...props,\n    // Checkbox group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: \"span\",\n    isInvalid: isInvalid,\n    errorMessage: props.errorMessage || validationErrors\n  });\n  (0, $1ae600c947479353$export$ec98120685d4f57d).set(state, {\n    name: name,\n    descriptionId: descriptionProps.id,\n    errorMessageId: errorMessageProps.id,\n    validationBehavior: validationBehavior\n  });\n  let domProps = (0, $gtLuF$filterDOMProps)(props, {\n    labelable: true\n  });\n  let {\n    focusWithinProps: focusWithinProps\n  } = (0, $gtLuF$useFocusWithin)({\n    onBlurWithin: props.onBlur,\n    onFocusWithin: props.onFocus,\n    onFocusWithinChange: props.onFocusChange\n  });\n  return {\n    groupProps: (0, $gtLuF$mergeProps)(domProps, {\n      role: \"group\",\n      \"aria-disabled\": isDisabled || undefined,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  };\n}\nexport { $1e9fce0cfacc738b$export$49ff6f28c54f1cbe as useCheckboxGroup };","map":{"version":3,"names":["checkboxGroupData","$1ae600c947479353$export$ec98120685d4f57d","filterDOMProps","$gtLuF$filterDOMProps","mergeProps","$gtLuF$mergeProps","useField","$gtLuF$useField","useFocusWithin","$gtLuF$useFocusWithin","$1e9fce0cfacc738b$export$49ff6f28c54f1cbe","props","state","isDisabled","name","validationBehavior","isInvalid","validationErrors","validationDetails","displayValidation","labelProps","fieldProps","descriptionProps","errorMessageProps","labelElementType","errorMessage","set","descriptionId","id","errorMessageId","domProps","labelable","focusWithinProps","onBlurWithin","onBlur","onFocusWithin","onFocus","onFocusWithinChange","onFocusChange","groupProps","role","undefined","useCheckboxGroup"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/checkbox/dist/useCheckboxGroup.mjs"],"sourcesContent":["import {checkboxGroupData as $1ae600c947479353$export$ec98120685d4f57d} from \"./utils.mjs\";\nimport {filterDOMProps as $gtLuF$filterDOMProps, mergeProps as $gtLuF$mergeProps} from \"@react-aria/utils\";\nimport {useField as $gtLuF$useField} from \"@react-aria/label\";\nimport {useFocusWithin as $gtLuF$useFocusWithin} from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\nfunction $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {\n    let { isDisabled: isDisabled, name: name, validationBehavior: validationBehavior = \"aria\" } = props;\n    let { isInvalid: isInvalid, validationErrors: validationErrors, validationDetails: validationDetails } = state.displayValidation;\n    let { labelProps: labelProps, fieldProps: fieldProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps } = (0, $gtLuF$useField)({\n        ...props,\n        // Checkbox group is not an HTML input element so it\n        // shouldn't be labeled by a <label> element.\n        labelElementType: \"span\",\n        isInvalid: isInvalid,\n        errorMessage: props.errorMessage || validationErrors\n    });\n    (0, $1ae600c947479353$export$ec98120685d4f57d).set(state, {\n        name: name,\n        descriptionId: descriptionProps.id,\n        errorMessageId: errorMessageProps.id,\n        validationBehavior: validationBehavior\n    });\n    let domProps = (0, $gtLuF$filterDOMProps)(props, {\n        labelable: true\n    });\n    let { focusWithinProps: focusWithinProps } = (0, $gtLuF$useFocusWithin)({\n        onBlurWithin: props.onBlur,\n        onFocusWithin: props.onFocus,\n        onFocusWithinChange: props.onFocusChange\n    });\n    return {\n        groupProps: (0, $gtLuF$mergeProps)(domProps, {\n            role: \"group\",\n            \"aria-disabled\": isDisabled || undefined,\n            ...fieldProps,\n            ...focusWithinProps\n        }),\n        labelProps: labelProps,\n        descriptionProps: descriptionProps,\n        errorMessageProps: errorMessageProps,\n        isInvalid: isInvalid,\n        validationErrors: validationErrors,\n        validationDetails: validationDetails\n    };\n}\n\n\nexport {$1e9fce0cfacc738b$export$49ff6f28c54f1cbe as useCheckboxGroup};\n//# sourceMappingURL=useCheckboxGroup.mjs.map\n"],"mappings":"AAAA,SAAQA,iBAAiB,IAAIC,yCAAyC,QAAO,aAAa;AAC1F,SAAQC,cAAc,IAAIC,qBAAqB,EAAEC,UAAU,IAAIC,iBAAiB,QAAO,mBAAmB;AAC1G,SAAQC,QAAQ,IAAIC,eAAe,QAAO,mBAAmB;AAC7D,SAAQC,cAAc,IAAIC,qBAAqB,QAAO,0BAA0B;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC7D,IAAI;IAAEC,UAAU,EAAEA,UAAU;IAAEC,IAAI,EAAEA,IAAI;IAAsBC,kBAAkB,GAAG;EAAO,CAAC,GAAGJ,KAAK;EACnG,IAAI;IAAEK,SAAS,EAAEA,SAAS;IAAEC,gBAAgB,EAAEA,gBAAgB;IAAEC,iBAAiB,EAAEA;EAAkB,CAAC,GAAGN,KAAK,CAACO,iBAAiB;EAChI,IAAI;IAAEC,UAAU,EAAEA,UAAU;IAAEC,UAAU,EAAEA,UAAU;IAAEC,gBAAgB,EAAEA,gBAAgB;IAAEC,iBAAiB,EAAEA;EAAkB,CAAC,GAAG,CAAC,CAAC,EAAEhB,eAAe,EAAE;IACpJ,GAAGI,KAAK;IACR;IACA;IACAa,gBAAgB,EAAE,MAAM;IACxBR,SAAS,EAAEA,SAAS;IACpBS,YAAY,EAAEd,KAAK,CAACc,YAAY,IAAIR;EACxC,CAAC,CAAC;EACF,CAAC,CAAC,EAAEhB,yCAAyC,EAAEyB,GAAG,CAACd,KAAK,EAAE;IACtDE,IAAI,EAAEA,IAAI;IACVa,aAAa,EAAEL,gBAAgB,CAACM,EAAE;IAClCC,cAAc,EAAEN,iBAAiB,CAACK,EAAE;IACpCb,kBAAkB,EAAEA;EACxB,CAAC,CAAC;EACF,IAAIe,QAAQ,GAAG,CAAC,CAAC,EAAE3B,qBAAqB,EAAEQ,KAAK,EAAE;IAC7CoB,SAAS,EAAE;EACf,CAAC,CAAC;EACF,IAAI;IAAEC,gBAAgB,EAAEA;EAAiB,CAAC,GAAG,CAAC,CAAC,EAAEvB,qBAAqB,EAAE;IACpEwB,YAAY,EAAEtB,KAAK,CAACuB,MAAM;IAC1BC,aAAa,EAAExB,KAAK,CAACyB,OAAO;IAC5BC,mBAAmB,EAAE1B,KAAK,CAAC2B;EAC/B,CAAC,CAAC;EACF,OAAO;IACHC,UAAU,EAAE,CAAC,CAAC,EAAElC,iBAAiB,EAAEyB,QAAQ,EAAE;MACzCU,IAAI,EAAE,OAAO;MACb,eAAe,EAAE3B,UAAU,IAAI4B,SAAS;MACxC,GAAGpB,UAAU;MACb,GAAGW;IACP,CAAC,CAAC;IACFZ,UAAU,EAAEA,UAAU;IACtBE,gBAAgB,EAAEA,gBAAgB;IAClCC,iBAAiB,EAAEA,iBAAiB;IACpCP,SAAS,EAAEA,SAAS;IACpBC,gBAAgB,EAAEA,gBAAgB;IAClCC,iBAAiB,EAAEA;EACvB,CAAC;AACL;AAGA,SAAQR,yCAAyC,IAAIgC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}