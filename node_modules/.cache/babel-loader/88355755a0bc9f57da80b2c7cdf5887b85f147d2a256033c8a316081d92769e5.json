{"ast":null,"code":"import { Point as $3041db3296945e6e$export$baf26146a414f24a } from \"./Point.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nclass $60423f92c7f9ad87$export$c79fc6492f3af13d {\n  /**\n  * The maximum x-coordinate in the rectangle.\n  */\n  get maxX() {\n    return this.x + this.width;\n  }\n  /**\n  * The maximum y-coordinate in the rectangle.\n  */\n  get maxY() {\n    return this.y + this.height;\n  }\n  /**\n  * The area of the rectangle.\n  */\n  get area() {\n    return this.width * this.height;\n  }\n  /**\n  * The top left corner of the rectangle.\n  */\n  get topLeft() {\n    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.y);\n  }\n  /**\n  * The top right corner of the rectangle.\n  */\n  get topRight() {\n    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.y);\n  }\n  /**\n  * The bottom left corner of the rectangle.\n  */\n  get bottomLeft() {\n    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.maxY);\n  }\n  /**\n  * The bottom right corner of the rectangle.\n  */\n  get bottomRight() {\n    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.maxY);\n  }\n  /**\n  * Returns whether this rectangle intersects another rectangle.\n  * @param rect - The rectangle to check.\n  */\n  intersects(rect) {\n    return this.x <= rect.x + rect.width && rect.x <= this.x + this.width && this.y <= rect.y + rect.height && rect.y <= this.y + this.height;\n  }\n  /**\n  * Returns whether this rectangle fully contains another rectangle.\n  * @param rect - The rectangle to check.\n  */\n  containsRect(rect) {\n    return this.x <= rect.x && this.y <= rect.y && this.maxX >= rect.maxX && this.maxY >= rect.maxY;\n  }\n  /**\n  * Returns whether the rectangle contains the given point.\n  * @param point - The point to check.\n  */\n  containsPoint(point) {\n    return this.x <= point.x && this.y <= point.y && this.maxX >= point.x && this.maxY >= point.y;\n  }\n  /**\n  * Returns the first corner of this rectangle (from top to bottom, left to right)\n  * that is contained in the given rectangle, or null of the rectangles do not intersect.\n  * @param rect - The rectangle to check.\n  */\n  getCornerInRect(rect) {\n    for (let key of [\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"]) {\n      if (rect.containsPoint(this[key])) return key;\n    }\n    return null;\n  }\n  equals(rect) {\n    return rect.x === this.x && rect.y === this.y && rect.width === this.width && rect.height === this.height;\n  }\n  pointEquals(point) {\n    return this.x === point.x && this.y === point.y;\n  }\n  sizeEquals(size) {\n    return this.width === size.width && this.height === size.height;\n  }\n  /**\n  * Returns the union of this Rect and another.\n  */\n  union(other) {\n    let x = Math.min(this.x, other.x);\n    let y = Math.min(this.y, other.y);\n    let width = Math.max(this.maxX, other.maxX) - x;\n    let height = Math.max(this.maxY, other.maxY) - y;\n    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x, y, width, height);\n  }\n  /**\n  * Returns the intersection of this Rect with another.\n  * If the rectangles do not intersect, an all zero Rect is returned.\n  */\n  intersection(other) {\n    if (!this.intersects(other)) return new $60423f92c7f9ad87$export$c79fc6492f3af13d(0, 0, 0, 0);\n    let x = Math.max(this.x, other.x);\n    let y = Math.max(this.y, other.y);\n    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x, y, Math.min(this.maxX, other.maxX) - x, Math.min(this.maxY, other.maxY) - y);\n  }\n  /**\n  * Returns a copy of this rectangle.\n  */\n  copy() {\n    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(this.x, this.y, this.width, this.height);\n  }\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n}\nexport { $60423f92c7f9ad87$export$c79fc6492f3af13d as Rect };","map":{"version":3,"names":["Point","$3041db3296945e6e$export$baf26146a414f24a","$60423f92c7f9ad87$export$c79fc6492f3af13d","maxX","x","width","maxY","y","height","area","topLeft","topRight","bottomLeft","bottomRight","intersects","rect","containsRect","containsPoint","point","getCornerInRect","key","equals","pointEquals","sizeEquals","size","union","other","Math","min","max","intersection","copy","constructor","Rect"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/virtualizer/dist/Rect.mjs"],"sourcesContent":["import {Point as $3041db3296945e6e$export$baf26146a414f24a} from \"./Point.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nclass $60423f92c7f9ad87$export$c79fc6492f3af13d {\n    /**\n   * The maximum x-coordinate in the rectangle.\n   */ get maxX() {\n        return this.x + this.width;\n    }\n    /**\n   * The maximum y-coordinate in the rectangle.\n   */ get maxY() {\n        return this.y + this.height;\n    }\n    /**\n   * The area of the rectangle.\n   */ get area() {\n        return this.width * this.height;\n    }\n    /**\n   * The top left corner of the rectangle.\n   */ get topLeft() {\n        return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.y);\n    }\n    /**\n   * The top right corner of the rectangle.\n   */ get topRight() {\n        return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.y);\n    }\n    /**\n   * The bottom left corner of the rectangle.\n   */ get bottomLeft() {\n        return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.maxY);\n    }\n    /**\n   * The bottom right corner of the rectangle.\n   */ get bottomRight() {\n        return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.maxY);\n    }\n    /**\n   * Returns whether this rectangle intersects another rectangle.\n   * @param rect - The rectangle to check.\n   */ intersects(rect) {\n        return this.x <= rect.x + rect.width && rect.x <= this.x + this.width && this.y <= rect.y + rect.height && rect.y <= this.y + this.height;\n    }\n    /**\n   * Returns whether this rectangle fully contains another rectangle.\n   * @param rect - The rectangle to check.\n   */ containsRect(rect) {\n        return this.x <= rect.x && this.y <= rect.y && this.maxX >= rect.maxX && this.maxY >= rect.maxY;\n    }\n    /**\n   * Returns whether the rectangle contains the given point.\n   * @param point - The point to check.\n   */ containsPoint(point) {\n        return this.x <= point.x && this.y <= point.y && this.maxX >= point.x && this.maxY >= point.y;\n    }\n    /**\n   * Returns the first corner of this rectangle (from top to bottom, left to right)\n   * that is contained in the given rectangle, or null of the rectangles do not intersect.\n   * @param rect - The rectangle to check.\n   */ getCornerInRect(rect) {\n        for (let key of [\n            \"topLeft\",\n            \"topRight\",\n            \"bottomLeft\",\n            \"bottomRight\"\n        ]){\n            if (rect.containsPoint(this[key])) return key;\n        }\n        return null;\n    }\n    equals(rect) {\n        return rect.x === this.x && rect.y === this.y && rect.width === this.width && rect.height === this.height;\n    }\n    pointEquals(point) {\n        return this.x === point.x && this.y === point.y;\n    }\n    sizeEquals(size) {\n        return this.width === size.width && this.height === size.height;\n    }\n    /**\n   * Returns the union of this Rect and another.\n   */ union(other) {\n        let x = Math.min(this.x, other.x);\n        let y = Math.min(this.y, other.y);\n        let width = Math.max(this.maxX, other.maxX) - x;\n        let height = Math.max(this.maxY, other.maxY) - y;\n        return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x, y, width, height);\n    }\n    /**\n   * Returns the intersection of this Rect with another.\n   * If the rectangles do not intersect, an all zero Rect is returned.\n   */ intersection(other) {\n        if (!this.intersects(other)) return new $60423f92c7f9ad87$export$c79fc6492f3af13d(0, 0, 0, 0);\n        let x = Math.max(this.x, other.x);\n        let y = Math.max(this.y, other.y);\n        return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x, y, Math.min(this.maxX, other.maxX) - x, Math.min(this.maxY, other.maxY) - y);\n    }\n    /**\n   * Returns a copy of this rectangle.\n   */ copy() {\n        return new $60423f92c7f9ad87$export$c79fc6492f3af13d(this.x, this.y, this.width, this.height);\n    }\n    constructor(x = 0, y = 0, width = 0, height = 0){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n\n\nexport {$60423f92c7f9ad87$export$c79fc6492f3af13d as Rect};\n//# sourceMappingURL=Rect.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}