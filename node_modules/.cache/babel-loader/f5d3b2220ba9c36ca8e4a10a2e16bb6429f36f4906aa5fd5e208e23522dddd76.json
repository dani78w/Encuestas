{"ast":null,"code":"import { createContext as $69F46$createContext, useMemo as $69F46$useMemo, useContext as $69F46$useContext, useState as $69F46$useState, useRef as $69F46$useRef, useEffect as $69F46$useEffect } from \"react\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nconst $e5be200c675c3b3a$export$aca958c65c314e6c = {\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valueMissing: false,\n  valid: true\n};\nconst $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE = {\n  ...$e5be200c675c3b3a$export$aca958c65c314e6c,\n  customError: true,\n  valid: false\n};\nconst $e5be200c675c3b3a$export$dad6ae84456c676a = {\n  isInvalid: false,\n  validationDetails: $e5be200c675c3b3a$export$aca958c65c314e6c,\n  validationErrors: []\n};\nconst $e5be200c675c3b3a$export$571b5131b7e65c11 = (0, $69F46$createContext)({});\nconst $e5be200c675c3b3a$export$a763b9476acd3eb = \"__formValidationState\" + Date.now();\nfunction $e5be200c675c3b3a$export$fc1a364ae1f3ff10(props) {\n  // Private prop for parent components to pass state to children.\n  if (props[$e5be200c675c3b3a$export$a763b9476acd3eb]) {\n    let {\n      realtimeValidation: realtimeValidation,\n      displayValidation: displayValidation,\n      updateValidation: updateValidation,\n      resetValidation: resetValidation,\n      commitValidation: commitValidation\n    } = props[$e5be200c675c3b3a$export$a763b9476acd3eb];\n    return {\n      realtimeValidation: realtimeValidation,\n      displayValidation: displayValidation,\n      updateValidation: updateValidation,\n      resetValidation: resetValidation,\n      commitValidation: commitValidation\n    };\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return $e5be200c675c3b3a$var$useFormValidationStateImpl(props);\n}\nfunction $e5be200c675c3b3a$var$useFormValidationStateImpl(props) {\n  let {\n    isInvalid: isInvalid,\n    validationState: validationState,\n    name: name,\n    value: value,\n    builtinValidation: builtinValidation,\n    validate: validate,\n    validationBehavior = \"aria\"\n  } = props;\n  // backward compatibility.\n  if (validationState) isInvalid || (isInvalid = validationState === \"invalid\");\n  // If the isInvalid prop is controlled, update validation result in realtime.\n  let controlledError = isInvalid !== undefined ? {\n    isInvalid: isInvalid,\n    validationErrors: [],\n    validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE\n  } : null;\n  // Perform custom client side validation.\n  let clientError = (0, $69F46$useMemo)(() => $e5be200c675c3b3a$var$getValidationResult($e5be200c675c3b3a$var$runValidate(validate, value)), [validate, value]);\n  if (builtinValidation === null || builtinValidation === void 0 ? void 0 : builtinValidation.validationDetails.valid) builtinValidation = null;\n  // Get relevant server errors from the form.\n  let serverErrors = (0, $69F46$useContext)($e5be200c675c3b3a$export$571b5131b7e65c11);\n  let serverErrorMessages = (0, $69F46$useMemo)(() => {\n    if (name) return Array.isArray(name) ? name.flatMap(name => $e5be200c675c3b3a$var$asArray(serverErrors[name])) : $e5be200c675c3b3a$var$asArray(serverErrors[name]);\n    return [];\n  }, [serverErrors, name]);\n  // Show server errors when the form gets a new value, and clear when the user changes the value.\n  let [lastServerErrors, setLastServerErrors] = (0, $69F46$useState)(serverErrors);\n  let [isServerErrorCleared, setServerErrorCleared] = (0, $69F46$useState)(false);\n  if (serverErrors !== lastServerErrors) {\n    setLastServerErrors(serverErrors);\n    setServerErrorCleared(false);\n  }\n  let serverError = (0, $69F46$useMemo)(() => $e5be200c675c3b3a$var$getValidationResult(isServerErrorCleared ? [] : serverErrorMessages), [isServerErrorCleared, serverErrorMessages]);\n  // Track the next validation state in a ref until commitValidation is called.\n  let nextValidation = (0, $69F46$useRef)($e5be200c675c3b3a$export$dad6ae84456c676a);\n  let [currentValidity, setCurrentValidity] = (0, $69F46$useState)($e5be200c675c3b3a$export$dad6ae84456c676a);\n  let lastError = (0, $69F46$useRef)($e5be200c675c3b3a$export$dad6ae84456c676a);\n  let commitValidation = () => {\n    if (!commitQueued) return;\n    setCommitQueued(false);\n    let error = clientError || builtinValidation || nextValidation.current;\n    if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {\n      lastError.current = error;\n      setCurrentValidity(error);\n    }\n  };\n  let [commitQueued, setCommitQueued] = (0, $69F46$useState)(false);\n  (0, $69F46$useEffect)(commitValidation);\n  // realtimeValidation is used to update the native input element's state based on custom validation logic.\n  // displayValidation is the currently displayed validation state that the user sees (e.g. on input change/form submit).\n  // With validationBehavior=\"aria\", all errors are displayed in realtime rather than on submit.\n  let realtimeValidation = controlledError || serverError || clientError || builtinValidation || $e5be200c675c3b3a$export$dad6ae84456c676a;\n  let displayValidation = validationBehavior === \"native\" ? controlledError || serverError || currentValidity : controlledError || serverError || clientError || builtinValidation || currentValidity;\n  return {\n    realtimeValidation: realtimeValidation,\n    displayValidation: displayValidation,\n    updateValidation(value) {\n      // If validationBehavior is 'aria', update in realtime. Otherwise, store in a ref until commit.\n      if (validationBehavior === \"aria\" && !$e5be200c675c3b3a$var$isEqualValidation(currentValidity, value)) setCurrentValidity(value);else nextValidation.current = value;\n    },\n    resetValidation() {\n      // Update the currently displayed validation state to valid on form reset,\n      // even if the native validity says it isn't. It'll show again on the next form submit.\n      let error = $e5be200c675c3b3a$export$dad6ae84456c676a;\n      if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {\n        lastError.current = error;\n        setCurrentValidity(error);\n      }\n      // Do not commit validation after the next render. This avoids a condition where\n      // useSelect calls commitValidation inside an onReset handler.\n      if (validationBehavior === \"native\") setCommitQueued(false);\n      setServerErrorCleared(true);\n    },\n    commitValidation() {\n      // Commit validation state so the user sees it on blur/change/submit. Also clear any server errors.\n      // Wait until after the next render to commit so that the latest value has been validated.\n      if (validationBehavior === \"native\") setCommitQueued(true);\n      setServerErrorCleared(true);\n    }\n  };\n}\nfunction $e5be200c675c3b3a$var$asArray(v) {\n  if (!v) return [];\n  return Array.isArray(v) ? v : [v];\n}\nfunction $e5be200c675c3b3a$var$runValidate(validate, value) {\n  if (typeof validate === \"function\") {\n    let e = validate(value);\n    if (e && typeof e !== \"boolean\") return $e5be200c675c3b3a$var$asArray(e);\n  }\n  return [];\n}\nfunction $e5be200c675c3b3a$var$getValidationResult(errors) {\n  return errors.length ? {\n    isInvalid: true,\n    validationErrors: errors,\n    validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE\n  } : null;\n}\nfunction $e5be200c675c3b3a$var$isEqualValidation(a, b) {\n  if (a === b) return true;\n  return a && b && a.isInvalid === b.isInvalid && a.validationErrors.length === b.validationErrors.length && a.validationErrors.every((a, i) => a === b.validationErrors[i]) && Object.entries(a.validationDetails).every(([k, v]) => b.validationDetails[k] === v);\n}\nfunction $e5be200c675c3b3a$export$75ee7c75d68f5b0e(...results) {\n  let errors = new Set();\n  let isInvalid = false;\n  let validationDetails = {\n    ...$e5be200c675c3b3a$export$aca958c65c314e6c\n  };\n  for (let v of results) {\n    var _validationDetails, _key;\n    for (let e of v.validationErrors) errors.add(e);\n    // Only these properties apply for checkboxes.\n    isInvalid || (isInvalid = v.isInvalid);\n    for (let key in validationDetails) (_validationDetails = validationDetails)[_key = key] || (_validationDetails[_key] = v.validationDetails[key]);\n  }\n  validationDetails.valid = !isInvalid;\n  return {\n    isInvalid: isInvalid,\n    validationErrors: [...errors],\n    validationDetails: validationDetails\n  };\n}\nexport { $e5be200c675c3b3a$export$aca958c65c314e6c as VALID_VALIDITY_STATE, $e5be200c675c3b3a$export$dad6ae84456c676a as DEFAULT_VALIDATION_RESULT, $e5be200c675c3b3a$export$571b5131b7e65c11 as FormValidationContext, $e5be200c675c3b3a$export$a763b9476acd3eb as privateValidationStateProp, $e5be200c675c3b3a$export$fc1a364ae1f3ff10 as useFormValidationState, $e5be200c675c3b3a$export$75ee7c75d68f5b0e as mergeValidation };","map":{"version":3,"names":["createContext","$69F46$createContext","useMemo","$69F46$useMemo","useContext","$69F46$useContext","useState","$69F46$useState","useRef","$69F46$useRef","useEffect","$69F46$useEffect","$e5be200c675c3b3a$export$aca958c65c314e6c","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","valid","$e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE","$e5be200c675c3b3a$export$dad6ae84456c676a","isInvalid","validationDetails","validationErrors","$e5be200c675c3b3a$export$571b5131b7e65c11","$e5be200c675c3b3a$export$a763b9476acd3eb","Date","now","$e5be200c675c3b3a$export$fc1a364ae1f3ff10","props","realtimeValidation","displayValidation","updateValidation","resetValidation","commitValidation","$e5be200c675c3b3a$var$useFormValidationStateImpl","validationState","name","value","builtinValidation","validate","validationBehavior","controlledError","undefined","clientError","$e5be200c675c3b3a$var$getValidationResult","$e5be200c675c3b3a$var$runValidate","serverErrors","serverErrorMessages","Array","isArray","flatMap","$e5be200c675c3b3a$var$asArray","lastServerErrors","setLastServerErrors","isServerErrorCleared","setServerErrorCleared","serverError","nextValidation","currentValidity","setCurrentValidity","lastError","commitQueued","setCommitQueued","error","current","$e5be200c675c3b3a$var$isEqualValidation","v","e","errors","length","a","b","every","i","Object","entries","k","$e5be200c675c3b3a$export$75ee7c75d68f5b0e","results","Set","_validationDetails","_key","add","key","VALID_VALIDITY_STATE","DEFAULT_VALIDATION_RESULT","FormValidationContext","privateValidationStateProp","useFormValidationState","mergeValidation"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/form/dist/useFormValidationState.mjs"],"sourcesContent":["import {createContext as $69F46$createContext, useMemo as $69F46$useMemo, useContext as $69F46$useContext, useState as $69F46$useState, useRef as $69F46$useRef, useEffect as $69F46$useEffect} from \"react\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nconst $e5be200c675c3b3a$export$aca958c65c314e6c = {\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n    valid: true\n};\nconst $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE = {\n    ...$e5be200c675c3b3a$export$aca958c65c314e6c,\n    customError: true,\n    valid: false\n};\nconst $e5be200c675c3b3a$export$dad6ae84456c676a = {\n    isInvalid: false,\n    validationDetails: $e5be200c675c3b3a$export$aca958c65c314e6c,\n    validationErrors: []\n};\nconst $e5be200c675c3b3a$export$571b5131b7e65c11 = (0, $69F46$createContext)({});\nconst $e5be200c675c3b3a$export$a763b9476acd3eb = \"__formValidationState\" + Date.now();\nfunction $e5be200c675c3b3a$export$fc1a364ae1f3ff10(props) {\n    // Private prop for parent components to pass state to children.\n    if (props[$e5be200c675c3b3a$export$a763b9476acd3eb]) {\n        let { realtimeValidation: realtimeValidation, displayValidation: displayValidation, updateValidation: updateValidation, resetValidation: resetValidation, commitValidation: commitValidation } = props[$e5be200c675c3b3a$export$a763b9476acd3eb];\n        return {\n            realtimeValidation: realtimeValidation,\n            displayValidation: displayValidation,\n            updateValidation: updateValidation,\n            resetValidation: resetValidation,\n            commitValidation: commitValidation\n        };\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return $e5be200c675c3b3a$var$useFormValidationStateImpl(props);\n}\nfunction $e5be200c675c3b3a$var$useFormValidationStateImpl(props) {\n    let { isInvalid: isInvalid, validationState: validationState, name: name, value: value, builtinValidation: builtinValidation, validate: validate, validationBehavior: validationBehavior = \"aria\" } = props;\n    // backward compatibility.\n    if (validationState) isInvalid || (isInvalid = validationState === \"invalid\");\n    // If the isInvalid prop is controlled, update validation result in realtime.\n    let controlledError = isInvalid !== undefined ? {\n        isInvalid: isInvalid,\n        validationErrors: [],\n        validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE\n    } : null;\n    // Perform custom client side validation.\n    let clientError = (0, $69F46$useMemo)(()=>$e5be200c675c3b3a$var$getValidationResult($e5be200c675c3b3a$var$runValidate(validate, value)), [\n        validate,\n        value\n    ]);\n    if (builtinValidation === null || builtinValidation === void 0 ? void 0 : builtinValidation.validationDetails.valid) builtinValidation = null;\n    // Get relevant server errors from the form.\n    let serverErrors = (0, $69F46$useContext)($e5be200c675c3b3a$export$571b5131b7e65c11);\n    let serverErrorMessages = (0, $69F46$useMemo)(()=>{\n        if (name) return Array.isArray(name) ? name.flatMap((name)=>$e5be200c675c3b3a$var$asArray(serverErrors[name])) : $e5be200c675c3b3a$var$asArray(serverErrors[name]);\n        return [];\n    }, [\n        serverErrors,\n        name\n    ]);\n    // Show server errors when the form gets a new value, and clear when the user changes the value.\n    let [lastServerErrors, setLastServerErrors] = (0, $69F46$useState)(serverErrors);\n    let [isServerErrorCleared, setServerErrorCleared] = (0, $69F46$useState)(false);\n    if (serverErrors !== lastServerErrors) {\n        setLastServerErrors(serverErrors);\n        setServerErrorCleared(false);\n    }\n    let serverError = (0, $69F46$useMemo)(()=>$e5be200c675c3b3a$var$getValidationResult(isServerErrorCleared ? [] : serverErrorMessages), [\n        isServerErrorCleared,\n        serverErrorMessages\n    ]);\n    // Track the next validation state in a ref until commitValidation is called.\n    let nextValidation = (0, $69F46$useRef)($e5be200c675c3b3a$export$dad6ae84456c676a);\n    let [currentValidity, setCurrentValidity] = (0, $69F46$useState)($e5be200c675c3b3a$export$dad6ae84456c676a);\n    let lastError = (0, $69F46$useRef)($e5be200c675c3b3a$export$dad6ae84456c676a);\n    let commitValidation = ()=>{\n        if (!commitQueued) return;\n        setCommitQueued(false);\n        let error = clientError || builtinValidation || nextValidation.current;\n        if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {\n            lastError.current = error;\n            setCurrentValidity(error);\n        }\n    };\n    let [commitQueued, setCommitQueued] = (0, $69F46$useState)(false);\n    (0, $69F46$useEffect)(commitValidation);\n    // realtimeValidation is used to update the native input element's state based on custom validation logic.\n    // displayValidation is the currently displayed validation state that the user sees (e.g. on input change/form submit).\n    // With validationBehavior=\"aria\", all errors are displayed in realtime rather than on submit.\n    let realtimeValidation = controlledError || serverError || clientError || builtinValidation || $e5be200c675c3b3a$export$dad6ae84456c676a;\n    let displayValidation = validationBehavior === \"native\" ? controlledError || serverError || currentValidity : controlledError || serverError || clientError || builtinValidation || currentValidity;\n    return {\n        realtimeValidation: realtimeValidation,\n        displayValidation: displayValidation,\n        updateValidation (value) {\n            // If validationBehavior is 'aria', update in realtime. Otherwise, store in a ref until commit.\n            if (validationBehavior === \"aria\" && !$e5be200c675c3b3a$var$isEqualValidation(currentValidity, value)) setCurrentValidity(value);\n            else nextValidation.current = value;\n        },\n        resetValidation () {\n            // Update the currently displayed validation state to valid on form reset,\n            // even if the native validity says it isn't. It'll show again on the next form submit.\n            let error = $e5be200c675c3b3a$export$dad6ae84456c676a;\n            if (!$e5be200c675c3b3a$var$isEqualValidation(error, lastError.current)) {\n                lastError.current = error;\n                setCurrentValidity(error);\n            }\n            // Do not commit validation after the next render. This avoids a condition where\n            // useSelect calls commitValidation inside an onReset handler.\n            if (validationBehavior === \"native\") setCommitQueued(false);\n            setServerErrorCleared(true);\n        },\n        commitValidation () {\n            // Commit validation state so the user sees it on blur/change/submit. Also clear any server errors.\n            // Wait until after the next render to commit so that the latest value has been validated.\n            if (validationBehavior === \"native\") setCommitQueued(true);\n            setServerErrorCleared(true);\n        }\n    };\n}\nfunction $e5be200c675c3b3a$var$asArray(v) {\n    if (!v) return [];\n    return Array.isArray(v) ? v : [\n        v\n    ];\n}\nfunction $e5be200c675c3b3a$var$runValidate(validate, value) {\n    if (typeof validate === \"function\") {\n        let e = validate(value);\n        if (e && typeof e !== \"boolean\") return $e5be200c675c3b3a$var$asArray(e);\n    }\n    return [];\n}\nfunction $e5be200c675c3b3a$var$getValidationResult(errors) {\n    return errors.length ? {\n        isInvalid: true,\n        validationErrors: errors,\n        validationDetails: $e5be200c675c3b3a$var$CUSTOM_VALIDITY_STATE\n    } : null;\n}\nfunction $e5be200c675c3b3a$var$isEqualValidation(a, b) {\n    if (a === b) return true;\n    return a && b && a.isInvalid === b.isInvalid && a.validationErrors.length === b.validationErrors.length && a.validationErrors.every((a, i)=>a === b.validationErrors[i]) && Object.entries(a.validationDetails).every(([k, v])=>b.validationDetails[k] === v);\n}\nfunction $e5be200c675c3b3a$export$75ee7c75d68f5b0e(...results) {\n    let errors = new Set();\n    let isInvalid = false;\n    let validationDetails = {\n        ...$e5be200c675c3b3a$export$aca958c65c314e6c\n    };\n    for (let v of results){\n        var _validationDetails, _key;\n        for (let e of v.validationErrors)errors.add(e);\n        // Only these properties apply for checkboxes.\n        isInvalid || (isInvalid = v.isInvalid);\n        for(let key in validationDetails)(_validationDetails = validationDetails)[_key = key] || (_validationDetails[_key] = v.validationDetails[key]);\n    }\n    validationDetails.valid = !isInvalid;\n    return {\n        isInvalid: isInvalid,\n        validationErrors: [\n            ...errors\n        ],\n        validationDetails: validationDetails\n    };\n}\n\n\nexport {$e5be200c675c3b3a$export$aca958c65c314e6c as VALID_VALIDITY_STATE, $e5be200c675c3b3a$export$dad6ae84456c676a as DEFAULT_VALIDATION_RESULT, $e5be200c675c3b3a$export$571b5131b7e65c11 as FormValidationContext, $e5be200c675c3b3a$export$a763b9476acd3eb as privateValidationStateProp, $e5be200c675c3b3a$export$fc1a364ae1f3ff10 as useFormValidationState, $e5be200c675c3b3a$export$75ee7c75d68f5b0e as mergeValidation};\n//# sourceMappingURL=useFormValidationState.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}