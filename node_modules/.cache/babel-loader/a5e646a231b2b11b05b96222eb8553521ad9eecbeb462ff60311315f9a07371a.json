{"ast":null,"code":"import { getChildNodes as $7nPCv$getChildNodes, getLastItem as $7nPCv$getLastItem, getFirstItem as $7nPCv$getFirstItem } from \"@react-stately/collections\";\nimport { useMultipleSelectionState as $7nPCv$useMultipleSelectionState, SelectionManager as $7nPCv$SelectionManager } from \"@react-stately/selection\";\nimport { useMemo as $7nPCv$useMemo, useRef as $7nPCv$useRef, useEffect as $7nPCv$useEffect } from \"react\";\nfunction $62967d126f3aa823$export$4007ac09ff9c68ed(props) {\n  let {\n    collection: collection,\n    focusMode: focusMode\n  } = props;\n  let selectionState = (0, $7nPCv$useMultipleSelectionState)(props);\n  let disabledKeys = (0, $7nPCv$useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : new Set(), [props.disabledKeys]);\n  let setFocusedKey = selectionState.setFocusedKey;\n  selectionState.setFocusedKey = (key, child) => {\n    // If focusMode is cell and an item is focused, focus a child cell instead.\n    if (focusMode === \"cell\" && key != null) {\n      let item = collection.getItem(key);\n      if ((item === null || item === void 0 ? void 0 : item.type) === \"item\") {\n        var _getLastItem, _getFirstItem;\n        let children = (0, $7nPCv$getChildNodes)(item, collection);\n        if (child === \"last\") key = (_getLastItem = (0, $7nPCv$getLastItem)(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key;else key = (_getFirstItem = (0, $7nPCv$getFirstItem)(children)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key;\n      }\n    }\n    setFocusedKey(key, child);\n  };\n  let selectionManager = (0, $7nPCv$useMemo)(() => new (0, $7nPCv$SelectionManager)(collection, selectionState), [collection, selectionState]);\n  // Reset focused key if that item is deleted from the collection.\n  const cachedCollection = (0, $7nPCv$useRef)(null);\n  (0, $7nPCv$useEffect)(() => {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {\n      const node = cachedCollection.current.getItem(selectionState.focusedKey);\n      const parentNode = node.parentKey != null && (node.type === \"cell\" || node.type === \"rowheader\" || node.type === \"column\") ? cachedCollection.current.getItem(node.parentKey) : node;\n      const cachedRows = cachedCollection.current.rows;\n      const rows = collection.rows;\n      const diff = cachedRows.length - rows.length;\n      let index = Math.min(diff > 1 ? Math.max(parentNode.index - diff + 1, 0) : parentNode.index, rows.length - 1);\n      let newRow;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(rows[index].key) && rows[index].type !== \"headerrow\") {\n          newRow = rows[index];\n          break;\n        }\n        // Find next, not disabled row.\n        if (index < rows.length - 1) index++;else {\n          if (index > parentNode.index) index = parentNode.index;\n          index--;\n        }\n      }\n      if (newRow) {\n        const childNodes = newRow.hasChildNodes ? [...(0, $7nPCv$getChildNodes)(newRow, collection)] : [];\n        const keyToFocus = newRow.hasChildNodes && parentNode !== node && node.index < childNodes.length ? childNodes[node.index].key : newRow.key;\n        selectionState.setFocusedKey(keyToFocus);\n      } else selectionState.setFocusedKey(null);\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n  return {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    isKeyboardNavigationDisabled: false,\n    selectionManager: selectionManager\n  };\n}\nexport { $62967d126f3aa823$export$4007ac09ff9c68ed as useGridState };","map":{"version":3,"names":["getChildNodes","$7nPCv$getChildNodes","getLastItem","$7nPCv$getLastItem","getFirstItem","$7nPCv$getFirstItem","useMultipleSelectionState","$7nPCv$useMultipleSelectionState","SelectionManager","$7nPCv$SelectionManager","useMemo","$7nPCv$useMemo","useRef","$7nPCv$useRef","useEffect","$7nPCv$useEffect","$62967d126f3aa823$export$4007ac09ff9c68ed","props","collection","focusMode","selectionState","disabledKeys","Set","setFocusedKey","key","child","item","getItem","type","_getLastItem","_getFirstItem","children","selectionManager","cachedCollection","focusedKey","node","current","parentNode","parentKey","cachedRows","rows","diff","length","index","Math","min","max","newRow","isDisabled","childNodes","hasChildNodes","keyToFocus","isKeyboardNavigationDisabled","useGridState"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/grid/dist/useGridState.mjs"],"sourcesContent":["import {getChildNodes as $7nPCv$getChildNodes, getLastItem as $7nPCv$getLastItem, getFirstItem as $7nPCv$getFirstItem} from \"@react-stately/collections\";\nimport {useMultipleSelectionState as $7nPCv$useMultipleSelectionState, SelectionManager as $7nPCv$SelectionManager} from \"@react-stately/selection\";\nimport {useMemo as $7nPCv$useMemo, useRef as $7nPCv$useRef, useEffect as $7nPCv$useEffect} from \"react\";\n\n\n\n\nfunction $62967d126f3aa823$export$4007ac09ff9c68ed(props) {\n    let { collection: collection, focusMode: focusMode } = props;\n    let selectionState = (0, $7nPCv$useMultipleSelectionState)(props);\n    let disabledKeys = (0, $7nPCv$useMemo)(()=>props.disabledKeys ? new Set(props.disabledKeys) : new Set(), [\n        props.disabledKeys\n    ]);\n    let setFocusedKey = selectionState.setFocusedKey;\n    selectionState.setFocusedKey = (key, child)=>{\n        // If focusMode is cell and an item is focused, focus a child cell instead.\n        if (focusMode === \"cell\" && key != null) {\n            let item = collection.getItem(key);\n            if ((item === null || item === void 0 ? void 0 : item.type) === \"item\") {\n                var _getLastItem, _getFirstItem;\n                let children = (0, $7nPCv$getChildNodes)(item, collection);\n                if (child === \"last\") key = (_getLastItem = (0, $7nPCv$getLastItem)(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key;\n                else key = (_getFirstItem = (0, $7nPCv$getFirstItem)(children)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key;\n            }\n        }\n        setFocusedKey(key, child);\n    };\n    let selectionManager = (0, $7nPCv$useMemo)(()=>new (0, $7nPCv$SelectionManager)(collection, selectionState), [\n        collection,\n        selectionState\n    ]);\n    // Reset focused key if that item is deleted from the collection.\n    const cachedCollection = (0, $7nPCv$useRef)(null);\n    (0, $7nPCv$useEffect)(()=>{\n        if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {\n            const node = cachedCollection.current.getItem(selectionState.focusedKey);\n            const parentNode = node.parentKey != null && (node.type === \"cell\" || node.type === \"rowheader\" || node.type === \"column\") ? cachedCollection.current.getItem(node.parentKey) : node;\n            const cachedRows = cachedCollection.current.rows;\n            const rows = collection.rows;\n            const diff = cachedRows.length - rows.length;\n            let index = Math.min(diff > 1 ? Math.max(parentNode.index - diff + 1, 0) : parentNode.index, rows.length - 1);\n            let newRow;\n            while(index >= 0){\n                if (!selectionManager.isDisabled(rows[index].key) && rows[index].type !== \"headerrow\") {\n                    newRow = rows[index];\n                    break;\n                }\n                // Find next, not disabled row.\n                if (index < rows.length - 1) index++;\n                else {\n                    if (index > parentNode.index) index = parentNode.index;\n                    index--;\n                }\n            }\n            if (newRow) {\n                const childNodes = newRow.hasChildNodes ? [\n                    ...(0, $7nPCv$getChildNodes)(newRow, collection)\n                ] : [];\n                const keyToFocus = newRow.hasChildNodes && parentNode !== node && node.index < childNodes.length ? childNodes[node.index].key : newRow.key;\n                selectionState.setFocusedKey(keyToFocus);\n            } else selectionState.setFocusedKey(null);\n        }\n        cachedCollection.current = collection;\n    }, [\n        collection,\n        selectionManager,\n        selectionState,\n        selectionState.focusedKey\n    ]);\n    return {\n        collection: collection,\n        disabledKeys: disabledKeys,\n        isKeyboardNavigationDisabled: false,\n        selectionManager: selectionManager\n    };\n}\n\n\nexport {$62967d126f3aa823$export$4007ac09ff9c68ed as useGridState};\n//# sourceMappingURL=useGridState.mjs.map\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,oBAAoB,EAAEC,WAAW,IAAIC,kBAAkB,EAAEC,YAAY,IAAIC,mBAAmB,QAAO,4BAA4B;AACxJ,SAAQC,yBAAyB,IAAIC,gCAAgC,EAAEC,gBAAgB,IAAIC,uBAAuB,QAAO,0BAA0B;AACnJ,SAAQC,OAAO,IAAIC,cAAc,EAAEC,MAAM,IAAIC,aAAa,EAAEC,SAAS,IAAIC,gBAAgB,QAAO,OAAO;AAKvG,SAASC,yCAAyCA,CAACC,KAAK,EAAE;EACtD,IAAI;IAAEC,UAAU,EAAEA,UAAU;IAAEC,SAAS,EAAEA;EAAU,CAAC,GAAGF,KAAK;EAC5D,IAAIG,cAAc,GAAG,CAAC,CAAC,EAAEb,gCAAgC,EAAEU,KAAK,CAAC;EACjE,IAAII,YAAY,GAAG,CAAC,CAAC,EAAEV,cAAc,EAAE,MAAIM,KAAK,CAACI,YAAY,GAAG,IAAIC,GAAG,CAACL,KAAK,CAACI,YAAY,CAAC,GAAG,IAAIC,GAAG,CAAC,CAAC,EAAE,CACrGL,KAAK,CAACI,YAAY,CACrB,CAAC;EACF,IAAIE,aAAa,GAAGH,cAAc,CAACG,aAAa;EAChDH,cAAc,CAACG,aAAa,GAAG,CAACC,GAAG,EAAEC,KAAK,KAAG;IACzC;IACA,IAAIN,SAAS,KAAK,MAAM,IAAIK,GAAG,IAAI,IAAI,EAAE;MACrC,IAAIE,IAAI,GAAGR,UAAU,CAACS,OAAO,CAACH,GAAG,CAAC;MAClC,IAAI,CAACE,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACE,IAAI,MAAM,MAAM,EAAE;QACpE,IAAIC,YAAY,EAAEC,aAAa;QAC/B,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAE9B,oBAAoB,EAAEyB,IAAI,EAAER,UAAU,CAAC;QAC1D,IAAIO,KAAK,KAAK,MAAM,EAAED,GAAG,GAAG,CAACK,YAAY,GAAG,CAAC,CAAC,EAAE1B,kBAAkB,EAAE4B,QAAQ,CAAC,MAAM,IAAI,IAAIF,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACL,GAAG,CAAC,KAC1IA,GAAG,GAAG,CAACM,aAAa,GAAG,CAAC,CAAC,EAAEzB,mBAAmB,EAAE0B,QAAQ,CAAC,MAAM,IAAI,IAAID,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACN,GAAG;MACrI;IACJ;IACAD,aAAa,CAACC,GAAG,EAAEC,KAAK,CAAC;EAC7B,CAAC;EACD,IAAIO,gBAAgB,GAAG,CAAC,CAAC,EAAErB,cAAc,EAAE,MAAI,KAAK,CAAC,EAAEF,uBAAuB,EAAES,UAAU,EAAEE,cAAc,CAAC,EAAE,CACzGF,UAAU,EACVE,cAAc,CACjB,CAAC;EACF;EACA,MAAMa,gBAAgB,GAAG,CAAC,CAAC,EAAEpB,aAAa,EAAE,IAAI,CAAC;EACjD,CAAC,CAAC,EAAEE,gBAAgB,EAAE,MAAI;IACtB,IAAIK,cAAc,CAACc,UAAU,IAAI,IAAI,IAAI,CAAChB,UAAU,CAACS,OAAO,CAACP,cAAc,CAACc,UAAU,CAAC,EAAE;MACrF,MAAMC,IAAI,GAAGF,gBAAgB,CAACG,OAAO,CAACT,OAAO,CAACP,cAAc,CAACc,UAAU,CAAC;MACxE,MAAMG,UAAU,GAAGF,IAAI,CAACG,SAAS,IAAI,IAAI,KAAKH,IAAI,CAACP,IAAI,KAAK,MAAM,IAAIO,IAAI,CAACP,IAAI,KAAK,WAAW,IAAIO,IAAI,CAACP,IAAI,KAAK,QAAQ,CAAC,GAAGK,gBAAgB,CAACG,OAAO,CAACT,OAAO,CAACQ,IAAI,CAACG,SAAS,CAAC,GAAGH,IAAI;MACpL,MAAMI,UAAU,GAAGN,gBAAgB,CAACG,OAAO,CAACI,IAAI;MAChD,MAAMA,IAAI,GAAGtB,UAAU,CAACsB,IAAI;MAC5B,MAAMC,IAAI,GAAGF,UAAU,CAACG,MAAM,GAAGF,IAAI,CAACE,MAAM;MAC5C,IAAIC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACJ,IAAI,GAAG,CAAC,GAAGG,IAAI,CAACE,GAAG,CAACT,UAAU,CAACM,KAAK,GAAGF,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,GAAGJ,UAAU,CAACM,KAAK,EAAEH,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC;MAC7G,IAAIK,MAAM;MACV,OAAMJ,KAAK,IAAI,CAAC,EAAC;QACb,IAAI,CAACX,gBAAgB,CAACgB,UAAU,CAACR,IAAI,CAACG,KAAK,CAAC,CAACnB,GAAG,CAAC,IAAIgB,IAAI,CAACG,KAAK,CAAC,CAACf,IAAI,KAAK,WAAW,EAAE;UACnFmB,MAAM,GAAGP,IAAI,CAACG,KAAK,CAAC;UACpB;QACJ;QACA;QACA,IAAIA,KAAK,GAAGH,IAAI,CAACE,MAAM,GAAG,CAAC,EAAEC,KAAK,EAAE,CAAC,KAChC;UACD,IAAIA,KAAK,GAAGN,UAAU,CAACM,KAAK,EAAEA,KAAK,GAAGN,UAAU,CAACM,KAAK;UACtDA,KAAK,EAAE;QACX;MACJ;MACA,IAAII,MAAM,EAAE;QACR,MAAME,UAAU,GAAGF,MAAM,CAACG,aAAa,GAAG,CACtC,GAAG,CAAC,CAAC,EAAEjD,oBAAoB,EAAE8C,MAAM,EAAE7B,UAAU,CAAC,CACnD,GAAG,EAAE;QACN,MAAMiC,UAAU,GAAGJ,MAAM,CAACG,aAAa,IAAIb,UAAU,KAAKF,IAAI,IAAIA,IAAI,CAACQ,KAAK,GAAGM,UAAU,CAACP,MAAM,GAAGO,UAAU,CAACd,IAAI,CAACQ,KAAK,CAAC,CAACnB,GAAG,GAAGuB,MAAM,CAACvB,GAAG;QAC1IJ,cAAc,CAACG,aAAa,CAAC4B,UAAU,CAAC;MAC5C,CAAC,MAAM/B,cAAc,CAACG,aAAa,CAAC,IAAI,CAAC;IAC7C;IACAU,gBAAgB,CAACG,OAAO,GAAGlB,UAAU;EACzC,CAAC,EAAE,CACCA,UAAU,EACVc,gBAAgB,EAChBZ,cAAc,EACdA,cAAc,CAACc,UAAU,CAC5B,CAAC;EACF,OAAO;IACHhB,UAAU,EAAEA,UAAU;IACtBG,YAAY,EAAEA,YAAY;IAC1B+B,4BAA4B,EAAE,KAAK;IACnCpB,gBAAgB,EAAEA;EACtB,CAAC;AACL;AAGA,SAAQhB,yCAAyC,IAAIqC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}