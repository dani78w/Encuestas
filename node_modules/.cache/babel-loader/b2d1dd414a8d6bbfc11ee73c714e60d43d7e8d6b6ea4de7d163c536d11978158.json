{"ast":null,"code":"import { filterDOMProps as $2xLm1$filterDOMProps, clamp as $2xLm1$clamp, mergeProps as $2xLm1$mergeProps } from \"@react-aria/utils\";\nimport { useLabel as $2xLm1$useLabel } from \"@react-aria/label\";\nimport { useNumberFormatter as $2xLm1$useNumberFormatter } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $204d9ebcedfb8806$export$ed5abd763a836edc(props) {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    valueLabel: valueLabel,\n    isIndeterminate: isIndeterminate,\n    formatOptions = {\n      style: \"percent\"\n    }\n  } = props;\n  let domProps = (0, $2xLm1$filterDOMProps)(props, {\n    labelable: true\n  });\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  } = (0, $2xLm1$useLabel)({\n    ...props,\n    // Progress bar is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: \"span\"\n  });\n  value = (0, $2xLm1$clamp)(value, minValue, maxValue);\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let formatter = (0, $2xLm1$useNumberFormatter)(formatOptions);\n  if (!isIndeterminate && !valueLabel) {\n    let valueToFormat = formatOptions.style === \"percent\" ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n  return {\n    progressBarProps: (0, $2xLm1$mergeProps)(domProps, {\n      ...fieldProps,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuemin\": minValue,\n      \"aria-valuemax\": maxValue,\n      \"aria-valuetext\": isIndeterminate ? undefined : valueLabel,\n      role: \"progressbar\"\n    }),\n    labelProps: labelProps\n  };\n}\nexport { $204d9ebcedfb8806$export$ed5abd763a836edc as useProgressBar };","map":{"version":3,"names":["filterDOMProps","$2xLm1$filterDOMProps","clamp","$2xLm1$clamp","mergeProps","$2xLm1$mergeProps","useLabel","$2xLm1$useLabel","useNumberFormatter","$2xLm1$useNumberFormatter","$204d9ebcedfb8806$export$ed5abd763a836edc","props","value","minValue","maxValue","valueLabel","isIndeterminate","formatOptions","style","domProps","labelable","labelProps","fieldProps","labelElementType","percentage","formatter","valueToFormat","format","progressBarProps","undefined","role","useProgressBar"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/progress/dist/useProgressBar.mjs"],"sourcesContent":["import {filterDOMProps as $2xLm1$filterDOMProps, clamp as $2xLm1$clamp, mergeProps as $2xLm1$mergeProps} from \"@react-aria/utils\";\nimport {useLabel as $2xLm1$useLabel} from \"@react-aria/label\";\nimport {useNumberFormatter as $2xLm1$useNumberFormatter} from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nfunction $204d9ebcedfb8806$export$ed5abd763a836edc(props) {\n    let { value: value = 0, minValue: minValue = 0, maxValue: maxValue = 100, valueLabel: valueLabel, isIndeterminate: isIndeterminate, formatOptions: formatOptions = {\n        style: \"percent\"\n    } } = props;\n    let domProps = (0, $2xLm1$filterDOMProps)(props, {\n        labelable: true\n    });\n    let { labelProps: labelProps, fieldProps: fieldProps } = (0, $2xLm1$useLabel)({\n        ...props,\n        // Progress bar is not an HTML input element so it\n        // shouldn't be labeled by a <label> element.\n        labelElementType: \"span\"\n    });\n    value = (0, $2xLm1$clamp)(value, minValue, maxValue);\n    let percentage = (value - minValue) / (maxValue - minValue);\n    let formatter = (0, $2xLm1$useNumberFormatter)(formatOptions);\n    if (!isIndeterminate && !valueLabel) {\n        let valueToFormat = formatOptions.style === \"percent\" ? percentage : value;\n        valueLabel = formatter.format(valueToFormat);\n    }\n    return {\n        progressBarProps: (0, $2xLm1$mergeProps)(domProps, {\n            ...fieldProps,\n            \"aria-valuenow\": isIndeterminate ? undefined : value,\n            \"aria-valuemin\": minValue,\n            \"aria-valuemax\": maxValue,\n            \"aria-valuetext\": isIndeterminate ? undefined : valueLabel,\n            role: \"progressbar\"\n        }),\n        labelProps: labelProps\n    };\n}\n\n\nexport {$204d9ebcedfb8806$export$ed5abd763a836edc as useProgressBar};\n//# sourceMappingURL=useProgressBar.mjs.map\n"],"mappings":"AAAA,SAAQA,cAAc,IAAIC,qBAAqB,EAAEC,KAAK,IAAIC,YAAY,EAAEC,UAAU,IAAIC,iBAAiB,QAAO,mBAAmB;AACjI,SAAQC,QAAQ,IAAIC,eAAe,QAAO,mBAAmB;AAC7D,SAAQC,kBAAkB,IAAIC,yBAAyB,QAAO,kBAAkB;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,yCAAyCA,CAACC,KAAK,EAAE;EACtD,IAAI;IAASC,KAAK,GAAG,CAAC;IAAYC,QAAQ,GAAG,CAAC;IAAYC,QAAQ,GAAG,GAAG;IAAEC,UAAU,EAAEA,UAAU;IAAEC,eAAe,EAAEA,eAAe;IAAiBC,aAAa,GAAG;MAC/JC,KAAK,EAAE;IACX;EAAE,CAAC,GAAGP,KAAK;EACX,IAAIQ,QAAQ,GAAG,CAAC,CAAC,EAAElB,qBAAqB,EAAEU,KAAK,EAAE;IAC7CS,SAAS,EAAE;EACf,CAAC,CAAC;EACF,IAAI;IAAEC,UAAU,EAAEA,UAAU;IAAEC,UAAU,EAAEA;EAAW,CAAC,GAAG,CAAC,CAAC,EAAEf,eAAe,EAAE;IAC1E,GAAGI,KAAK;IACR;IACA;IACAY,gBAAgB,EAAE;EACtB,CAAC,CAAC;EACFX,KAAK,GAAG,CAAC,CAAC,EAAET,YAAY,EAAES,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;EACpD,IAAIU,UAAU,GAAG,CAACZ,KAAK,GAAGC,QAAQ,KAAKC,QAAQ,GAAGD,QAAQ,CAAC;EAC3D,IAAIY,SAAS,GAAG,CAAC,CAAC,EAAEhB,yBAAyB,EAAEQ,aAAa,CAAC;EAC7D,IAAI,CAACD,eAAe,IAAI,CAACD,UAAU,EAAE;IACjC,IAAIW,aAAa,GAAGT,aAAa,CAACC,KAAK,KAAK,SAAS,GAAGM,UAAU,GAAGZ,KAAK;IAC1EG,UAAU,GAAGU,SAAS,CAACE,MAAM,CAACD,aAAa,CAAC;EAChD;EACA,OAAO;IACHE,gBAAgB,EAAE,CAAC,CAAC,EAAEvB,iBAAiB,EAAEc,QAAQ,EAAE;MAC/C,GAAGG,UAAU;MACb,eAAe,EAAEN,eAAe,GAAGa,SAAS,GAAGjB,KAAK;MACpD,eAAe,EAAEC,QAAQ;MACzB,eAAe,EAAEC,QAAQ;MACzB,gBAAgB,EAAEE,eAAe,GAAGa,SAAS,GAAGd,UAAU;MAC1De,IAAI,EAAE;IACV,CAAC,CAAC;IACFT,UAAU,EAAEA;EAChB,CAAC;AACL;AAGA,SAAQX,yCAAyC,IAAIqB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}