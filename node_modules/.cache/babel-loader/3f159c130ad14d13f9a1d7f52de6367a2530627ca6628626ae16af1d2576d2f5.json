{"ast":null,"code":"import { getInteractionModality as $6VwSn$getInteractionModality, isFocusVisible as $6VwSn$isFocusVisible, useHover as $6VwSn$useHover } from \"@react-aria/interactions\";\nimport { useId as $6VwSn$useId, mergeProps as $6VwSn$mergeProps } from \"@react-aria/utils\";\nimport { useRef as $6VwSn$useRef, useEffect as $6VwSn$useEffect } from \"react\";\nimport { useFocusable as $6VwSn$useFocusable } from \"@react-aria/focus\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $4e1b34546679e357$export$a6da6c504e4bba8b(props, state, ref) {\n  let {\n    isDisabled: isDisabled,\n    trigger: trigger\n  } = props;\n  let tooltipId = (0, $6VwSn$useId)();\n  let isHovered = (0, $6VwSn$useRef)(false);\n  let isFocused = (0, $6VwSn$useRef)(false);\n  let handleShow = () => {\n    if (isHovered.current || isFocused.current) state.open(isFocused.current);\n  };\n  let handleHide = immediate => {\n    if (!isHovered.current && !isFocused.current) state.close(immediate);\n  };\n  (0, $6VwSn$useEffect)(() => {\n    let onKeyDown = e => {\n      if (ref && ref.current)\n        // Escape after clicking something can give it keyboard focus\n        // dismiss tooltip on esc key press\n        {\n          if (e.key === \"Escape\") {\n            e.stopPropagation();\n            state.close(true);\n          }\n        }\n    };\n    if (state.isOpen) {\n      document.addEventListener(\"keydown\", onKeyDown, true);\n      return () => {\n        document.removeEventListener(\"keydown\", onKeyDown, true);\n      };\n    }\n  }, [ref, state]);\n  let onHoverStart = () => {\n    if (trigger === \"focus\") return;\n    // In chrome, if you hover a trigger, then another element obscures it, due to keyboard\n    // interactions for example, hover will end. When hover is restored after that element disappears,\n    // focus moves on for example, then the tooltip will reopen. We check the modality to know if the hover\n    // is the result of moving the mouse.\n    if ((0, $6VwSn$getInteractionModality)() === \"pointer\") isHovered.current = true;else isHovered.current = false;\n    handleShow();\n  };\n  let onHoverEnd = () => {\n    if (trigger === \"focus\") return;\n    // no matter how the trigger is left, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide();\n  };\n  let onPressStart = () => {\n    // no matter how the trigger is pressed, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n  let onFocus = () => {\n    let isVisible = (0, $6VwSn$isFocusVisible)();\n    if (isVisible) {\n      isFocused.current = true;\n      handleShow();\n    }\n  };\n  let onBlur = () => {\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n  let {\n    hoverProps: hoverProps\n  } = (0, $6VwSn$useHover)({\n    isDisabled: isDisabled,\n    onHoverStart: onHoverStart,\n    onHoverEnd: onHoverEnd\n  });\n  let {\n    focusableProps: focusableProps\n  } = (0, $6VwSn$useFocusable)({\n    isDisabled: isDisabled,\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, ref);\n  return {\n    triggerProps: {\n      \"aria-describedby\": state.isOpen ? tooltipId : undefined,\n      ...(0, $6VwSn$mergeProps)(focusableProps, hoverProps, {\n        onPointerDown: onPressStart,\n        onKeyDown: onPressStart\n      })\n    },\n    tooltipProps: {\n      id: tooltipId\n    }\n  };\n}\nexport { $4e1b34546679e357$export$a6da6c504e4bba8b as useTooltipTrigger };","map":{"version":3,"names":["getInteractionModality","$6VwSn$getInteractionModality","isFocusVisible","$6VwSn$isFocusVisible","useHover","$6VwSn$useHover","useId","$6VwSn$useId","mergeProps","$6VwSn$mergeProps","useRef","$6VwSn$useRef","useEffect","$6VwSn$useEffect","useFocusable","$6VwSn$useFocusable","$4e1b34546679e357$export$a6da6c504e4bba8b","props","state","ref","isDisabled","trigger","tooltipId","isHovered","isFocused","handleShow","current","open","handleHide","immediate","close","onKeyDown","e","key","stopPropagation","isOpen","document","addEventListener","removeEventListener","onHoverStart","onHoverEnd","onPressStart","onFocus","isVisible","onBlur","hoverProps","focusableProps","triggerProps","undefined","onPointerDown","tooltipProps","id","useTooltipTrigger"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/tooltip/dist/useTooltipTrigger.mjs"],"sourcesContent":["import {getInteractionModality as $6VwSn$getInteractionModality, isFocusVisible as $6VwSn$isFocusVisible, useHover as $6VwSn$useHover} from \"@react-aria/interactions\";\nimport {useId as $6VwSn$useId, mergeProps as $6VwSn$mergeProps} from \"@react-aria/utils\";\nimport {useRef as $6VwSn$useRef, useEffect as $6VwSn$useEffect} from \"react\";\nimport {useFocusable as $6VwSn$useFocusable} from \"@react-aria/focus\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\nfunction $4e1b34546679e357$export$a6da6c504e4bba8b(props, state, ref) {\n    let { isDisabled: isDisabled, trigger: trigger } = props;\n    let tooltipId = (0, $6VwSn$useId)();\n    let isHovered = (0, $6VwSn$useRef)(false);\n    let isFocused = (0, $6VwSn$useRef)(false);\n    let handleShow = ()=>{\n        if (isHovered.current || isFocused.current) state.open(isFocused.current);\n    };\n    let handleHide = (immediate)=>{\n        if (!isHovered.current && !isFocused.current) state.close(immediate);\n    };\n    (0, $6VwSn$useEffect)(()=>{\n        let onKeyDown = (e)=>{\n            if (ref && ref.current) // Escape after clicking something can give it keyboard focus\n            // dismiss tooltip on esc key press\n            {\n                if (e.key === \"Escape\") {\n                    e.stopPropagation();\n                    state.close(true);\n                }\n            }\n        };\n        if (state.isOpen) {\n            document.addEventListener(\"keydown\", onKeyDown, true);\n            return ()=>{\n                document.removeEventListener(\"keydown\", onKeyDown, true);\n            };\n        }\n    }, [\n        ref,\n        state\n    ]);\n    let onHoverStart = ()=>{\n        if (trigger === \"focus\") return;\n        // In chrome, if you hover a trigger, then another element obscures it, due to keyboard\n        // interactions for example, hover will end. When hover is restored after that element disappears,\n        // focus moves on for example, then the tooltip will reopen. We check the modality to know if the hover\n        // is the result of moving the mouse.\n        if ((0, $6VwSn$getInteractionModality)() === \"pointer\") isHovered.current = true;\n        else isHovered.current = false;\n        handleShow();\n    };\n    let onHoverEnd = ()=>{\n        if (trigger === \"focus\") return;\n        // no matter how the trigger is left, we should close the tooltip\n        isFocused.current = false;\n        isHovered.current = false;\n        handleHide();\n    };\n    let onPressStart = ()=>{\n        // no matter how the trigger is pressed, we should close the tooltip\n        isFocused.current = false;\n        isHovered.current = false;\n        handleHide(true);\n    };\n    let onFocus = ()=>{\n        let isVisible = (0, $6VwSn$isFocusVisible)();\n        if (isVisible) {\n            isFocused.current = true;\n            handleShow();\n        }\n    };\n    let onBlur = ()=>{\n        isFocused.current = false;\n        isHovered.current = false;\n        handleHide(true);\n    };\n    let { hoverProps: hoverProps } = (0, $6VwSn$useHover)({\n        isDisabled: isDisabled,\n        onHoverStart: onHoverStart,\n        onHoverEnd: onHoverEnd\n    });\n    let { focusableProps: focusableProps } = (0, $6VwSn$useFocusable)({\n        isDisabled: isDisabled,\n        onFocus: onFocus,\n        onBlur: onBlur\n    }, ref);\n    return {\n        triggerProps: {\n            \"aria-describedby\": state.isOpen ? tooltipId : undefined,\n            ...(0, $6VwSn$mergeProps)(focusableProps, hoverProps, {\n                onPointerDown: onPressStart,\n                onKeyDown: onPressStart\n            })\n        },\n        tooltipProps: {\n            id: tooltipId\n        }\n    };\n}\n\n\nexport {$4e1b34546679e357$export$a6da6c504e4bba8b as useTooltipTrigger};\n//# sourceMappingURL=useTooltipTrigger.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}