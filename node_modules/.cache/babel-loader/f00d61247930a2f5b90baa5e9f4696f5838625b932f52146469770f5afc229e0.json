{"ast":null,"code":"import { useEffect as $dRVb8$useEffect } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nconst $dd149f63282afbbf$export$f6211563215e3b37 = new WeakMap();\nfunction $dd149f63282afbbf$export$18fc8428861184da(opts) {\n  let {\n    triggerRef: triggerRef,\n    isOpen: isOpen,\n    onClose: onClose\n  } = opts;\n  (0, $dRVb8$useEffect)(() => {\n    if (!isOpen || onClose === null) return;\n    let onScroll = e => {\n      // Ignore if scrolling an scrollable region outside the trigger's tree.\n      let target = e.target;\n      // window is not a Node and doesn't have contain, but window contains everything\n      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current)) return;\n      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);\n      if (onCloseHandler) onCloseHandler();\n    };\n    window.addEventListener(\"scroll\", onScroll, true);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n}\nexport { $dd149f63282afbbf$export$f6211563215e3b37 as onCloseMap, $dd149f63282afbbf$export$18fc8428861184da as useCloseOnScroll };","map":{"version":3,"names":["useEffect","$dRVb8$useEffect","$dd149f63282afbbf$export$f6211563215e3b37","WeakMap","$dd149f63282afbbf$export$18fc8428861184da","opts","triggerRef","isOpen","onClose","onScroll","e","target","current","Node","contains","onCloseHandler","get","window","addEventListener","removeEventListener","onCloseMap","useCloseOnScroll"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/overlays/dist/useCloseOnScroll.mjs"],"sourcesContent":["import {useEffect as $dRVb8$useEffect} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nconst $dd149f63282afbbf$export$f6211563215e3b37 = new WeakMap();\nfunction $dd149f63282afbbf$export$18fc8428861184da(opts) {\n    let { triggerRef: triggerRef, isOpen: isOpen, onClose: onClose } = opts;\n    (0, $dRVb8$useEffect)(()=>{\n        if (!isOpen || onClose === null) return;\n        let onScroll = (e)=>{\n            // Ignore if scrolling an scrollable region outside the trigger's tree.\n            let target = e.target;\n            // window is not a Node and doesn't have contain, but window contains everything\n            if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current)) return;\n            let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);\n            if (onCloseHandler) onCloseHandler();\n        };\n        window.addEventListener(\"scroll\", onScroll, true);\n        return ()=>{\n            window.removeEventListener(\"scroll\", onScroll, true);\n        };\n    }, [\n        isOpen,\n        onClose,\n        triggerRef\n    ]);\n}\n\n\nexport {$dd149f63282afbbf$export$f6211563215e3b37 as onCloseMap, $dd149f63282afbbf$export$18fc8428861184da as useCloseOnScroll};\n//# sourceMappingURL=useCloseOnScroll.mjs.map\n"],"mappings":"AAAA,SAAQA,SAAS,IAAIC,gBAAgB,QAAO,OAAO;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,yCAAyC,GAAG,IAAIC,OAAO,CAAC,CAAC;AAC/D,SAASC,yCAAyCA,CAACC,IAAI,EAAE;EACrD,IAAI;IAAEC,UAAU,EAAEA,UAAU;IAAEC,MAAM,EAAEA,MAAM;IAAEC,OAAO,EAAEA;EAAQ,CAAC,GAAGH,IAAI;EACvE,CAAC,CAAC,EAAEJ,gBAAgB,EAAE,MAAI;IACtB,IAAI,CAACM,MAAM,IAAIC,OAAO,KAAK,IAAI,EAAE;IACjC,IAAIC,QAAQ,GAAIC,CAAC,IAAG;MAChB;MACA,IAAIC,MAAM,GAAGD,CAAC,CAACC,MAAM;MACrB;MACA,IAAI,CAACL,UAAU,CAACM,OAAO,IAAID,MAAM,YAAYE,IAAI,IAAI,CAACF,MAAM,CAACG,QAAQ,CAACR,UAAU,CAACM,OAAO,CAAC,EAAE;MAC3F,IAAIG,cAAc,GAAGP,OAAO,IAAIN,yCAAyC,CAACc,GAAG,CAACV,UAAU,CAACM,OAAO,CAAC;MACjG,IAAIG,cAAc,EAAEA,cAAc,CAAC,CAAC;IACxC,CAAC;IACDE,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAET,QAAQ,EAAE,IAAI,CAAC;IACjD,OAAO,MAAI;MACPQ,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEV,QAAQ,EAAE,IAAI,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,CACCF,MAAM,EACNC,OAAO,EACPF,UAAU,CACb,CAAC;AACN;AAGA,SAAQJ,yCAAyC,IAAIkB,UAAU,EAAEhB,yCAAyC,IAAIiB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}