{"ast":null,"code":"import { getRowLabelledBy as $2140fb2337097f2d$export$85069b70317f543 } from \"./utils.mjs\";\nimport $iIuaM$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { useGridSelectionCheckbox as $iIuaM$useGridSelectionCheckbox } from \"@react-aria/grid\";\nimport { useLocalizedStringFormatter as $iIuaM$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {\n  let {\n    key: key\n  } = props;\n  const {\n    checkboxProps: checkboxProps\n  } = (0, $iIuaM$useGridSelectionCheckbox)(props, state);\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      \"aria-labelledby\": `${checkboxProps.id} ${(0, $2140fb2337097f2d$export$85069b70317f543)(state, key)}`\n    }\n  };\n}\nfunction $2a795c53a101c542$export$1003db6a7e384b99(state) {\n  let {\n    isEmpty: isEmpty,\n    isSelectAll: isSelectAll,\n    selectionMode: selectionMode\n  } = state.selectionManager;\n  const stringFormatter = (0, $iIuaM$useLocalizedStringFormatter)((0, $parcel$interopDefault($iIuaM$intlStringsmodulejs)), \"@react-aria/table\");\n  return {\n    checkboxProps: {\n      \"aria-label\": stringFormatter.format(selectionMode === \"single\" ? \"select\" : \"selectAll\"),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== \"multiple\" || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\nexport { $2a795c53a101c542$export$16ea7f650bd7c1bb as useTableSelectionCheckbox, $2a795c53a101c542$export$1003db6a7e384b99 as useTableSelectAllCheckbox };","map":{"version":3,"names":["getRowLabelledBy","$2140fb2337097f2d$export$85069b70317f543","$iIuaM$intlStringsmodulejs","useGridSelectionCheckbox","$iIuaM$useGridSelectionCheckbox","useLocalizedStringFormatter","$iIuaM$useLocalizedStringFormatter","$parcel$interopDefault","a","__esModule","default","$2a795c53a101c542$export$16ea7f650bd7c1bb","props","state","key","checkboxProps","id","$2a795c53a101c542$export$1003db6a7e384b99","isEmpty","isSelectAll","selectionMode","selectionManager","stringFormatter","format","isSelected","isDisabled","collection","size","isIndeterminate","onChange","toggleSelectAll","useTableSelectionCheckbox","useTableSelectAllCheckbox"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/table/dist/useTableSelectionCheckbox.mjs"],"sourcesContent":["import {getRowLabelledBy as $2140fb2337097f2d$export$85069b70317f543} from \"./utils.mjs\";\nimport $iIuaM$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport {useGridSelectionCheckbox as $iIuaM$useGridSelectionCheckbox} from \"@react-aria/grid\";\nimport {useLocalizedStringFormatter as $iIuaM$useLocalizedStringFormatter} from \"@react-aria/i18n\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\nfunction $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {\n    let { key: key } = props;\n    const { checkboxProps: checkboxProps } = (0, $iIuaM$useGridSelectionCheckbox)(props, state);\n    return {\n        checkboxProps: {\n            ...checkboxProps,\n            \"aria-labelledby\": `${checkboxProps.id} ${(0, $2140fb2337097f2d$export$85069b70317f543)(state, key)}`\n        }\n    };\n}\nfunction $2a795c53a101c542$export$1003db6a7e384b99(state) {\n    let { isEmpty: isEmpty, isSelectAll: isSelectAll, selectionMode: selectionMode } = state.selectionManager;\n    const stringFormatter = (0, $iIuaM$useLocalizedStringFormatter)((0, ($parcel$interopDefault($iIuaM$intlStringsmodulejs))), \"@react-aria/table\");\n    return {\n        checkboxProps: {\n            \"aria-label\": stringFormatter.format(selectionMode === \"single\" ? \"select\" : \"selectAll\"),\n            isSelected: isSelectAll,\n            isDisabled: selectionMode !== \"multiple\" || state.collection.size === 0,\n            isIndeterminate: !isEmpty && !isSelectAll,\n            onChange: ()=>state.selectionManager.toggleSelectAll()\n        }\n    };\n}\n\n\nexport {$2a795c53a101c542$export$16ea7f650bd7c1bb as useTableSelectionCheckbox, $2a795c53a101c542$export$1003db6a7e384b99 as useTableSelectAllCheckbox};\n//# sourceMappingURL=useTableSelectionCheckbox.mjs.map\n"],"mappings":"AAAA,SAAQA,gBAAgB,IAAIC,wCAAwC,QAAO,aAAa;AACxF,OAAOC,0BAA0B,MAAM,mBAAmB;AAC1D,SAAQC,wBAAwB,IAAIC,+BAA+B,QAAO,kBAAkB;AAC5F,SAAQC,2BAA2B,IAAIC,kCAAkC,QAAO,kBAAkB;AAGlG,SAASC,sBAAsBA,CAACC,CAAC,EAAE;EACjC,OAAOA,CAAC,IAAIA,CAAC,CAACC,UAAU,GAAGD,CAAC,CAACE,OAAO,GAAGF,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASG,yCAAyCA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC7D,IAAI;IAAEC,GAAG,EAAEA;EAAI,CAAC,GAAGF,KAAK;EACxB,MAAM;IAAEG,aAAa,EAAEA;EAAc,CAAC,GAAG,CAAC,CAAC,EAAEX,+BAA+B,EAAEQ,KAAK,EAAEC,KAAK,CAAC;EAC3F,OAAO;IACHE,aAAa,EAAE;MACX,GAAGA,aAAa;MAChB,iBAAiB,EAAG,GAAEA,aAAa,CAACC,EAAG,IAAG,CAAC,CAAC,EAAEf,wCAAwC,EAAEY,KAAK,EAAEC,GAAG,CAAE;IACxG;EACJ,CAAC;AACL;AACA,SAASG,yCAAyCA,CAACJ,KAAK,EAAE;EACtD,IAAI;IAAEK,OAAO,EAAEA,OAAO;IAAEC,WAAW,EAAEA,WAAW;IAAEC,aAAa,EAAEA;EAAc,CAAC,GAAGP,KAAK,CAACQ,gBAAgB;EACzG,MAAMC,eAAe,GAAG,CAAC,CAAC,EAAEhB,kCAAkC,GAAG,CAAC,EAAGC,sBAAsB,CAACL,0BAA0B,CAAE,GAAG,mBAAmB,CAAC;EAC/I,OAAO;IACHa,aAAa,EAAE;MACX,YAAY,EAAEO,eAAe,CAACC,MAAM,CAACH,aAAa,KAAK,QAAQ,GAAG,QAAQ,GAAG,WAAW,CAAC;MACzFI,UAAU,EAAEL,WAAW;MACvBM,UAAU,EAAEL,aAAa,KAAK,UAAU,IAAIP,KAAK,CAACa,UAAU,CAACC,IAAI,KAAK,CAAC;MACvEC,eAAe,EAAE,CAACV,OAAO,IAAI,CAACC,WAAW;MACzCU,QAAQ,EAAEA,CAAA,KAAIhB,KAAK,CAACQ,gBAAgB,CAACS,eAAe,CAAC;IACzD;EACJ,CAAC;AACL;AAGA,SAAQnB,yCAAyC,IAAIoB,yBAAyB,EAAEd,yCAAyC,IAAIe,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}