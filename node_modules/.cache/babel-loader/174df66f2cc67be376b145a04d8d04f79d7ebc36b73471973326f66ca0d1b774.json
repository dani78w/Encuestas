{"ast":null,"code":"\"use client\";\n\n// src/ripple.tsx\nimport { AnimatePresence, m, LazyMotion, domAnimation } from \"framer-motion\";\nimport { clamp } from \"@nextui-org/shared-utils\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Ripple = props => {\n  const {\n    ripples = [],\n    motionProps,\n    color = \"currentColor\",\n    style,\n    onClear\n  } = props;\n  return /* @__PURE__ */jsx(Fragment, {\n    children: ripples.map(ripple => {\n      const duration = clamp(0.01 * ripple.size, 0.2, ripple.size > 100 ? 0.75 : 0.5);\n      return /* @__PURE__ */jsx(AnimatePresence, {\n        mode: \"popLayout\",\n        children: /* @__PURE__ */jsx(Fragment, {\n          children: /* @__PURE__ */jsx(LazyMotion, {\n            features: domAnimation,\n            children: /* @__PURE__ */jsx(m.span, {\n              animate: {\n                transform: \"scale(2)\",\n                opacity: 0\n              },\n              className: \"nextui-ripple\",\n              exit: {\n                opacity: 0\n              },\n              initial: {\n                transform: \"scale(0)\",\n                opacity: 0.35\n              },\n              style: {\n                position: \"absolute\",\n                backgroundColor: color,\n                borderRadius: \"100%\",\n                transformOrigin: \"center\",\n                pointerEvents: \"none\",\n                overflow: \"hidden\",\n                inset: 0,\n                zIndex: 0,\n                top: ripple.y,\n                left: ripple.x,\n                width: `${ripple.size}px`,\n                height: `${ripple.size}px`,\n                ...style\n              },\n              transition: {\n                duration\n              },\n              onAnimationComplete: () => {\n                onClear(ripple.key);\n              },\n              ...motionProps\n            })\n          })\n        })\n      }, ripple.key);\n    })\n  });\n};\nRipple.displayName = \"NextUI.Ripple\";\nvar ripple_default = Ripple;\nexport { ripple_default };","map":{"version":3,"names":["AnimatePresence","m","LazyMotion","domAnimation","clamp","Fragment","jsx","Ripple","props","ripples","motionProps","color","style","onClear","children","map","ripple","duration","size","mode","features","span","animate","transform","opacity","className","exit","initial","position","backgroundColor","borderRadius","transformOrigin","pointerEvents","overflow","inset","zIndex","top","y","left","x","width","height","transition","onAnimationComplete","key","displayName","ripple_default"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@nextui-org/ripple/dist/chunk-UYPFWZFH.mjs"],"sourcesContent":["\"use client\";\n\n// src/ripple.tsx\nimport { AnimatePresence, m, LazyMotion, domAnimation } from \"framer-motion\";\nimport { clamp } from \"@nextui-org/shared-utils\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Ripple = (props) => {\n  const { ripples = [], motionProps, color = \"currentColor\", style, onClear } = props;\n  return /* @__PURE__ */ jsx(Fragment, { children: ripples.map((ripple) => {\n    const duration = clamp(0.01 * ripple.size, 0.2, ripple.size > 100 ? 0.75 : 0.5);\n    return /* @__PURE__ */ jsx(AnimatePresence, { mode: \"popLayout\", children: /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsx(\n      m.span,\n      {\n        animate: { transform: \"scale(2)\", opacity: 0 },\n        className: \"nextui-ripple\",\n        exit: { opacity: 0 },\n        initial: { transform: \"scale(0)\", opacity: 0.35 },\n        style: {\n          position: \"absolute\",\n          backgroundColor: color,\n          borderRadius: \"100%\",\n          transformOrigin: \"center\",\n          pointerEvents: \"none\",\n          overflow: \"hidden\",\n          inset: 0,\n          zIndex: 0,\n          top: ripple.y,\n          left: ripple.x,\n          width: `${ripple.size}px`,\n          height: `${ripple.size}px`,\n          ...style\n        },\n        transition: { duration },\n        onAnimationComplete: () => {\n          onClear(ripple.key);\n        },\n        ...motionProps\n      }\n    ) }) }) }, ripple.key);\n  }) });\n};\nRipple.displayName = \"NextUI.Ripple\";\nvar ripple_default = Ripple;\n\nexport {\n  ripple_default\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,eAAe,EAAEC,CAAC,EAAEC,UAAU,EAAEC,YAAY,QAAQ,eAAe;AAC5E,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,QAAQ,EAAEC,GAAG,QAAQ,mBAAmB;AACjD,IAAIC,MAAM,GAAIC,KAAK,IAAK;EACtB,MAAM;IAAEC,OAAO,GAAG,EAAE;IAAEC,WAAW;IAAEC,KAAK,GAAG,cAAc;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGL,KAAK;EACnF,OAAO,eAAgBF,GAAG,CAACD,QAAQ,EAAE;IAAES,QAAQ,EAAEL,OAAO,CAACM,GAAG,CAAEC,MAAM,IAAK;MACvE,MAAMC,QAAQ,GAAGb,KAAK,CAAC,IAAI,GAAGY,MAAM,CAACE,IAAI,EAAE,GAAG,EAAEF,MAAM,CAACE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;MAC/E,OAAO,eAAgBZ,GAAG,CAACN,eAAe,EAAE;QAAEmB,IAAI,EAAE,WAAW;QAAEL,QAAQ,EAAE,eAAgBR,GAAG,CAACD,QAAQ,EAAE;UAAES,QAAQ,EAAE,eAAgBR,GAAG,CAACJ,UAAU,EAAE;YAAEkB,QAAQ,EAAEjB,YAAY;YAAEW,QAAQ,EAAE,eAAgBR,GAAG,CAC1ML,CAAC,CAACoB,IAAI,EACN;cACEC,OAAO,EAAE;gBAAEC,SAAS,EAAE,UAAU;gBAAEC,OAAO,EAAE;cAAE,CAAC;cAC9CC,SAAS,EAAE,eAAe;cAC1BC,IAAI,EAAE;gBAAEF,OAAO,EAAE;cAAE,CAAC;cACpBG,OAAO,EAAE;gBAAEJ,SAAS,EAAE,UAAU;gBAAEC,OAAO,EAAE;cAAK,CAAC;cACjDZ,KAAK,EAAE;gBACLgB,QAAQ,EAAE,UAAU;gBACpBC,eAAe,EAAElB,KAAK;gBACtBmB,YAAY,EAAE,MAAM;gBACpBC,eAAe,EAAE,QAAQ;gBACzBC,aAAa,EAAE,MAAM;gBACrBC,QAAQ,EAAE,QAAQ;gBAClBC,KAAK,EAAE,CAAC;gBACRC,MAAM,EAAE,CAAC;gBACTC,GAAG,EAAEpB,MAAM,CAACqB,CAAC;gBACbC,IAAI,EAAEtB,MAAM,CAACuB,CAAC;gBACdC,KAAK,EAAG,GAAExB,MAAM,CAACE,IAAK,IAAG;gBACzBuB,MAAM,EAAG,GAAEzB,MAAM,CAACE,IAAK,IAAG;gBAC1B,GAAGN;cACL,CAAC;cACD8B,UAAU,EAAE;gBAAEzB;cAAS,CAAC;cACxB0B,mBAAmB,EAAEA,CAAA,KAAM;gBACzB9B,OAAO,CAACG,MAAM,CAAC4B,GAAG,CAAC;cACrB,CAAC;cACD,GAAGlC;YACL,CACF;UAAE,CAAC;QAAE,CAAC;MAAE,CAAC,EAAEM,MAAM,CAAC4B,GAAG,CAAC;IACxB,CAAC;EAAE,CAAC,CAAC;AACP,CAAC;AACDrC,MAAM,CAACsC,WAAW,GAAG,eAAe;AACpC,IAAIC,cAAc,GAAGvC,MAAM;AAE3B,SACEuC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}