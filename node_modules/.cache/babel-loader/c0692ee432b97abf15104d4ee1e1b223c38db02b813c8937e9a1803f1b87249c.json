{"ast":null,"code":"import $fkdHx$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { useId as $fkdHx$useId } from \"@react-aria/utils\";\nimport { useLocalizedStringFormatter as $fkdHx$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n  let {\n    key: key\n  } = props;\n  let manager = state.selectionManager;\n  let checkboxId = (0, $fkdHx$useId)();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n  let onChange = () => manager.select(key);\n  const stringFormatter = (0, $fkdHx$useLocalizedStringFormatter)((0, $parcel$interopDefault($fkdHx$intlStringsmodulejs)), \"@react-aria/grid\");\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      \"aria-label\": stringFormatter.format(\"select\"),\n      isSelected: isSelected,\n      isDisabled: isDisabled,\n      onChange: onChange\n    }\n  };\n}\nexport { $7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox };","map":{"version":3,"names":["$fkdHx$intlStringsmodulejs","useId","$fkdHx$useId","useLocalizedStringFormatter","$fkdHx$useLocalizedStringFormatter","$parcel$interopDefault","a","__esModule","default","$7cb39d07f245a780$export$70e2eed1a92976ad","props","state","key","manager","selectionManager","checkboxId","isDisabled","canSelectItem","isSelected","onChange","select","stringFormatter","checkboxProps","id","format","useGridSelectionCheckbox"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/grid/dist/useGridSelectionCheckbox.mjs"],"sourcesContent":["import $fkdHx$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport {useId as $fkdHx$useId} from \"@react-aria/utils\";\nimport {useLocalizedStringFormatter as $fkdHx$useLocalizedStringFormatter} from \"@react-aria/i18n\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n\n\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n    let { key: key } = props;\n    let manager = state.selectionManager;\n    let checkboxId = (0, $fkdHx$useId)();\n    let isDisabled = !state.selectionManager.canSelectItem(key);\n    let isSelected = state.selectionManager.isSelected(key);\n    let onChange = ()=>manager.select(key);\n    const stringFormatter = (0, $fkdHx$useLocalizedStringFormatter)((0, ($parcel$interopDefault($fkdHx$intlStringsmodulejs))), \"@react-aria/grid\");\n    return {\n        checkboxProps: {\n            id: checkboxId,\n            \"aria-label\": stringFormatter.format(\"select\"),\n            isSelected: isSelected,\n            isDisabled: isDisabled,\n            onChange: onChange\n        }\n    };\n}\n\n\nexport {$7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox};\n//# sourceMappingURL=useGridSelectionCheckbox.mjs.map\n"],"mappings":"AAAA,OAAOA,0BAA0B,MAAM,mBAAmB;AAC1D,SAAQC,KAAK,IAAIC,YAAY,QAAO,mBAAmB;AACvD,SAAQC,2BAA2B,IAAIC,kCAAkC,QAAO,kBAAkB;AAGlG,SAASC,sBAAsBA,CAACC,CAAC,EAAE;EACjC,OAAOA,CAAC,IAAIA,CAAC,CAACC,UAAU,GAAGD,CAAC,CAACE,OAAO,GAAGF,CAAC;AAC1C;AAIA,SAASG,yCAAyCA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC7D,IAAI;IAAEC,GAAG,EAAEA;EAAI,CAAC,GAAGF,KAAK;EACxB,IAAIG,OAAO,GAAGF,KAAK,CAACG,gBAAgB;EACpC,IAAIC,UAAU,GAAG,CAAC,CAAC,EAAEb,YAAY,EAAE,CAAC;EACpC,IAAIc,UAAU,GAAG,CAACL,KAAK,CAACG,gBAAgB,CAACG,aAAa,CAACL,GAAG,CAAC;EAC3D,IAAIM,UAAU,GAAGP,KAAK,CAACG,gBAAgB,CAACI,UAAU,CAACN,GAAG,CAAC;EACvD,IAAIO,QAAQ,GAAGA,CAAA,KAAIN,OAAO,CAACO,MAAM,CAACR,GAAG,CAAC;EACtC,MAAMS,eAAe,GAAG,CAAC,CAAC,EAAEjB,kCAAkC,GAAG,CAAC,EAAGC,sBAAsB,CAACL,0BAA0B,CAAE,GAAG,kBAAkB,CAAC;EAC9I,OAAO;IACHsB,aAAa,EAAE;MACXC,EAAE,EAAER,UAAU;MACd,YAAY,EAAEM,eAAe,CAACG,MAAM,CAAC,QAAQ,CAAC;MAC9CN,UAAU,EAAEA,UAAU;MACtBF,UAAU,EAAEA,UAAU;MACtBG,QAAQ,EAAEA;IACd;EACJ,CAAC;AACL;AAGA,SAAQV,yCAAyC,IAAIgB,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}