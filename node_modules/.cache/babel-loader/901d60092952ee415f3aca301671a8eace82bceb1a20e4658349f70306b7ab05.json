{"ast":null,"code":"import { useFormValidationState as $l55kx$useFormValidationState } from \"@react-stately/form\";\nimport { useControlledState as $l55kx$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $l55kx$useMemo, useState as $l55kx$useState } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 10000000000);\nlet $a54cdc5c1942b639$var$i = 0;\nfunction $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {\n  // Preserved here for backward compatibility. React Aria now generates the name instead of stately.\n  let name = (0, $l55kx$useMemo)(() => props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`, [props.name]);\n  var _props_defaultValue;\n  let [selectedValue, setSelected] = (0, $l55kx$useControlledState)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);\n  let [lastFocusedValue, setLastFocusedValue] = (0, $l55kx$useState)(null);\n  let validation = (0, $l55kx$useFormValidationState)({\n    ...props,\n    value: selectedValue\n  });\n  let setSelectedValue = value => {\n    if (!props.isReadOnly && !props.isDisabled) {\n      setSelected(value);\n      validation.commitValidation();\n    }\n  };\n  let isInvalid = validation.displayValidation.isInvalid;\n  return {\n    ...validation,\n    name: name,\n    selectedValue: selectedValue,\n    setSelectedValue: setSelectedValue,\n    lastFocusedValue: lastFocusedValue,\n    setLastFocusedValue: setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isRequired: props.isRequired || false,\n    validationState: props.validationState || (isInvalid ? \"invalid\" : null),\n    isInvalid: isInvalid\n  };\n}\nexport { $a54cdc5c1942b639$export$bca9d026f8e704eb as useRadioGroupState };","map":{"version":3,"names":["useFormValidationState","$l55kx$useFormValidationState","useControlledState","$l55kx$useControlledState","useMemo","$l55kx$useMemo","useState","$l55kx$useState","$a54cdc5c1942b639$var$instance","Math","round","random","$a54cdc5c1942b639$var$i","$a54cdc5c1942b639$export$bca9d026f8e704eb","props","name","_props_defaultValue","selectedValue","setSelected","value","defaultValue","onChange","lastFocusedValue","setLastFocusedValue","validation","setSelectedValue","isReadOnly","isDisabled","commitValidation","isInvalid","displayValidation","isRequired","validationState","useRadioGroupState"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/radio/dist/useRadioGroupState.mjs"],"sourcesContent":["import {useFormValidationState as $l55kx$useFormValidationState} from \"@react-stately/form\";\nimport {useControlledState as $l55kx$useControlledState} from \"@react-stately/utils\";\nimport {useMemo as $l55kx$useMemo, useState as $l55kx$useState} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nlet $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 10000000000);\nlet $a54cdc5c1942b639$var$i = 0;\nfunction $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {\n    // Preserved here for backward compatibility. React Aria now generates the name instead of stately.\n    let name = (0, $l55kx$useMemo)(()=>props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`, [\n        props.name\n    ]);\n    var _props_defaultValue;\n    let [selectedValue, setSelected] = (0, $l55kx$useControlledState)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : null, props.onChange);\n    let [lastFocusedValue, setLastFocusedValue] = (0, $l55kx$useState)(null);\n    let validation = (0, $l55kx$useFormValidationState)({\n        ...props,\n        value: selectedValue\n    });\n    let setSelectedValue = (value)=>{\n        if (!props.isReadOnly && !props.isDisabled) {\n            setSelected(value);\n            validation.commitValidation();\n        }\n    };\n    let isInvalid = validation.displayValidation.isInvalid;\n    return {\n        ...validation,\n        name: name,\n        selectedValue: selectedValue,\n        setSelectedValue: setSelectedValue,\n        lastFocusedValue: lastFocusedValue,\n        setLastFocusedValue: setLastFocusedValue,\n        isDisabled: props.isDisabled || false,\n        isReadOnly: props.isReadOnly || false,\n        isRequired: props.isRequired || false,\n        validationState: props.validationState || (isInvalid ? \"invalid\" : null),\n        isInvalid: isInvalid\n    };\n}\n\n\nexport {$a54cdc5c1942b639$export$bca9d026f8e704eb as useRadioGroupState};\n//# sourceMappingURL=useRadioGroupState.mjs.map\n"],"mappings":"AAAA,SAAQA,sBAAsB,IAAIC,6BAA6B,QAAO,qBAAqB;AAC3F,SAAQC,kBAAkB,IAAIC,yBAAyB,QAAO,sBAAsB;AACpF,SAAQC,OAAO,IAAIC,cAAc,EAAEC,QAAQ,IAAIC,eAAe,QAAO,OAAO;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIC,8BAA8B,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC;AAC5E,IAAIC,uBAAuB,GAAG,CAAC;AAC/B,SAASC,yCAAyCA,CAACC,KAAK,EAAE;EACtD;EACA,IAAIC,IAAI,GAAG,CAAC,CAAC,EAAEV,cAAc,EAAE,MAAIS,KAAK,CAACC,IAAI,IAAK,eAAcP,8BAA+B,IAAG,EAAEI,uBAAwB,EAAC,EAAE,CAC3HE,KAAK,CAACC,IAAI,CACb,CAAC;EACF,IAAIC,mBAAmB;EACvB,IAAI,CAACC,aAAa,EAAEC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAEf,yBAAyB,EAAEW,KAAK,CAACK,KAAK,EAAE,CAACH,mBAAmB,GAAGF,KAAK,CAACM,YAAY,MAAM,IAAI,IAAIJ,mBAAmB,KAAK,KAAK,CAAC,GAAGA,mBAAmB,GAAG,IAAI,EAAEF,KAAK,CAACO,QAAQ,CAAC;EAClN,IAAI,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG,CAAC,CAAC,EAAEhB,eAAe,EAAE,IAAI,CAAC;EACxE,IAAIiB,UAAU,GAAG,CAAC,CAAC,EAAEvB,6BAA6B,EAAE;IAChD,GAAGa,KAAK;IACRK,KAAK,EAAEF;EACX,CAAC,CAAC;EACF,IAAIQ,gBAAgB,GAAIN,KAAK,IAAG;IAC5B,IAAI,CAACL,KAAK,CAACY,UAAU,IAAI,CAACZ,KAAK,CAACa,UAAU,EAAE;MACxCT,WAAW,CAACC,KAAK,CAAC;MAClBK,UAAU,CAACI,gBAAgB,CAAC,CAAC;IACjC;EACJ,CAAC;EACD,IAAIC,SAAS,GAAGL,UAAU,CAACM,iBAAiB,CAACD,SAAS;EACtD,OAAO;IACH,GAAGL,UAAU;IACbT,IAAI,EAAEA,IAAI;IACVE,aAAa,EAAEA,aAAa;IAC5BQ,gBAAgB,EAAEA,gBAAgB;IAClCH,gBAAgB,EAAEA,gBAAgB;IAClCC,mBAAmB,EAAEA,mBAAmB;IACxCI,UAAU,EAAEb,KAAK,CAACa,UAAU,IAAI,KAAK;IACrCD,UAAU,EAAEZ,KAAK,CAACY,UAAU,IAAI,KAAK;IACrCK,UAAU,EAAEjB,KAAK,CAACiB,UAAU,IAAI,KAAK;IACrCC,eAAe,EAAElB,KAAK,CAACkB,eAAe,KAAKH,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC;IACxEA,SAAS,EAAEA;EACf,CAAC;AACL;AAGA,SAAQhB,yCAAyC,IAAIoB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}