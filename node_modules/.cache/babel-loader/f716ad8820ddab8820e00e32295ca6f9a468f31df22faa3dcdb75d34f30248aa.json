{"ast":null,"code":"import { createFocusManager as $7CEvq$createFocusManager, getFocusableTreeWalker as $7CEvq$getFocusableTreeWalker } from \"@react-aria/focus\";\nimport { mergeProps as $7CEvq$mergeProps } from \"@react-aria/utils\";\nimport { useMemo as $7CEvq$useMemo } from \"react\";\nimport { useLocale as $7CEvq$useLocale } from \"@react-aria/i18n\";\nimport { usePress as $7CEvq$usePress } from \"@react-aria/interactions\";\nfunction $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref, disableArrowNavigation) {\n  let {\n    direction: direction\n  } = (0, $7CEvq$useLocale)();\n  let focusManager = (0, $7CEvq$useMemo)(() => (0, $7CEvq$createFocusManager)(ref), [ref]);\n  // Open the popover on alt + arrow down\n  let onKeyDown = e => {\n    if (!e.currentTarget.contains(e.target)) return;\n    if (e.altKey && (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") && \"setOpen\" in state) {\n      e.preventDefault();\n      e.stopPropagation();\n      state.setOpen(true);\n    }\n    if (disableArrowNavigation) return;\n    switch (e.key) {\n      case \"ArrowLeft\":\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === \"rtl\") focusManager.focusNext();else focusManager.focusPrevious();\n        break;\n      case \"ArrowRight\":\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === \"rtl\") focusManager.focusPrevious();else focusManager.focusNext();\n        break;\n    }\n  };\n  // Focus the first placeholder segment from the end on mouse down/touch up in the field.\n  let focusLast = () => {\n    var _window_event;\n    // Try to find the segment prior to the element that was clicked on.\n    let target = (_window_event = window.event) === null || _window_event === void 0 ? void 0 : _window_event.target;\n    let walker = (0, $7CEvq$getFocusableTreeWalker)(ref.current, {\n      tabbable: true\n    });\n    if (target) {\n      walker.currentNode = target;\n      target = walker.previousNode();\n    }\n    // If no target found, find the last element from the end.\n    if (!target) {\n      let last;\n      do {\n        last = walker.lastChild();\n        if (last) target = last;\n      } while (last);\n    }\n    // Now go backwards until we find an element that is not a placeholder.\n    while (target === null || target === void 0 ? void 0 : target.hasAttribute(\"data-placeholder\")) {\n      let prev = walker.previousNode();\n      if (prev && prev.hasAttribute(\"data-placeholder\")) target = prev;else break;\n    }\n    if (target) target.focus();\n  };\n  let {\n    pressProps: pressProps\n  } = (0, $7CEvq$usePress)({\n    preventFocusOnPress: true,\n    allowTextSelectionOnPress: true,\n    onPressStart(e) {\n      if (e.pointerType === \"mouse\") focusLast();\n    },\n    onPress(e) {\n      if (e.pointerType !== \"mouse\") focusLast();\n    }\n  });\n  return (0, $7CEvq$mergeProps)(pressProps, {\n    onKeyDown: onKeyDown\n  });\n}\nexport { $3dfb0f96be0d6a08$export$4a931266a3838b86 as useDatePickerGroup };","map":{"version":3,"names":["createFocusManager","$7CEvq$createFocusManager","getFocusableTreeWalker","$7CEvq$getFocusableTreeWalker","mergeProps","$7CEvq$mergeProps","useMemo","$7CEvq$useMemo","useLocale","$7CEvq$useLocale","usePress","$7CEvq$usePress","$3dfb0f96be0d6a08$export$4a931266a3838b86","state","ref","disableArrowNavigation","direction","focusManager","onKeyDown","e","currentTarget","contains","target","altKey","key","preventDefault","stopPropagation","setOpen","focusNext","focusPrevious","focusLast","_window_event","window","event","walker","current","tabbable","currentNode","previousNode","last","lastChild","hasAttribute","prev","focus","pressProps","preventFocusOnPress","allowTextSelectionOnPress","onPressStart","pointerType","onPress","useDatePickerGroup"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/datepicker/dist/useDatePickerGroup.mjs"],"sourcesContent":["import {createFocusManager as $7CEvq$createFocusManager, getFocusableTreeWalker as $7CEvq$getFocusableTreeWalker} from \"@react-aria/focus\";\nimport {mergeProps as $7CEvq$mergeProps} from \"@react-aria/utils\";\nimport {useMemo as $7CEvq$useMemo} from \"react\";\nimport {useLocale as $7CEvq$useLocale} from \"@react-aria/i18n\";\nimport {usePress as $7CEvq$usePress} from \"@react-aria/interactions\";\n\n\n\n\n\n\nfunction $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref, disableArrowNavigation) {\n    let { direction: direction } = (0, $7CEvq$useLocale)();\n    let focusManager = (0, $7CEvq$useMemo)(()=>(0, $7CEvq$createFocusManager)(ref), [\n        ref\n    ]);\n    // Open the popover on alt + arrow down\n    let onKeyDown = (e)=>{\n        if (!e.currentTarget.contains(e.target)) return;\n        if (e.altKey && (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") && \"setOpen\" in state) {\n            e.preventDefault();\n            e.stopPropagation();\n            state.setOpen(true);\n        }\n        if (disableArrowNavigation) return;\n        switch(e.key){\n            case \"ArrowLeft\":\n                e.preventDefault();\n                e.stopPropagation();\n                if (direction === \"rtl\") focusManager.focusNext();\n                else focusManager.focusPrevious();\n                break;\n            case \"ArrowRight\":\n                e.preventDefault();\n                e.stopPropagation();\n                if (direction === \"rtl\") focusManager.focusPrevious();\n                else focusManager.focusNext();\n                break;\n        }\n    };\n    // Focus the first placeholder segment from the end on mouse down/touch up in the field.\n    let focusLast = ()=>{\n        var _window_event;\n        // Try to find the segment prior to the element that was clicked on.\n        let target = (_window_event = window.event) === null || _window_event === void 0 ? void 0 : _window_event.target;\n        let walker = (0, $7CEvq$getFocusableTreeWalker)(ref.current, {\n            tabbable: true\n        });\n        if (target) {\n            walker.currentNode = target;\n            target = walker.previousNode();\n        }\n        // If no target found, find the last element from the end.\n        if (!target) {\n            let last;\n            do {\n                last = walker.lastChild();\n                if (last) target = last;\n            }while (last);\n        }\n        // Now go backwards until we find an element that is not a placeholder.\n        while(target === null || target === void 0 ? void 0 : target.hasAttribute(\"data-placeholder\")){\n            let prev = walker.previousNode();\n            if (prev && prev.hasAttribute(\"data-placeholder\")) target = prev;\n            else break;\n        }\n        if (target) target.focus();\n    };\n    let { pressProps: pressProps } = (0, $7CEvq$usePress)({\n        preventFocusOnPress: true,\n        allowTextSelectionOnPress: true,\n        onPressStart (e) {\n            if (e.pointerType === \"mouse\") focusLast();\n        },\n        onPress (e) {\n            if (e.pointerType !== \"mouse\") focusLast();\n        }\n    });\n    return (0, $7CEvq$mergeProps)(pressProps, {\n        onKeyDown: onKeyDown\n    });\n}\n\n\nexport {$3dfb0f96be0d6a08$export$4a931266a3838b86 as useDatePickerGroup};\n//# sourceMappingURL=useDatePickerGroup.mjs.map\n"],"mappings":"AAAA,SAAQA,kBAAkB,IAAIC,yBAAyB,EAAEC,sBAAsB,IAAIC,6BAA6B,QAAO,mBAAmB;AAC1I,SAAQC,UAAU,IAAIC,iBAAiB,QAAO,mBAAmB;AACjE,SAAQC,OAAO,IAAIC,cAAc,QAAO,OAAO;AAC/C,SAAQC,SAAS,IAAIC,gBAAgB,QAAO,kBAAkB;AAC9D,SAAQC,QAAQ,IAAIC,eAAe,QAAO,0BAA0B;AAOpE,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,GAAG,EAAEC,sBAAsB,EAAE;EACnF,IAAI;IAAEC,SAAS,EAAEA;EAAU,CAAC,GAAG,CAAC,CAAC,EAAEP,gBAAgB,EAAE,CAAC;EACtD,IAAIQ,YAAY,GAAG,CAAC,CAAC,EAAEV,cAAc,EAAE,MAAI,CAAC,CAAC,EAAEN,yBAAyB,EAAEa,GAAG,CAAC,EAAE,CAC5EA,GAAG,CACN,CAAC;EACF;EACA,IAAII,SAAS,GAAIC,CAAC,IAAG;IACjB,IAAI,CAACA,CAAC,CAACC,aAAa,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,EAAE;IACzC,IAAIH,CAAC,CAACI,MAAM,KAAKJ,CAAC,CAACK,GAAG,KAAK,WAAW,IAAIL,CAAC,CAACK,GAAG,KAAK,SAAS,CAAC,IAAI,SAAS,IAAIX,KAAK,EAAE;MAClFM,CAAC,CAACM,cAAc,CAAC,CAAC;MAClBN,CAAC,CAACO,eAAe,CAAC,CAAC;MACnBb,KAAK,CAACc,OAAO,CAAC,IAAI,CAAC;IACvB;IACA,IAAIZ,sBAAsB,EAAE;IAC5B,QAAOI,CAAC,CAACK,GAAG;MACR,KAAK,WAAW;QACZL,CAAC,CAACM,cAAc,CAAC,CAAC;QAClBN,CAAC,CAACO,eAAe,CAAC,CAAC;QACnB,IAAIV,SAAS,KAAK,KAAK,EAAEC,YAAY,CAACW,SAAS,CAAC,CAAC,CAAC,KAC7CX,YAAY,CAACY,aAAa,CAAC,CAAC;QACjC;MACJ,KAAK,YAAY;QACbV,CAAC,CAACM,cAAc,CAAC,CAAC;QAClBN,CAAC,CAACO,eAAe,CAAC,CAAC;QACnB,IAAIV,SAAS,KAAK,KAAK,EAAEC,YAAY,CAACY,aAAa,CAAC,CAAC,CAAC,KACjDZ,YAAY,CAACW,SAAS,CAAC,CAAC;QAC7B;IACR;EACJ,CAAC;EACD;EACA,IAAIE,SAAS,GAAGA,CAAA,KAAI;IAChB,IAAIC,aAAa;IACjB;IACA,IAAIT,MAAM,GAAG,CAACS,aAAa,GAAGC,MAAM,CAACC,KAAK,MAAM,IAAI,IAAIF,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACT,MAAM;IAChH,IAAIY,MAAM,GAAG,CAAC,CAAC,EAAE/B,6BAA6B,EAAEW,GAAG,CAACqB,OAAO,EAAE;MACzDC,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,IAAId,MAAM,EAAE;MACRY,MAAM,CAACG,WAAW,GAAGf,MAAM;MAC3BA,MAAM,GAAGY,MAAM,CAACI,YAAY,CAAC,CAAC;IAClC;IACA;IACA,IAAI,CAAChB,MAAM,EAAE;MACT,IAAIiB,IAAI;MACR,GAAG;QACCA,IAAI,GAAGL,MAAM,CAACM,SAAS,CAAC,CAAC;QACzB,IAAID,IAAI,EAAEjB,MAAM,GAAGiB,IAAI;MAC3B,CAAC,QAAOA,IAAI;IAChB;IACA;IACA,OAAMjB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACmB,YAAY,CAAC,kBAAkB,CAAC,EAAC;MAC1F,IAAIC,IAAI,GAAGR,MAAM,CAACI,YAAY,CAAC,CAAC;MAChC,IAAII,IAAI,IAAIA,IAAI,CAACD,YAAY,CAAC,kBAAkB,CAAC,EAAEnB,MAAM,GAAGoB,IAAI,CAAC,KAC5D;IACT;IACA,IAAIpB,MAAM,EAAEA,MAAM,CAACqB,KAAK,CAAC,CAAC;EAC9B,CAAC;EACD,IAAI;IAAEC,UAAU,EAAEA;EAAW,CAAC,GAAG,CAAC,CAAC,EAAEjC,eAAe,EAAE;IAClDkC,mBAAmB,EAAE,IAAI;IACzBC,yBAAyB,EAAE,IAAI;IAC/BC,YAAYA,CAAE5B,CAAC,EAAE;MACb,IAAIA,CAAC,CAAC6B,WAAW,KAAK,OAAO,EAAElB,SAAS,CAAC,CAAC;IAC9C,CAAC;IACDmB,OAAOA,CAAE9B,CAAC,EAAE;MACR,IAAIA,CAAC,CAAC6B,WAAW,KAAK,OAAO,EAAElB,SAAS,CAAC,CAAC;IAC9C;EACJ,CAAC,CAAC;EACF,OAAO,CAAC,CAAC,EAAEzB,iBAAiB,EAAEuC,UAAU,EAAE;IACtC1B,SAAS,EAAEA;EACf,CAAC,CAAC;AACN;AAGA,SAAQN,yCAAyC,IAAIsC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}