{"ast":null,"code":"import { useSlotId as $i6df2$useSlotId, filterDOMProps as $i6df2$filterDOMProps } from \"@react-aria/utils\";\nimport { focusSafely as $i6df2$focusSafely } from \"@react-aria/focus\";\nimport { useRef as $i6df2$useRef, useEffect as $i6df2$useEffect } from \"react\";\nimport { useOverlayFocusContain as $i6df2$useOverlayFocusContain } from \"@react-aria/overlays\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {\n  let {\n    role = \"dialog\"\n  } = props;\n  let titleId = (0, $i6df2$useSlotId)();\n  titleId = props[\"aria-label\"] ? undefined : titleId;\n  let isRefocusing = (0, $i6df2$useRef)(false);\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  (0, $i6df2$useEffect)(() => {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      (0, $i6df2$focusSafely)(ref.current);\n      // Safari on iOS does not move the VoiceOver cursor to the dialog\n      // or announce that it has opened until it has rendered. A workaround\n      // is to wait for half a second, then blur and re-focus the dialog.\n      let timeout = setTimeout(() => {\n        if (document.activeElement === ref.current) {\n          isRefocusing.current = true;\n          if (ref.current) {\n            ref.current.blur();\n            (0, $i6df2$focusSafely)(ref.current);\n          }\n          isRefocusing.current = false;\n        }\n      }, 500);\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [ref]);\n  (0, $i6df2$useOverlayFocusContain)();\n  // We do not use aria-modal due to a Safari bug which forces the first focusable element to be focused\n  // on mount when inside an iframe, no matter which element we programmatically focus.\n  // See https://bugs.webkit.org/show_bug.cgi?id=211934.\n  // useModal sets aria-hidden on all elements outside the dialog, so the dialog will behave as a modal\n  // even without aria-modal on the dialog itself.\n  return {\n    dialogProps: {\n      ...(0, $i6df2$filterDOMProps)(props, {\n        labelable: true\n      }),\n      role: role,\n      tabIndex: -1,\n      \"aria-labelledby\": props[\"aria-labelledby\"] || titleId,\n      // Prevent blur events from reaching useOverlay, which may cause\n      // popovers to close. Since focus is contained within the dialog,\n      // we don't want this to occur due to the above useEffect.\n      onBlur: e => {\n        if (isRefocusing.current) e.stopPropagation();\n      }\n    },\n    titleProps: {\n      id: titleId\n    }\n  };\n}\nexport { $40df3f8667284809$export$d55e7ee900f34e93 as useDialog };","map":{"version":3,"names":["useSlotId","$i6df2$useSlotId","filterDOMProps","$i6df2$filterDOMProps","focusSafely","$i6df2$focusSafely","useRef","$i6df2$useRef","useEffect","$i6df2$useEffect","useOverlayFocusContain","$i6df2$useOverlayFocusContain","$40df3f8667284809$export$d55e7ee900f34e93","props","ref","role","titleId","undefined","isRefocusing","current","contains","document","activeElement","timeout","setTimeout","blur","clearTimeout","dialogProps","labelable","tabIndex","onBlur","e","stopPropagation","titleProps","id","useDialog"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/dialog/dist/useDialog.mjs"],"sourcesContent":["import {useSlotId as $i6df2$useSlotId, filterDOMProps as $i6df2$filterDOMProps} from \"@react-aria/utils\";\nimport {focusSafely as $i6df2$focusSafely} from \"@react-aria/focus\";\nimport {useRef as $i6df2$useRef, useEffect as $i6df2$useEffect} from \"react\";\nimport {useOverlayFocusContain as $i6df2$useOverlayFocusContain} from \"@react-aria/overlays\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\nfunction $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {\n    let { role: role = \"dialog\" } = props;\n    let titleId = (0, $i6df2$useSlotId)();\n    titleId = props[\"aria-label\"] ? undefined : titleId;\n    let isRefocusing = (0, $i6df2$useRef)(false);\n    // Focus the dialog itself on mount, unless a child element is already focused.\n    (0, $i6df2$useEffect)(()=>{\n        if (ref.current && !ref.current.contains(document.activeElement)) {\n            (0, $i6df2$focusSafely)(ref.current);\n            // Safari on iOS does not move the VoiceOver cursor to the dialog\n            // or announce that it has opened until it has rendered. A workaround\n            // is to wait for half a second, then blur and re-focus the dialog.\n            let timeout = setTimeout(()=>{\n                if (document.activeElement === ref.current) {\n                    isRefocusing.current = true;\n                    if (ref.current) {\n                        ref.current.blur();\n                        (0, $i6df2$focusSafely)(ref.current);\n                    }\n                    isRefocusing.current = false;\n                }\n            }, 500);\n            return ()=>{\n                clearTimeout(timeout);\n            };\n        }\n    }, [\n        ref\n    ]);\n    (0, $i6df2$useOverlayFocusContain)();\n    // We do not use aria-modal due to a Safari bug which forces the first focusable element to be focused\n    // on mount when inside an iframe, no matter which element we programmatically focus.\n    // See https://bugs.webkit.org/show_bug.cgi?id=211934.\n    // useModal sets aria-hidden on all elements outside the dialog, so the dialog will behave as a modal\n    // even without aria-modal on the dialog itself.\n    return {\n        dialogProps: {\n            ...(0, $i6df2$filterDOMProps)(props, {\n                labelable: true\n            }),\n            role: role,\n            tabIndex: -1,\n            \"aria-labelledby\": props[\"aria-labelledby\"] || titleId,\n            // Prevent blur events from reaching useOverlay, which may cause\n            // popovers to close. Since focus is contained within the dialog,\n            // we don't want this to occur due to the above useEffect.\n            onBlur: (e)=>{\n                if (isRefocusing.current) e.stopPropagation();\n            }\n        },\n        titleProps: {\n            id: titleId\n        }\n    };\n}\n\n\nexport {$40df3f8667284809$export$d55e7ee900f34e93 as useDialog};\n//# sourceMappingURL=useDialog.mjs.map\n"],"mappings":"AAAA,SAAQA,SAAS,IAAIC,gBAAgB,EAAEC,cAAc,IAAIC,qBAAqB,QAAO,mBAAmB;AACxG,SAAQC,WAAW,IAAIC,kBAAkB,QAAO,mBAAmB;AACnE,SAAQC,MAAM,IAAIC,aAAa,EAAEC,SAAS,IAAIC,gBAAgB,QAAO,OAAO;AAC5E,SAAQC,sBAAsB,IAAIC,6BAA6B,QAAO,sBAAsB;;AAE5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC3D,IAAI;IAAQC,IAAI,GAAG;EAAS,CAAC,GAAGF,KAAK;EACrC,IAAIG,OAAO,GAAG,CAAC,CAAC,EAAEf,gBAAgB,EAAE,CAAC;EACrCe,OAAO,GAAGH,KAAK,CAAC,YAAY,CAAC,GAAGI,SAAS,GAAGD,OAAO;EACnD,IAAIE,YAAY,GAAG,CAAC,CAAC,EAAEX,aAAa,EAAE,KAAK,CAAC;EAC5C;EACA,CAAC,CAAC,EAAEE,gBAAgB,EAAE,MAAI;IACtB,IAAIK,GAAG,CAACK,OAAO,IAAI,CAACL,GAAG,CAACK,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAACC,aAAa,CAAC,EAAE;MAC9D,CAAC,CAAC,EAAEjB,kBAAkB,EAAES,GAAG,CAACK,OAAO,CAAC;MACpC;MACA;MACA;MACA,IAAII,OAAO,GAAGC,UAAU,CAAC,MAAI;QACzB,IAAIH,QAAQ,CAACC,aAAa,KAAKR,GAAG,CAACK,OAAO,EAAE;UACxCD,YAAY,CAACC,OAAO,GAAG,IAAI;UAC3B,IAAIL,GAAG,CAACK,OAAO,EAAE;YACbL,GAAG,CAACK,OAAO,CAACM,IAAI,CAAC,CAAC;YAClB,CAAC,CAAC,EAAEpB,kBAAkB,EAAES,GAAG,CAACK,OAAO,CAAC;UACxC;UACAD,YAAY,CAACC,OAAO,GAAG,KAAK;QAChC;MACJ,CAAC,EAAE,GAAG,CAAC;MACP,OAAO,MAAI;QACPO,YAAY,CAACH,OAAO,CAAC;MACzB,CAAC;IACL;EACJ,CAAC,EAAE,CACCT,GAAG,CACN,CAAC;EACF,CAAC,CAAC,EAAEH,6BAA6B,EAAE,CAAC;EACpC;EACA;EACA;EACA;EACA;EACA,OAAO;IACHgB,WAAW,EAAE;MACT,GAAG,CAAC,CAAC,EAAExB,qBAAqB,EAAEU,KAAK,EAAE;QACjCe,SAAS,EAAE;MACf,CAAC,CAAC;MACFb,IAAI,EAAEA,IAAI;MACVc,QAAQ,EAAE,CAAC,CAAC;MACZ,iBAAiB,EAAEhB,KAAK,CAAC,iBAAiB,CAAC,IAAIG,OAAO;MACtD;MACA;MACA;MACAc,MAAM,EAAGC,CAAC,IAAG;QACT,IAAIb,YAAY,CAACC,OAAO,EAAEY,CAAC,CAACC,eAAe,CAAC,CAAC;MACjD;IACJ,CAAC;IACDC,UAAU,EAAE;MACRC,EAAE,EAAElB;IACR;EACJ,CAAC;AACL;AAGA,SAAQJ,yCAAyC,IAAIuB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}