{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/Webs/Encuestas/Encuestas/encuestas/src/components/NotaFormulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotaFormulario() {\n  _s();\n  const [contenido, setContenido] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevenir el comportamiento predeterminado del formulario\n\n    const url = `http://localhost:8080/crearNota/${encodeURIComponent(contenido)}`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        // Método HTTP\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contenido\n        }) // Cuerpo de la solicitud\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const result = await response.json(); // Suponiendo que la API responde con JSON\n      console.log('Nota creada:', result);\n      alert('Nota creada con éxito!');\n    } catch (error) {\n      console.error('Error al crear la nota:', error);\n      alert('Error al crear la nota');\n    }\n    setContenido(''); // Limpiar el contenido del formulario\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: contenido,\n      onChange: e => setContenido(e.target.value),\n      placeholder: \"Escribe el contenido de la nota aqu\\xED...\",\n      rows: \"4\",\n      cols: \"50\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(NotaFormulario, \"2KjnSMfrEO+3xZQ0+34baY2csRQ=\");\n_c = NotaFormulario;\nexport default NotaFormulario;\nvar _c;\n$RefreshReg$(_c, \"NotaFormulario\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NotaFormulario","_s","contenido","setContenido","handleSubmit","event","preventDefault","url","encodeURIComponent","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","console","log","alert","error","onSubmit","children","value","onChange","e","target","placeholder","rows","cols","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/daniel/Documents/Webs/Encuestas/Encuestas/encuestas/src/components/NotaFormulario.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction NotaFormulario() {\n    const [contenido, setContenido] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();  // Prevenir el comportamiento predeterminado del formulario\n\n        const url = `http://localhost:8080/crearNota/${encodeURIComponent(contenido)}`;\n\n        try {\n            const response = await fetch(url, {\n                method: 'POST',  // Método HTTP\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ contenido })  // Cuerpo de la solicitud\n            });\n\n            if (!response.ok) {\n                throw new Error(`Error: ${response.status}`);\n            }\n\n            const result = await response.json(); // Suponiendo que la API responde con JSON\n            console.log('Nota creada:', result);\n            alert('Nota creada con éxito!');\n        } catch (error) {\n            console.error('Error al crear la nota:', error);\n            alert('Error al crear la nota');\n        }\n\n        setContenido('');  // Limpiar el contenido del formulario\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <textarea\n                value={contenido}\n                onChange={(e) => setContenido(e.target.value)}\n                placeholder=\"Escribe el contenido de la nota aquí...\"\n                rows=\"4\"\n                cols=\"50\"\n                required\n            />\n            <button type=\"submit\">Enviar</button>\n        </form>\n    );\n}\n\nexport default NotaFormulario;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMO,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAE;;IAEzB,MAAMC,GAAG,GAAI,mCAAkCC,kBAAkB,CAACN,SAAS,CAAE,EAAC;IAE9E,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;QAC9BI,MAAM,EAAE,MAAM;QAAG;QACjBC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb;QAAU,CAAC,CAAC,CAAE;MACzC,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,UAASR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAChD;MAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;MACtCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,MAAM,CAAC;MACnCI,KAAK,CAAC,wBAAwB,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CD,KAAK,CAAC,wBAAwB,CAAC;IACnC;IAEApB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAE;EACvB,CAAC;EAED,oBACIJ,OAAA;IAAM0B,QAAQ,EAAErB,YAAa;IAAAsB,QAAA,gBACzB3B,OAAA;MACI4B,KAAK,EAAEzB,SAAU;MACjB0B,QAAQ,EAAGC,CAAC,IAAK1B,YAAY,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC,4CAAyC;MACrDC,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC,IAAI;MACTC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFvC,OAAA;MAAQwC,IAAI,EAAC,QAAQ;MAAAb,QAAA,EAAC;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEf;AAACrC,EAAA,CA7CQD,cAAc;AAAAwC,EAAA,GAAdxC,cAAc;AA+CvB,eAAeA,cAAc;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}