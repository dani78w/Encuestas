{"ast":null,"code":"import $4stjr$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { announce as $4stjr$announce } from \"@react-aria/live-announcer\";\nimport { useLocalizedStringFormatter as $4stjr$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useRef as $4stjr$useRef } from \"react\";\nimport { useUpdateEffect as $4stjr$useUpdateEffect } from \"@react-aria/utils\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $92599c3fd427b763$export$137e594ef3218a10(props, state) {\n  let {\n    getRowText = key => {\n      var _state_collection_getTextValue, _state_collection, _state_collection_getItem;\n      var _state_collection_getTextValue1;\n      return (_state_collection_getTextValue1 = (_state_collection_getTextValue = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue === void 0 ? void 0 : _state_collection_getTextValue.call(_state_collection, key)) !== null && _state_collection_getTextValue1 !== void 0 ? _state_collection_getTextValue1 : (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;\n    }\n  } = props;\n  let stringFormatter = (0, $4stjr$useLocalizedStringFormatter)((0, $parcel$interopDefault($4stjr$intlStringsmodulejs)), \"@react-aria/grid\");\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = (0, $4stjr$useRef)(selection);\n  (0, $4stjr$useUpdateEffect)(() => {\n    var _lastSelection_current;\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n      return;\n    }\n    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);\n    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === \"replace\";\n    let messages = [];\n    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) messages.push(stringFormatter.format(\"selectedItem\", {\n          item: currentSelectionText\n        }));\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) messages.push(stringFormatter.format(\"selectedItem\", {\n        item: addedText\n      }));\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) messages.push(stringFormatter.format(\"deselectedItem\", {\n          item: removedText\n        }));\n      }\n    }\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === \"multiple\") {\n      if (messages.length === 0 || selection === \"all\" || selection.size > 1 || lastSelection.current === \"all\" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1) messages.push(selection === \"all\" ? stringFormatter.format(\"selectedAll\") : stringFormatter.format(\"selectedCount\", {\n        count: selection.size\n      }));\n    }\n    if (messages.length > 0) (0, $4stjr$announce)(messages.join(\" \"));\n    lastSelection.current = selection;\n  }, [selection]);\n}\nfunction $92599c3fd427b763$var$diffSelection(a, b) {\n  let res = new Set();\n  if (a === \"all\" || b === \"all\") return res;\n  for (let key of a.keys()) if (!b.has(key)) res.add(key);\n  return res;\n}\nexport { $92599c3fd427b763$export$137e594ef3218a10 as useGridSelectionAnnouncement };","map":{"version":3,"names":["$4stjr$intlStringsmodulejs","announce","$4stjr$announce","useLocalizedStringFormatter","$4stjr$useLocalizedStringFormatter","useRef","$4stjr$useRef","useUpdateEffect","$4stjr$useUpdateEffect","$parcel$interopDefault","a","__esModule","default","$92599c3fd427b763$export$137e594ef3218a10","props","state","getRowText","key","_state_collection_getTextValue","_state_collection","_state_collection_getItem","_state_collection_getTextValue1","collection","getTextValue","call","getItem","textValue","stringFormatter","selection","selectionManager","rawSelection","lastSelection","_lastSelection_current","isFocused","current","addedKeys","$92599c3fd427b763$var$diffSelection","removedKeys","isReplace","selectionBehavior","messages","selectedKeys","size","keys","next","value","currentSelectionText","push","format","item","addedText","removedText","selectionMode","length","count","join","b","res","Set","has","add","useGridSelectionAnnouncement"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/grid/dist/useGridSelectionAnnouncement.mjs"],"sourcesContent":["import $4stjr$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport {announce as $4stjr$announce} from \"@react-aria/live-announcer\";\nimport {useLocalizedStringFormatter as $4stjr$useLocalizedStringFormatter} from \"@react-aria/i18n\";\nimport {useRef as $4stjr$useRef} from \"react\";\nimport {useUpdateEffect as $4stjr$useUpdateEffect} from \"@react-aria/utils\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\n\nfunction $92599c3fd427b763$export$137e594ef3218a10(props, state) {\n    let { getRowText: getRowText = (key)=>{\n        var _state_collection_getTextValue, _state_collection, _state_collection_getItem;\n        var _state_collection_getTextValue1;\n        return (_state_collection_getTextValue1 = (_state_collection_getTextValue = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue === void 0 ? void 0 : _state_collection_getTextValue.call(_state_collection, key)) !== null && _state_collection_getTextValue1 !== void 0 ? _state_collection_getTextValue1 : (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;\n    } } = props;\n    let stringFormatter = (0, $4stjr$useLocalizedStringFormatter)((0, ($parcel$interopDefault($4stjr$intlStringsmodulejs))), \"@react-aria/grid\");\n    // Many screen readers do not announce when items in a grid are selected/deselected.\n    // We do this using an ARIA live region.\n    let selection = state.selectionManager.rawSelection;\n    let lastSelection = (0, $4stjr$useRef)(selection);\n    (0, $4stjr$useUpdateEffect)(()=>{\n        var _lastSelection_current;\n        if (!state.selectionManager.isFocused) {\n            lastSelection.current = selection;\n            return;\n        }\n        let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);\n        let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);\n        // If adding or removing a single row from the selection, announce the name of that item.\n        let isReplace = state.selectionManager.selectionBehavior === \"replace\";\n        let messages = [];\n        if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n            if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n                let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n                if (currentSelectionText) messages.push(stringFormatter.format(\"selectedItem\", {\n                    item: currentSelectionText\n                }));\n            }\n        } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n            let addedText = getRowText(addedKeys.keys().next().value);\n            if (addedText) messages.push(stringFormatter.format(\"selectedItem\", {\n                item: addedText\n            }));\n        } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n            if (state.collection.getItem(removedKeys.keys().next().value)) {\n                let removedText = getRowText(removedKeys.keys().next().value);\n                if (removedText) messages.push(stringFormatter.format(\"deselectedItem\", {\n                    item: removedText\n                }));\n            }\n        }\n        // Announce how many items are selected, except when selecting the first item.\n        if (state.selectionManager.selectionMode === \"multiple\") {\n            if (messages.length === 0 || selection === \"all\" || selection.size > 1 || lastSelection.current === \"all\" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1) messages.push(selection === \"all\" ? stringFormatter.format(\"selectedAll\") : stringFormatter.format(\"selectedCount\", {\n                count: selection.size\n            }));\n        }\n        if (messages.length > 0) (0, $4stjr$announce)(messages.join(\" \"));\n        lastSelection.current = selection;\n    }, [\n        selection\n    ]);\n}\nfunction $92599c3fd427b763$var$diffSelection(a, b) {\n    let res = new Set();\n    if (a === \"all\" || b === \"all\") return res;\n    for (let key of a.keys())if (!b.has(key)) res.add(key);\n    return res;\n}\n\n\nexport {$92599c3fd427b763$export$137e594ef3218a10 as useGridSelectionAnnouncement};\n//# sourceMappingURL=useGridSelectionAnnouncement.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}