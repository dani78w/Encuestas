{"ast":null,"code":"/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */class $16805b1b18093c5f$export$de3fdf6493c353d {\n  *[Symbol.iterator]() {\n    yield* [...this.rows];\n  }\n  get size() {\n    return [...this.rows].length;\n  }\n  getKeys() {\n    return this.keyMap.keys();\n  }\n  getKeyBefore(key) {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey : null;\n  }\n  getKeyAfter(key) {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey : null;\n  }\n  getFirstKey() {\n    var _;\n    return (_ = [...this.rows][0]) === null || _ === void 0 ? void 0 : _.key;\n  }\n  getLastKey() {\n    var _rows_;\n    let rows = [...this.rows];\n    return (_rows_ = rows[rows.length - 1]) === null || _rows_ === void 0 ? void 0 : _rows_.key;\n  }\n  getItem(key) {\n    return this.keyMap.get(key);\n  }\n  at(idx) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n  getChildren(key) {\n    let node = this.keyMap.get(key);\n    return (node === null || node === void 0 ? void 0 : node.childNodes) || [];\n  }\n  constructor(opts) {\n    this.keyMap = new Map();\n    this.keyMap = new Map();\n    this.columnCount = opts === null || opts === void 0 ? void 0 : opts.columnCount;\n    this.rows = [];\n    let visit = node => {\n      // If the node is the same object as the previous node for the same key,\n      // we can skip this node and its children. We always visit columns though,\n      // because we depend on order to build the columns array.\n      let prevNode = this.keyMap.get(node.key);\n      if (opts.visitNode) node = opts.visitNode(node);\n      this.keyMap.set(node.key, node);\n      let childKeys = new Set();\n      let last;\n      for (let child of node.childNodes) {\n        if (child.type === \"cell\" && child.parentKey == null)\n          // if child is a cell parent key isn't already established by the collection, match child node to parent row\n          child.parentKey = node.key;\n        childKeys.add(child.key);\n        if (last) {\n          last.nextKey = child.key;\n          child.prevKey = last.key;\n        } else child.prevKey = null;\n        visit(child);\n        last = child;\n      }\n      if (last) last.nextKey = null;\n      // Remove deleted nodes and their children from the key map\n      if (prevNode) {\n        for (let child of prevNode.childNodes) if (!childKeys.has(child.key)) remove(child);\n      }\n    };\n    let remove = node => {\n      this.keyMap.delete(node.key);\n      for (let child of node.childNodes) if (this.keyMap.get(child.key) === child) remove(child);\n    };\n    let last;\n    opts.items.forEach((node, i) => {\n      let rowNode = {\n        level: 0,\n        key: \"row-\" + i,\n        type: \"row\",\n        value: undefined,\n        hasChildNodes: true,\n        childNodes: [...node.childNodes],\n        rendered: undefined,\n        textValue: undefined,\n        ...node\n      };\n      if (last) {\n        last.nextKey = rowNode.key;\n        rowNode.prevKey = last.key;\n      } else rowNode.prevKey = null;\n      this.rows.push(rowNode);\n      visit(rowNode);\n      last = rowNode;\n    });\n    if (last) last.nextKey = null;\n  }\n}\nexport { $16805b1b18093c5f$export$de3fdf6493c353d as GridCollection };","map":{"version":3,"names":["$16805b1b18093c5f$export$de3fdf6493c353d","Symbol","iterator","rows","size","length","getKeys","keyMap","keys","getKeyBefore","key","node","get","prevKey","getKeyAfter","nextKey","getFirstKey","_","getLastKey","_rows_","getItem","at","idx","getChildren","childNodes","constructor","opts","Map","columnCount","visit","prevNode","visitNode","set","childKeys","Set","last","child","type","parentKey","add","has","remove","delete","items","forEach","i","rowNode","level","value","undefined","hasChildNodes","rendered","textValue","push","GridCollection"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/grid/dist/GridCollection.mjs"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ class $16805b1b18093c5f$export$de3fdf6493c353d {\n    *[Symbol.iterator]() {\n        yield* [\n            ...this.rows\n        ];\n    }\n    get size() {\n        return [\n            ...this.rows\n        ].length;\n    }\n    getKeys() {\n        return this.keyMap.keys();\n    }\n    getKeyBefore(key) {\n        let node = this.keyMap.get(key);\n        return node ? node.prevKey : null;\n    }\n    getKeyAfter(key) {\n        let node = this.keyMap.get(key);\n        return node ? node.nextKey : null;\n    }\n    getFirstKey() {\n        var _;\n        return (_ = [\n            ...this.rows\n        ][0]) === null || _ === void 0 ? void 0 : _.key;\n    }\n    getLastKey() {\n        var _rows_;\n        let rows = [\n            ...this.rows\n        ];\n        return (_rows_ = rows[rows.length - 1]) === null || _rows_ === void 0 ? void 0 : _rows_.key;\n    }\n    getItem(key) {\n        return this.keyMap.get(key);\n    }\n    at(idx) {\n        const keys = [\n            ...this.getKeys()\n        ];\n        return this.getItem(keys[idx]);\n    }\n    getChildren(key) {\n        let node = this.keyMap.get(key);\n        return (node === null || node === void 0 ? void 0 : node.childNodes) || [];\n    }\n    constructor(opts){\n        this.keyMap = new Map();\n        this.keyMap = new Map();\n        this.columnCount = opts === null || opts === void 0 ? void 0 : opts.columnCount;\n        this.rows = [];\n        let visit = (node)=>{\n            // If the node is the same object as the previous node for the same key,\n            // we can skip this node and its children. We always visit columns though,\n            // because we depend on order to build the columns array.\n            let prevNode = this.keyMap.get(node.key);\n            if (opts.visitNode) node = opts.visitNode(node);\n            this.keyMap.set(node.key, node);\n            let childKeys = new Set();\n            let last;\n            for (let child of node.childNodes){\n                if (child.type === \"cell\" && child.parentKey == null) // if child is a cell parent key isn't already established by the collection, match child node to parent row\n                child.parentKey = node.key;\n                childKeys.add(child.key);\n                if (last) {\n                    last.nextKey = child.key;\n                    child.prevKey = last.key;\n                } else child.prevKey = null;\n                visit(child);\n                last = child;\n            }\n            if (last) last.nextKey = null;\n            // Remove deleted nodes and their children from the key map\n            if (prevNode) {\n                for (let child of prevNode.childNodes)if (!childKeys.has(child.key)) remove(child);\n            }\n        };\n        let remove = (node)=>{\n            this.keyMap.delete(node.key);\n            for (let child of node.childNodes)if (this.keyMap.get(child.key) === child) remove(child);\n        };\n        let last;\n        opts.items.forEach((node, i)=>{\n            let rowNode = {\n                level: 0,\n                key: \"row-\" + i,\n                type: \"row\",\n                value: undefined,\n                hasChildNodes: true,\n                childNodes: [\n                    ...node.childNodes\n                ],\n                rendered: undefined,\n                textValue: undefined,\n                ...node\n            };\n            if (last) {\n                last.nextKey = rowNode.key;\n                rowNode.prevKey = last.key;\n            } else rowNode.prevKey = null;\n            this.rows.push(rowNode);\n            visit(rowNode);\n            last = rowNode;\n        });\n        if (last) last.nextKey = null;\n    }\n}\n\n\nexport {$16805b1b18093c5f$export$de3fdf6493c353d as GridCollection};\n//# sourceMappingURL=GridCollection.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}