{"ast":null,"code":"import { epochFromDate as $11d87f3f76e88657$export$bd4fb2bc8bb06fb, fromAbsolute as $11d87f3f76e88657$export$1b96692a1ba042ac, toAbsolute as $11d87f3f76e88657$export$5107c82f94518f5c, toCalendar as $11d87f3f76e88657$export$b4a036af3fc0b032, toCalendarDateTime as $11d87f3f76e88657$export$b21e0b124e224484 } from \"./conversion.mjs\";\nimport { GregorianCalendar as $3b62074eb05584b2$export$80ee6245ec4f29ec } from \"./GregorianCalendar.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $735220c2d4774dd3$var$ONE_HOUR = 3600000;\nfunction $735220c2d4774dd3$export$e16d8520af44a096(date, duration) {\n  let mutableDate = date.copy();\n  let days = \"hour\" in mutableDate ? $735220c2d4774dd3$var$addTimeFields(mutableDate, duration) : 0;\n  $735220c2d4774dd3$var$addYears(mutableDate, duration.years || 0);\n  if (mutableDate.calendar.balanceYearMonth) mutableDate.calendar.balanceYearMonth(mutableDate, date);\n  mutableDate.month += duration.months || 0;\n  $735220c2d4774dd3$var$balanceYearMonth(mutableDate);\n  $735220c2d4774dd3$var$constrainMonthDay(mutableDate);\n  mutableDate.day += (duration.weeks || 0) * 7;\n  mutableDate.day += duration.days || 0;\n  mutableDate.day += days;\n  $735220c2d4774dd3$var$balanceDay(mutableDate);\n  if (mutableDate.calendar.balanceDate) mutableDate.calendar.balanceDate(mutableDate);\n  // Constrain in case adding ended up with a date outside the valid range for the calendar system.\n  // The behavior here is slightly different than when constraining in the `set` function in that\n  // we adjust smaller fields to their minimum/maximum values rather than constraining each field\n  // individually. This matches the general behavior of `add` vs `set` regarding how fields are balanced.\n  if (mutableDate.year < 1) {\n    mutableDate.year = 1;\n    mutableDate.month = 1;\n    mutableDate.day = 1;\n  }\n  let maxYear = mutableDate.calendar.getYearsInEra(mutableDate);\n  if (mutableDate.year > maxYear) {\n    var _mutableDate_calendar_isInverseEra, _mutableDate_calendar;\n    let isInverseEra = (_mutableDate_calendar_isInverseEra = (_mutableDate_calendar = mutableDate.calendar).isInverseEra) === null || _mutableDate_calendar_isInverseEra === void 0 ? void 0 : _mutableDate_calendar_isInverseEra.call(_mutableDate_calendar, mutableDate);\n    mutableDate.year = maxYear;\n    mutableDate.month = isInverseEra ? 1 : mutableDate.calendar.getMonthsInYear(mutableDate);\n    mutableDate.day = isInverseEra ? 1 : mutableDate.calendar.getDaysInMonth(mutableDate);\n  }\n  if (mutableDate.month < 1) {\n    mutableDate.month = 1;\n    mutableDate.day = 1;\n  }\n  let maxMonth = mutableDate.calendar.getMonthsInYear(mutableDate);\n  if (mutableDate.month > maxMonth) {\n    mutableDate.month = maxMonth;\n    mutableDate.day = mutableDate.calendar.getDaysInMonth(mutableDate);\n  }\n  mutableDate.day = Math.max(1, Math.min(mutableDate.calendar.getDaysInMonth(mutableDate), mutableDate.day));\n  return mutableDate;\n}\nfunction $735220c2d4774dd3$var$addYears(date, years) {\n  var _date_calendar_isInverseEra, _date_calendar;\n  if ((_date_calendar_isInverseEra = (_date_calendar = date.calendar).isInverseEra) === null || _date_calendar_isInverseEra === void 0 ? void 0 : _date_calendar_isInverseEra.call(_date_calendar, date)) years = -years;\n  date.year += years;\n}\nfunction $735220c2d4774dd3$var$balanceYearMonth(date) {\n  while (date.month < 1) {\n    $735220c2d4774dd3$var$addYears(date, -1);\n    date.month += date.calendar.getMonthsInYear(date);\n  }\n  let monthsInYear = 0;\n  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {\n    date.month -= monthsInYear;\n    $735220c2d4774dd3$var$addYears(date, 1);\n  }\n}\nfunction $735220c2d4774dd3$var$balanceDay(date) {\n  while (date.day < 1) {\n    date.month--;\n    $735220c2d4774dd3$var$balanceYearMonth(date);\n    date.day += date.calendar.getDaysInMonth(date);\n  }\n  while (date.day > date.calendar.getDaysInMonth(date)) {\n    date.day -= date.calendar.getDaysInMonth(date);\n    date.month++;\n    $735220c2d4774dd3$var$balanceYearMonth(date);\n  }\n}\nfunction $735220c2d4774dd3$var$constrainMonthDay(date) {\n  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));\n  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));\n}\nfunction $735220c2d4774dd3$export$c4e2ecac49351ef2(date) {\n  if (date.calendar.constrainDate) date.calendar.constrainDate(date);\n  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));\n  $735220c2d4774dd3$var$constrainMonthDay(date);\n}\nfunction $735220c2d4774dd3$export$3e2544e88a25bff8(duration) {\n  let inverseDuration = {};\n  for (let key in duration) if (typeof duration[key] === \"number\") inverseDuration[key] = -duration[key];\n  return inverseDuration;\n}\nfunction $735220c2d4774dd3$export$4e2d2ead65e5f7e3(date, duration) {\n  return $735220c2d4774dd3$export$e16d8520af44a096(date, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\nfunction $735220c2d4774dd3$export$adaa4cf7ef1b65be(date, fields) {\n  let mutableDate = date.copy();\n  if (fields.era != null) mutableDate.era = fields.era;\n  if (fields.year != null) mutableDate.year = fields.year;\n  if (fields.month != null) mutableDate.month = fields.month;\n  if (fields.day != null) mutableDate.day = fields.day;\n  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutableDate);\n  return mutableDate;\n}\nfunction $735220c2d4774dd3$export$e5d5e1c1822b6e56(value, fields) {\n  let mutableValue = value.copy();\n  if (fields.hour != null) mutableValue.hour = fields.hour;\n  if (fields.minute != null) mutableValue.minute = fields.minute;\n  if (fields.second != null) mutableValue.second = fields.second;\n  if (fields.millisecond != null) mutableValue.millisecond = fields.millisecond;\n  $735220c2d4774dd3$export$7555de1e070510cb(mutableValue);\n  return mutableValue;\n}\nfunction $735220c2d4774dd3$var$balanceTime(time) {\n  time.second += Math.floor(time.millisecond / 1000);\n  time.millisecond = $735220c2d4774dd3$var$nonNegativeMod(time.millisecond, 1000);\n  time.minute += Math.floor(time.second / 60);\n  time.second = $735220c2d4774dd3$var$nonNegativeMod(time.second, 60);\n  time.hour += Math.floor(time.minute / 60);\n  time.minute = $735220c2d4774dd3$var$nonNegativeMod(time.minute, 60);\n  let days = Math.floor(time.hour / 24);\n  time.hour = $735220c2d4774dd3$var$nonNegativeMod(time.hour, 24);\n  return days;\n}\nfunction $735220c2d4774dd3$export$7555de1e070510cb(time) {\n  time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));\n  time.second = Math.max(0, Math.min(time.second, 59));\n  time.minute = Math.max(0, Math.min(time.minute, 59));\n  time.hour = Math.max(0, Math.min(time.hour, 23));\n}\nfunction $735220c2d4774dd3$var$nonNegativeMod(a, b) {\n  let result = a % b;\n  if (result < 0) result += b;\n  return result;\n}\nfunction $735220c2d4774dd3$var$addTimeFields(time, duration) {\n  time.hour += duration.hours || 0;\n  time.minute += duration.minutes || 0;\n  time.second += duration.seconds || 0;\n  time.millisecond += duration.milliseconds || 0;\n  return $735220c2d4774dd3$var$balanceTime(time);\n}\nfunction $735220c2d4774dd3$export$7ed87b6bc2506470(time, duration) {\n  let res = time.copy();\n  $735220c2d4774dd3$var$addTimeFields(res, duration);\n  return res;\n}\nfunction $735220c2d4774dd3$export$fe34d3a381cd7501(time, duration) {\n  return $735220c2d4774dd3$export$7ed87b6bc2506470(time, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\nfunction $735220c2d4774dd3$export$d52ced6badfb9a4c(value, field, amount, options) {\n  let mutable = value.copy();\n  switch (field) {\n    case \"era\":\n      {\n        let eras = value.calendar.getEras();\n        let eraIndex = eras.indexOf(value.era);\n        if (eraIndex < 0) throw new Error(\"Invalid era: \" + value.era);\n        eraIndex = $735220c2d4774dd3$var$cycleValue(eraIndex, amount, 0, eras.length - 1, options === null || options === void 0 ? void 0 : options.round);\n        mutable.era = eras[eraIndex];\n        // Constrain the year and other fields within the era, so the era doesn't change when we balance below.\n        $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);\n        break;\n      }\n    case \"year\":\n      var _mutable_calendar_isInverseEra, _mutable_calendar;\n      if ((_mutable_calendar_isInverseEra = (_mutable_calendar = mutable.calendar).isInverseEra) === null || _mutable_calendar_isInverseEra === void 0 ? void 0 : _mutable_calendar_isInverseEra.call(_mutable_calendar, mutable)) amount = -amount;\n      // The year field should not cycle within the era as that can cause weird behavior affecting other fields.\n      // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back\n      // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.\n      mutable.year = $735220c2d4774dd3$var$cycleValue(value.year, amount, -Infinity, 9999, options === null || options === void 0 ? void 0 : options.round);\n      if (mutable.year === -Infinity) mutable.year = 1;\n      if (mutable.calendar.balanceYearMonth) mutable.calendar.balanceYearMonth(mutable, value);\n      break;\n    case \"month\":\n      mutable.month = $735220c2d4774dd3$var$cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options === null || options === void 0 ? void 0 : options.round);\n      break;\n    case \"day\":\n      mutable.day = $735220c2d4774dd3$var$cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options === null || options === void 0 ? void 0 : options.round);\n      break;\n    default:\n      throw new Error(\"Unsupported field \" + field);\n  }\n  if (value.calendar.balanceDate) value.calendar.balanceDate(mutable);\n  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);\n  return mutable;\n}\nfunction $735220c2d4774dd3$export$dd02b3e0007dfe28(value, field, amount, options) {\n  let mutable = value.copy();\n  switch (field) {\n    case \"hour\":\n      {\n        let hours = value.hour;\n        let min = 0;\n        let max = 23;\n        if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {\n          let isPM = hours >= 12;\n          min = isPM ? 12 : 0;\n          max = isPM ? 23 : 11;\n        }\n        mutable.hour = $735220c2d4774dd3$var$cycleValue(hours, amount, min, max, options === null || options === void 0 ? void 0 : options.round);\n        break;\n      }\n    case \"minute\":\n      mutable.minute = $735220c2d4774dd3$var$cycleValue(value.minute, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);\n      break;\n    case \"second\":\n      mutable.second = $735220c2d4774dd3$var$cycleValue(value.second, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);\n      break;\n    case \"millisecond\":\n      mutable.millisecond = $735220c2d4774dd3$var$cycleValue(value.millisecond, amount, 0, 999, options === null || options === void 0 ? void 0 : options.round);\n      break;\n    default:\n      throw new Error(\"Unsupported field \" + field);\n  }\n  return mutable;\n}\nfunction $735220c2d4774dd3$var$cycleValue(value, amount, min, max, round = false) {\n  if (round) {\n    value += Math.sign(amount);\n    if (value < min) value = max;\n    let div = Math.abs(amount);\n    if (amount > 0) value = Math.ceil(value / div) * div;else value = Math.floor(value / div) * div;\n    if (value > max) value = min;\n  } else {\n    value += amount;\n    if (value < min) value = max - (min - value - 1);else if (value > max) value = min + (value - max - 1);\n  }\n  return value;\n}\nfunction $735220c2d4774dd3$export$96b1d28349274637(dateTime, duration) {\n  let ms;\n  if (duration.years != null && duration.years !== 0 || duration.months != null && duration.months !== 0 || duration.weeks != null && duration.weeks !== 0 || duration.days != null && duration.days !== 0) {\n    let res = $735220c2d4774dd3$export$e16d8520af44a096((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), {\n      years: duration.years,\n      months: duration.months,\n      weeks: duration.weeks,\n      days: duration.days\n    });\n    // Changing the date may change the timezone offset, so we need to recompute\n    // using the 'compatible' disambiguation.\n    ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone);\n  } else\n    // Otherwise, preserve the offset of the original date.\n    ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;\n  // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.\n  // For example, adding one hour during a DST transition may result in the hour field staying the same or\n  // skipping an hour. This results in the offset field changing value instead of the specified field.\n  ms += duration.milliseconds || 0;\n  ms += (duration.seconds || 0) * 1000;\n  ms += (duration.minutes || 0) * 60000;\n  ms += (duration.hours || 0) * 3600000;\n  let res = (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone);\n  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(res, dateTime.calendar);\n}\nfunction $735220c2d4774dd3$export$6814caac34ca03c7(dateTime, duration) {\n  return $735220c2d4774dd3$export$96b1d28349274637(dateTime, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\nfunction $735220c2d4774dd3$export$9a297d111fc86b79(dateTime, field, amount, options) {\n  // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.\n  // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC\n  // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.\n  switch (field) {\n    case \"hour\":\n      {\n        let min = 0;\n        let max = 23;\n        if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {\n          let isPM = dateTime.hour >= 12;\n          min = isPM ? 12 : 0;\n          max = isPM ? 23 : 11;\n        }\n        // The minimum and maximum hour may be affected by daylight saving time.\n        // For example, it might jump forward at midnight, and skip 1am.\n        // Or it might end at midnight and repeat the 11pm hour. To handle this, we get\n        // the possible absolute times for the min and max, and find the maximum range\n        // that is within the current day.\n        let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);\n        let minDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {\n          hour: min\n        }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());\n        let minAbsolute = [(0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, \"earlier\"), (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, \"later\")].filter(ms => (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone).day === minDate.day)[0];\n        let maxDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {\n          hour: max\n        }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());\n        let maxAbsolute = [(0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, \"earlier\"), (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, \"later\")].filter(ms => (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone).day === maxDate.day).pop();\n        // Since hours may repeat, we need to operate on the absolute time in milliseconds.\n        // This is done in hours from the Unix epoch so that cycleValue works correctly,\n        // and then converted back to milliseconds.\n        let ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;\n        let hours = Math.floor(ms / $735220c2d4774dd3$var$ONE_HOUR);\n        let remainder = ms % $735220c2d4774dd3$var$ONE_HOUR;\n        ms = $735220c2d4774dd3$var$cycleValue(hours, amount, Math.floor(minAbsolute / $735220c2d4774dd3$var$ONE_HOUR), Math.floor(maxAbsolute / $735220c2d4774dd3$var$ONE_HOUR), options === null || options === void 0 ? void 0 : options.round) * $735220c2d4774dd3$var$ONE_HOUR + remainder;\n        // Now compute the new timezone offset, and convert the absolute time back to local time.\n        return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);\n      }\n    case \"minute\":\n    case \"second\":\n    case \"millisecond\":\n      // @ts-ignore\n      return $735220c2d4774dd3$export$dd02b3e0007dfe28(dateTime, field, amount, options);\n    case \"era\":\n    case \"year\":\n    case \"month\":\n    case \"day\":\n      {\n        let res = $735220c2d4774dd3$export$d52ced6badfb9a4c((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), field, amount, options);\n        let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone);\n        return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);\n      }\n    default:\n      throw new Error(\"Unsupported field \" + field);\n  }\n}\nfunction $735220c2d4774dd3$export$31b5430eb18be4f8(dateTime, fields, disambiguation) {\n  // Set the date/time fields, and recompute the UTC offset to account for DST changes.\n  // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.\n  let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);\n  let res = $735220c2d4774dd3$export$e5d5e1c1822b6e56($735220c2d4774dd3$export$adaa4cf7ef1b65be(plainDateTime, fields), fields);\n  // If the resulting plain date time values are equal, return the original time.\n  // We don't want to change the offset when setting the time to the same value.\n  if (res.compare(plainDateTime) === 0) return dateTime;\n  let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone, disambiguation);\n  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);\n}\nexport { $735220c2d4774dd3$export$e16d8520af44a096 as add, $735220c2d4774dd3$export$c4e2ecac49351ef2 as constrain, $735220c2d4774dd3$export$3e2544e88a25bff8 as invertDuration, $735220c2d4774dd3$export$4e2d2ead65e5f7e3 as subtract, $735220c2d4774dd3$export$adaa4cf7ef1b65be as set, $735220c2d4774dd3$export$e5d5e1c1822b6e56 as setTime, $735220c2d4774dd3$export$7555de1e070510cb as constrainTime, $735220c2d4774dd3$export$7ed87b6bc2506470 as addTime, $735220c2d4774dd3$export$fe34d3a381cd7501 as subtractTime, $735220c2d4774dd3$export$d52ced6badfb9a4c as cycleDate, $735220c2d4774dd3$export$dd02b3e0007dfe28 as cycleTime, $735220c2d4774dd3$export$96b1d28349274637 as addZoned, $735220c2d4774dd3$export$6814caac34ca03c7 as subtractZoned, $735220c2d4774dd3$export$9a297d111fc86b79 as cycleZoned, $735220c2d4774dd3$export$31b5430eb18be4f8 as setZoned };","map":{"version":3,"names":["epochFromDate","$11d87f3f76e88657$export$bd4fb2bc8bb06fb","fromAbsolute","$11d87f3f76e88657$export$1b96692a1ba042ac","toAbsolute","$11d87f3f76e88657$export$5107c82f94518f5c","toCalendar","$11d87f3f76e88657$export$b4a036af3fc0b032","toCalendarDateTime","$11d87f3f76e88657$export$b21e0b124e224484","GregorianCalendar","$3b62074eb05584b2$export$80ee6245ec4f29ec","$735220c2d4774dd3$var$ONE_HOUR","$735220c2d4774dd3$export$e16d8520af44a096","date","duration","mutableDate","copy","days","$735220c2d4774dd3$var$addTimeFields","$735220c2d4774dd3$var$addYears","years","calendar","balanceYearMonth","month","months","$735220c2d4774dd3$var$balanceYearMonth","$735220c2d4774dd3$var$constrainMonthDay","day","weeks","$735220c2d4774dd3$var$balanceDay","balanceDate","year","maxYear","getYearsInEra","_mutableDate_calendar_isInverseEra","_mutableDate_calendar","isInverseEra","call","getMonthsInYear","getDaysInMonth","maxMonth","Math","max","min","_date_calendar_isInverseEra","_date_calendar","monthsInYear","$735220c2d4774dd3$export$c4e2ecac49351ef2","constrainDate","$735220c2d4774dd3$export$3e2544e88a25bff8","inverseDuration","key","$735220c2d4774dd3$export$4e2d2ead65e5f7e3","$735220c2d4774dd3$export$adaa4cf7ef1b65be","fields","era","$735220c2d4774dd3$export$e5d5e1c1822b6e56","value","mutableValue","hour","minute","second","millisecond","$735220c2d4774dd3$export$7555de1e070510cb","$735220c2d4774dd3$var$balanceTime","time","floor","$735220c2d4774dd3$var$nonNegativeMod","a","b","result","hours","minutes","seconds","milliseconds","$735220c2d4774dd3$export$7ed87b6bc2506470","res","$735220c2d4774dd3$export$fe34d3a381cd7501","$735220c2d4774dd3$export$d52ced6badfb9a4c","field","amount","options","mutable","eras","getEras","eraIndex","indexOf","Error","$735220c2d4774dd3$var$cycleValue","length","round","_mutable_calendar_isInverseEra","_mutable_calendar","Infinity","$735220c2d4774dd3$export$dd02b3e0007dfe28","hourCycle","isPM","sign","div","abs","ceil","$735220c2d4774dd3$export$96b1d28349274637","dateTime","ms","timeZone","offset","$735220c2d4774dd3$export$6814caac34ca03c7","$735220c2d4774dd3$export$9a297d111fc86b79","plainDateTime","minDate","minAbsolute","filter","maxDate","maxAbsolute","pop","remainder","$735220c2d4774dd3$export$31b5430eb18be4f8","disambiguation","compare","add","constrain","invertDuration","subtract","set","setTime","constrainTime","addTime","subtractTime","cycleDate","cycleTime","addZoned","subtractZoned","cycleZoned","setZoned"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@internationalized/date/dist/manipulation.mjs"],"sourcesContent":["import {epochFromDate as $11d87f3f76e88657$export$bd4fb2bc8bb06fb, fromAbsolute as $11d87f3f76e88657$export$1b96692a1ba042ac, toAbsolute as $11d87f3f76e88657$export$5107c82f94518f5c, toCalendar as $11d87f3f76e88657$export$b4a036af3fc0b032, toCalendarDateTime as $11d87f3f76e88657$export$b21e0b124e224484} from \"./conversion.mjs\";\nimport {GregorianCalendar as $3b62074eb05584b2$export$80ee6245ec4f29ec} from \"./GregorianCalendar.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nconst $735220c2d4774dd3$var$ONE_HOUR = 3600000;\nfunction $735220c2d4774dd3$export$e16d8520af44a096(date, duration) {\n    let mutableDate = date.copy();\n    let days = \"hour\" in mutableDate ? $735220c2d4774dd3$var$addTimeFields(mutableDate, duration) : 0;\n    $735220c2d4774dd3$var$addYears(mutableDate, duration.years || 0);\n    if (mutableDate.calendar.balanceYearMonth) mutableDate.calendar.balanceYearMonth(mutableDate, date);\n    mutableDate.month += duration.months || 0;\n    $735220c2d4774dd3$var$balanceYearMonth(mutableDate);\n    $735220c2d4774dd3$var$constrainMonthDay(mutableDate);\n    mutableDate.day += (duration.weeks || 0) * 7;\n    mutableDate.day += duration.days || 0;\n    mutableDate.day += days;\n    $735220c2d4774dd3$var$balanceDay(mutableDate);\n    if (mutableDate.calendar.balanceDate) mutableDate.calendar.balanceDate(mutableDate);\n    // Constrain in case adding ended up with a date outside the valid range for the calendar system.\n    // The behavior here is slightly different than when constraining in the `set` function in that\n    // we adjust smaller fields to their minimum/maximum values rather than constraining each field\n    // individually. This matches the general behavior of `add` vs `set` regarding how fields are balanced.\n    if (mutableDate.year < 1) {\n        mutableDate.year = 1;\n        mutableDate.month = 1;\n        mutableDate.day = 1;\n    }\n    let maxYear = mutableDate.calendar.getYearsInEra(mutableDate);\n    if (mutableDate.year > maxYear) {\n        var _mutableDate_calendar_isInverseEra, _mutableDate_calendar;\n        let isInverseEra = (_mutableDate_calendar_isInverseEra = (_mutableDate_calendar = mutableDate.calendar).isInverseEra) === null || _mutableDate_calendar_isInverseEra === void 0 ? void 0 : _mutableDate_calendar_isInverseEra.call(_mutableDate_calendar, mutableDate);\n        mutableDate.year = maxYear;\n        mutableDate.month = isInverseEra ? 1 : mutableDate.calendar.getMonthsInYear(mutableDate);\n        mutableDate.day = isInverseEra ? 1 : mutableDate.calendar.getDaysInMonth(mutableDate);\n    }\n    if (mutableDate.month < 1) {\n        mutableDate.month = 1;\n        mutableDate.day = 1;\n    }\n    let maxMonth = mutableDate.calendar.getMonthsInYear(mutableDate);\n    if (mutableDate.month > maxMonth) {\n        mutableDate.month = maxMonth;\n        mutableDate.day = mutableDate.calendar.getDaysInMonth(mutableDate);\n    }\n    mutableDate.day = Math.max(1, Math.min(mutableDate.calendar.getDaysInMonth(mutableDate), mutableDate.day));\n    return mutableDate;\n}\nfunction $735220c2d4774dd3$var$addYears(date, years) {\n    var _date_calendar_isInverseEra, _date_calendar;\n    if ((_date_calendar_isInverseEra = (_date_calendar = date.calendar).isInverseEra) === null || _date_calendar_isInverseEra === void 0 ? void 0 : _date_calendar_isInverseEra.call(_date_calendar, date)) years = -years;\n    date.year += years;\n}\nfunction $735220c2d4774dd3$var$balanceYearMonth(date) {\n    while(date.month < 1){\n        $735220c2d4774dd3$var$addYears(date, -1);\n        date.month += date.calendar.getMonthsInYear(date);\n    }\n    let monthsInYear = 0;\n    while(date.month > (monthsInYear = date.calendar.getMonthsInYear(date))){\n        date.month -= monthsInYear;\n        $735220c2d4774dd3$var$addYears(date, 1);\n    }\n}\nfunction $735220c2d4774dd3$var$balanceDay(date) {\n    while(date.day < 1){\n        date.month--;\n        $735220c2d4774dd3$var$balanceYearMonth(date);\n        date.day += date.calendar.getDaysInMonth(date);\n    }\n    while(date.day > date.calendar.getDaysInMonth(date)){\n        date.day -= date.calendar.getDaysInMonth(date);\n        date.month++;\n        $735220c2d4774dd3$var$balanceYearMonth(date);\n    }\n}\nfunction $735220c2d4774dd3$var$constrainMonthDay(date) {\n    date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));\n    date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));\n}\nfunction $735220c2d4774dd3$export$c4e2ecac49351ef2(date) {\n    if (date.calendar.constrainDate) date.calendar.constrainDate(date);\n    date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));\n    $735220c2d4774dd3$var$constrainMonthDay(date);\n}\nfunction $735220c2d4774dd3$export$3e2544e88a25bff8(duration) {\n    let inverseDuration = {};\n    for(let key in duration)if (typeof duration[key] === \"number\") inverseDuration[key] = -duration[key];\n    return inverseDuration;\n}\nfunction $735220c2d4774dd3$export$4e2d2ead65e5f7e3(date, duration) {\n    return $735220c2d4774dd3$export$e16d8520af44a096(date, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\nfunction $735220c2d4774dd3$export$adaa4cf7ef1b65be(date, fields) {\n    let mutableDate = date.copy();\n    if (fields.era != null) mutableDate.era = fields.era;\n    if (fields.year != null) mutableDate.year = fields.year;\n    if (fields.month != null) mutableDate.month = fields.month;\n    if (fields.day != null) mutableDate.day = fields.day;\n    $735220c2d4774dd3$export$c4e2ecac49351ef2(mutableDate);\n    return mutableDate;\n}\nfunction $735220c2d4774dd3$export$e5d5e1c1822b6e56(value, fields) {\n    let mutableValue = value.copy();\n    if (fields.hour != null) mutableValue.hour = fields.hour;\n    if (fields.minute != null) mutableValue.minute = fields.minute;\n    if (fields.second != null) mutableValue.second = fields.second;\n    if (fields.millisecond != null) mutableValue.millisecond = fields.millisecond;\n    $735220c2d4774dd3$export$7555de1e070510cb(mutableValue);\n    return mutableValue;\n}\nfunction $735220c2d4774dd3$var$balanceTime(time) {\n    time.second += Math.floor(time.millisecond / 1000);\n    time.millisecond = $735220c2d4774dd3$var$nonNegativeMod(time.millisecond, 1000);\n    time.minute += Math.floor(time.second / 60);\n    time.second = $735220c2d4774dd3$var$nonNegativeMod(time.second, 60);\n    time.hour += Math.floor(time.minute / 60);\n    time.minute = $735220c2d4774dd3$var$nonNegativeMod(time.minute, 60);\n    let days = Math.floor(time.hour / 24);\n    time.hour = $735220c2d4774dd3$var$nonNegativeMod(time.hour, 24);\n    return days;\n}\nfunction $735220c2d4774dd3$export$7555de1e070510cb(time) {\n    time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));\n    time.second = Math.max(0, Math.min(time.second, 59));\n    time.minute = Math.max(0, Math.min(time.minute, 59));\n    time.hour = Math.max(0, Math.min(time.hour, 23));\n}\nfunction $735220c2d4774dd3$var$nonNegativeMod(a, b) {\n    let result = a % b;\n    if (result < 0) result += b;\n    return result;\n}\nfunction $735220c2d4774dd3$var$addTimeFields(time, duration) {\n    time.hour += duration.hours || 0;\n    time.minute += duration.minutes || 0;\n    time.second += duration.seconds || 0;\n    time.millisecond += duration.milliseconds || 0;\n    return $735220c2d4774dd3$var$balanceTime(time);\n}\nfunction $735220c2d4774dd3$export$7ed87b6bc2506470(time, duration) {\n    let res = time.copy();\n    $735220c2d4774dd3$var$addTimeFields(res, duration);\n    return res;\n}\nfunction $735220c2d4774dd3$export$fe34d3a381cd7501(time, duration) {\n    return $735220c2d4774dd3$export$7ed87b6bc2506470(time, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\nfunction $735220c2d4774dd3$export$d52ced6badfb9a4c(value, field, amount, options) {\n    let mutable = value.copy();\n    switch(field){\n        case \"era\":\n            {\n                let eras = value.calendar.getEras();\n                let eraIndex = eras.indexOf(value.era);\n                if (eraIndex < 0) throw new Error(\"Invalid era: \" + value.era);\n                eraIndex = $735220c2d4774dd3$var$cycleValue(eraIndex, amount, 0, eras.length - 1, options === null || options === void 0 ? void 0 : options.round);\n                mutable.era = eras[eraIndex];\n                // Constrain the year and other fields within the era, so the era doesn't change when we balance below.\n                $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);\n                break;\n            }\n        case \"year\":\n            var _mutable_calendar_isInverseEra, _mutable_calendar;\n            if ((_mutable_calendar_isInverseEra = (_mutable_calendar = mutable.calendar).isInverseEra) === null || _mutable_calendar_isInverseEra === void 0 ? void 0 : _mutable_calendar_isInverseEra.call(_mutable_calendar, mutable)) amount = -amount;\n            // The year field should not cycle within the era as that can cause weird behavior affecting other fields.\n            // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back\n            // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.\n            mutable.year = $735220c2d4774dd3$var$cycleValue(value.year, amount, -Infinity, 9999, options === null || options === void 0 ? void 0 : options.round);\n            if (mutable.year === -Infinity) mutable.year = 1;\n            if (mutable.calendar.balanceYearMonth) mutable.calendar.balanceYearMonth(mutable, value);\n            break;\n        case \"month\":\n            mutable.month = $735220c2d4774dd3$var$cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options === null || options === void 0 ? void 0 : options.round);\n            break;\n        case \"day\":\n            mutable.day = $735220c2d4774dd3$var$cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options === null || options === void 0 ? void 0 : options.round);\n            break;\n        default:\n            throw new Error(\"Unsupported field \" + field);\n    }\n    if (value.calendar.balanceDate) value.calendar.balanceDate(mutable);\n    $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);\n    return mutable;\n}\nfunction $735220c2d4774dd3$export$dd02b3e0007dfe28(value, field, amount, options) {\n    let mutable = value.copy();\n    switch(field){\n        case \"hour\":\n            {\n                let hours = value.hour;\n                let min = 0;\n                let max = 23;\n                if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {\n                    let isPM = hours >= 12;\n                    min = isPM ? 12 : 0;\n                    max = isPM ? 23 : 11;\n                }\n                mutable.hour = $735220c2d4774dd3$var$cycleValue(hours, amount, min, max, options === null || options === void 0 ? void 0 : options.round);\n                break;\n            }\n        case \"minute\":\n            mutable.minute = $735220c2d4774dd3$var$cycleValue(value.minute, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);\n            break;\n        case \"second\":\n            mutable.second = $735220c2d4774dd3$var$cycleValue(value.second, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);\n            break;\n        case \"millisecond\":\n            mutable.millisecond = $735220c2d4774dd3$var$cycleValue(value.millisecond, amount, 0, 999, options === null || options === void 0 ? void 0 : options.round);\n            break;\n        default:\n            throw new Error(\"Unsupported field \" + field);\n    }\n    return mutable;\n}\nfunction $735220c2d4774dd3$var$cycleValue(value, amount, min, max, round = false) {\n    if (round) {\n        value += Math.sign(amount);\n        if (value < min) value = max;\n        let div = Math.abs(amount);\n        if (amount > 0) value = Math.ceil(value / div) * div;\n        else value = Math.floor(value / div) * div;\n        if (value > max) value = min;\n    } else {\n        value += amount;\n        if (value < min) value = max - (min - value - 1);\n        else if (value > max) value = min + (value - max - 1);\n    }\n    return value;\n}\nfunction $735220c2d4774dd3$export$96b1d28349274637(dateTime, duration) {\n    let ms;\n    if (duration.years != null && duration.years !== 0 || duration.months != null && duration.months !== 0 || duration.weeks != null && duration.weeks !== 0 || duration.days != null && duration.days !== 0) {\n        let res = $735220c2d4774dd3$export$e16d8520af44a096((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), {\n            years: duration.years,\n            months: duration.months,\n            weeks: duration.weeks,\n            days: duration.days\n        });\n        // Changing the date may change the timezone offset, so we need to recompute\n        // using the 'compatible' disambiguation.\n        ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone);\n    } else // Otherwise, preserve the offset of the original date.\n    ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;\n    // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.\n    // For example, adding one hour during a DST transition may result in the hour field staying the same or\n    // skipping an hour. This results in the offset field changing value instead of the specified field.\n    ms += duration.milliseconds || 0;\n    ms += (duration.seconds || 0) * 1000;\n    ms += (duration.minutes || 0) * 60000;\n    ms += (duration.hours || 0) * 3600000;\n    let res = (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone);\n    return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(res, dateTime.calendar);\n}\nfunction $735220c2d4774dd3$export$6814caac34ca03c7(dateTime, duration) {\n    return $735220c2d4774dd3$export$96b1d28349274637(dateTime, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\nfunction $735220c2d4774dd3$export$9a297d111fc86b79(dateTime, field, amount, options) {\n    // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.\n    // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC\n    // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.\n    switch(field){\n        case \"hour\":\n            {\n                let min = 0;\n                let max = 23;\n                if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {\n                    let isPM = dateTime.hour >= 12;\n                    min = isPM ? 12 : 0;\n                    max = isPM ? 23 : 11;\n                }\n                // The minimum and maximum hour may be affected by daylight saving time.\n                // For example, it might jump forward at midnight, and skip 1am.\n                // Or it might end at midnight and repeat the 11pm hour. To handle this, we get\n                // the possible absolute times for the min and max, and find the maximum range\n                // that is within the current day.\n                let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);\n                let minDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {\n                    hour: min\n                }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());\n                let minAbsolute = [\n                    (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, \"earlier\"),\n                    (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, \"later\")\n                ].filter((ms)=>(0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone).day === minDate.day)[0];\n                let maxDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {\n                    hour: max\n                }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());\n                let maxAbsolute = [\n                    (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, \"earlier\"),\n                    (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, \"later\")\n                ].filter((ms)=>(0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone).day === maxDate.day).pop();\n                // Since hours may repeat, we need to operate on the absolute time in milliseconds.\n                // This is done in hours from the Unix epoch so that cycleValue works correctly,\n                // and then converted back to milliseconds.\n                let ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;\n                let hours = Math.floor(ms / $735220c2d4774dd3$var$ONE_HOUR);\n                let remainder = ms % $735220c2d4774dd3$var$ONE_HOUR;\n                ms = $735220c2d4774dd3$var$cycleValue(hours, amount, Math.floor(minAbsolute / $735220c2d4774dd3$var$ONE_HOUR), Math.floor(maxAbsolute / $735220c2d4774dd3$var$ONE_HOUR), options === null || options === void 0 ? void 0 : options.round) * $735220c2d4774dd3$var$ONE_HOUR + remainder;\n                // Now compute the new timezone offset, and convert the absolute time back to local time.\n                return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);\n            }\n        case \"minute\":\n        case \"second\":\n        case \"millisecond\":\n            // @ts-ignore\n            return $735220c2d4774dd3$export$dd02b3e0007dfe28(dateTime, field, amount, options);\n        case \"era\":\n        case \"year\":\n        case \"month\":\n        case \"day\":\n            {\n                let res = $735220c2d4774dd3$export$d52ced6badfb9a4c((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), field, amount, options);\n                let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone);\n                return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);\n            }\n        default:\n            throw new Error(\"Unsupported field \" + field);\n    }\n}\nfunction $735220c2d4774dd3$export$31b5430eb18be4f8(dateTime, fields, disambiguation) {\n    // Set the date/time fields, and recompute the UTC offset to account for DST changes.\n    // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.\n    let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);\n    let res = $735220c2d4774dd3$export$e5d5e1c1822b6e56($735220c2d4774dd3$export$adaa4cf7ef1b65be(plainDateTime, fields), fields);\n    // If the resulting plain date time values are equal, return the original time.\n    // We don't want to change the offset when setting the time to the same value.\n    if (res.compare(plainDateTime) === 0) return dateTime;\n    let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone, disambiguation);\n    return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);\n}\n\n\nexport {$735220c2d4774dd3$export$e16d8520af44a096 as add, $735220c2d4774dd3$export$c4e2ecac49351ef2 as constrain, $735220c2d4774dd3$export$3e2544e88a25bff8 as invertDuration, $735220c2d4774dd3$export$4e2d2ead65e5f7e3 as subtract, $735220c2d4774dd3$export$adaa4cf7ef1b65be as set, $735220c2d4774dd3$export$e5d5e1c1822b6e56 as setTime, $735220c2d4774dd3$export$7555de1e070510cb as constrainTime, $735220c2d4774dd3$export$7ed87b6bc2506470 as addTime, $735220c2d4774dd3$export$fe34d3a381cd7501 as subtractTime, $735220c2d4774dd3$export$d52ced6badfb9a4c as cycleDate, $735220c2d4774dd3$export$dd02b3e0007dfe28 as cycleTime, $735220c2d4774dd3$export$96b1d28349274637 as addZoned, $735220c2d4774dd3$export$6814caac34ca03c7 as subtractZoned, $735220c2d4774dd3$export$9a297d111fc86b79 as cycleZoned, $735220c2d4774dd3$export$31b5430eb18be4f8 as setZoned};\n//# sourceMappingURL=manipulation.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}