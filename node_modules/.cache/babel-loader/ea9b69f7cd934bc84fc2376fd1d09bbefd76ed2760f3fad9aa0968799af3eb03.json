{"ast":null,"code":"import { gridMap as $1af922eb41e03c8f$export$e6235c0d09b995d0 } from \"./utils.mjs\";\nimport { chain as $kA5if$chain } from \"@react-aria/utils\";\nimport { useSelectableItem as $kA5if$useSelectableItem } from \"@react-aria/selection\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  var _node_props, _node_props1;\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    actions: actions\n  } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);\n  let onRowAction = actions.onRowAction ? () => actions.onRowAction(node.key) : onAction;\n  let {\n    itemProps: itemProps,\n    ...states\n  } = (0, $kA5if$useSelectableItem)({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onRowAction || (node === null || node === void 0 ? void 0 : (_node_props = node.props) === null || _node_props === void 0 ? void 0 : _node_props.onAction) ? (0, $kA5if$chain)(node === null || node === void 0 ? void 0 : (_node_props1 = node.props) === null || _node_props1 === void 0 ? void 0 : _node_props1.onAction, onRowAction) : undefined,\n    isDisabled: state.collection.size === 0\n  });\n  let isSelected = state.selectionManager.isSelected(node.key);\n  let rowProps = {\n    role: \"row\",\n    \"aria-selected\": state.selectionManager.selectionMode !== \"none\" ? isSelected : undefined,\n    \"aria-disabled\": states.isDisabled || undefined,\n    ...itemProps\n  };\n  if (isVirtualized) rowProps[\"aria-rowindex\"] = node.index + 1; // aria-rowindex is 1 based\n  return {\n    rowProps: rowProps,\n    ...states\n  };\n}\nexport { $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow };","map":{"version":3,"names":["gridMap","$1af922eb41e03c8f$export$e6235c0d09b995d0","chain","$kA5if$chain","useSelectableItem","$kA5if$useSelectableItem","$4159a7a9cbb0cc18$export$96357d5a73f686fa","props","state","ref","_node_props","_node_props1","node","isVirtualized","shouldSelectOnPressUp","onAction","actions","get","onRowAction","key","itemProps","states","selectionManager","undefined","isDisabled","collection","size","isSelected","rowProps","role","selectionMode","index","useGridRow"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/grid/dist/useGridRow.mjs"],"sourcesContent":["import {gridMap as $1af922eb41e03c8f$export$e6235c0d09b995d0} from \"./utils.mjs\";\nimport {chain as $kA5if$chain} from \"@react-aria/utils\";\nimport {useSelectableItem as $kA5if$useSelectableItem} from \"@react-aria/selection\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n    var _node_props, _node_props1;\n    let { node: node, isVirtualized: isVirtualized, shouldSelectOnPressUp: shouldSelectOnPressUp, onAction: onAction } = props;\n    let { actions: actions } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);\n    let onRowAction = actions.onRowAction ? ()=>actions.onRowAction(node.key) : onAction;\n    let { itemProps: itemProps, ...states } = (0, $kA5if$useSelectableItem)({\n        selectionManager: state.selectionManager,\n        key: node.key,\n        ref: ref,\n        isVirtualized: isVirtualized,\n        shouldSelectOnPressUp: shouldSelectOnPressUp,\n        onAction: onRowAction || (node === null || node === void 0 ? void 0 : (_node_props = node.props) === null || _node_props === void 0 ? void 0 : _node_props.onAction) ? (0, $kA5if$chain)(node === null || node === void 0 ? void 0 : (_node_props1 = node.props) === null || _node_props1 === void 0 ? void 0 : _node_props1.onAction, onRowAction) : undefined,\n        isDisabled: state.collection.size === 0\n    });\n    let isSelected = state.selectionManager.isSelected(node.key);\n    let rowProps = {\n        role: \"row\",\n        \"aria-selected\": state.selectionManager.selectionMode !== \"none\" ? isSelected : undefined,\n        \"aria-disabled\": states.isDisabled || undefined,\n        ...itemProps\n    };\n    if (isVirtualized) rowProps[\"aria-rowindex\"] = node.index + 1; // aria-rowindex is 1 based\n    return {\n        rowProps: rowProps,\n        ...states\n    };\n}\n\n\nexport {$4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow};\n//# sourceMappingURL=useGridRow.mjs.map\n"],"mappings":"AAAA,SAAQA,OAAO,IAAIC,yCAAyC,QAAO,aAAa;AAChF,SAAQC,KAAK,IAAIC,YAAY,QAAO,mBAAmB;AACvD,SAAQC,iBAAiB,IAAIC,wBAAwB,QAAO,uBAAuB;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAClE,IAAIC,WAAW,EAAEC,YAAY;EAC7B,IAAI;IAAEC,IAAI,EAAEA,IAAI;IAAEC,aAAa,EAAEA,aAAa;IAAEC,qBAAqB,EAAEA,qBAAqB;IAAEC,QAAQ,EAAEA;EAAS,CAAC,GAAGR,KAAK;EAC1H,IAAI;IAAES,OAAO,EAAEA;EAAQ,CAAC,GAAG,CAAC,CAAC,EAAEf,yCAAyC,EAAEgB,GAAG,CAACT,KAAK,CAAC;EACpF,IAAIU,WAAW,GAAGF,OAAO,CAACE,WAAW,GAAG,MAAIF,OAAO,CAACE,WAAW,CAACN,IAAI,CAACO,GAAG,CAAC,GAAGJ,QAAQ;EACpF,IAAI;IAAEK,SAAS,EAAEA,SAAS;IAAE,GAAGC;EAAO,CAAC,GAAG,CAAC,CAAC,EAAEhB,wBAAwB,EAAE;IACpEiB,gBAAgB,EAAEd,KAAK,CAACc,gBAAgB;IACxCH,GAAG,EAAEP,IAAI,CAACO,GAAG;IACbV,GAAG,EAAEA,GAAG;IACRI,aAAa,EAAEA,aAAa;IAC5BC,qBAAqB,EAAEA,qBAAqB;IAC5CC,QAAQ,EAAEG,WAAW,KAAKN,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAACF,WAAW,GAAGE,IAAI,CAACL,KAAK,MAAM,IAAI,IAAIG,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACK,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAEZ,YAAY,EAAES,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAACD,YAAY,GAAGC,IAAI,CAACL,KAAK,MAAM,IAAI,IAAII,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,QAAQ,EAAEG,WAAW,CAAC,GAAGK,SAAS;IAC/VC,UAAU,EAAEhB,KAAK,CAACiB,UAAU,CAACC,IAAI,KAAK;EAC1C,CAAC,CAAC;EACF,IAAIC,UAAU,GAAGnB,KAAK,CAACc,gBAAgB,CAACK,UAAU,CAACf,IAAI,CAACO,GAAG,CAAC;EAC5D,IAAIS,QAAQ,GAAG;IACXC,IAAI,EAAE,KAAK;IACX,eAAe,EAAErB,KAAK,CAACc,gBAAgB,CAACQ,aAAa,KAAK,MAAM,GAAGH,UAAU,GAAGJ,SAAS;IACzF,eAAe,EAAEF,MAAM,CAACG,UAAU,IAAID,SAAS;IAC/C,GAAGH;EACP,CAAC;EACD,IAAIP,aAAa,EAAEe,QAAQ,CAAC,eAAe,CAAC,GAAGhB,IAAI,CAACmB,KAAK,GAAG,CAAC,CAAC,CAAC;EAC/D,OAAO;IACHH,QAAQ,EAAEA,QAAQ;IAClB,GAAGP;EACP,CAAC;AACL;AAGA,SAAQf,yCAAyC,IAAI0B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}