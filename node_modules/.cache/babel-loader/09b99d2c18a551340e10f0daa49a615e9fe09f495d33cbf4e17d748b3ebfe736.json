{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/Webs/Encuestas/Encuestas/encuestas/src/components/NotaFormulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EncuestaFormulario() {\n  _s();\n  const [titulo, setTitulo] = useState('');\n  const [dueno, setDueno] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevenir el comportamiento predeterminado del formulario\n\n    const url = `http://localhost:8000/encuestas/`; // Asegúrate de que esta es la URL correcta de tu API\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        // Método HTTP\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          titulo,\n          dueno: parseInt(dueno, 10)\n        }) // Cuerpo de la solicitud\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const result = await response.json(); // Suponiendo que la API responde con JSON\n      console.log('Encuesta creada:', result);\n      alert('Encuesta creada con éxito!');\n    } catch (error) {\n      console.error('Error al crear la encuesta:', error);\n      alert('Error al crear la encuesta');\n    }\n    setTitulo(''); // Limpiar el título del formulario\n    setDueno(''); // Limpiar el dueño del formulario\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: titulo,\n      onChange: e => setTitulo(e.target.value),\n      placeholder: \"T\\xEDtulo de la encuesta\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\" // Cambiado de number a text para adaptarse a los cambios\n      ,\n      value: dueno,\n      onChange: e => setDueno(e.target.value),\n      placeholder: \"ID del due\\xF1o de la encuesta\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Crear Encuesta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(EncuestaFormulario, \"jlKdIL76t7pxlb+0HDuDTt7knBo=\");\n_c = EncuestaFormulario;\nexport default EncuestaFormulario;\nvar _c;\n$RefreshReg$(_c, \"EncuestaFormulario\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EncuestaFormulario","_s","titulo","setTitulo","dueno","setDueno","handleSubmit","event","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","parseInt","ok","Error","status","result","json","console","log","alert","error","onSubmit","children","type","value","onChange","e","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daniel/Documents/Webs/Encuestas/Encuestas/encuestas/src/components/NotaFormulario.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction EncuestaFormulario() {\n    const [titulo, setTitulo] = useState('');\n    const [dueno, setDueno] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();  // Prevenir el comportamiento predeterminado del formulario\n\n        const url = `http://localhost:8000/encuestas/`; // Asegúrate de que esta es la URL correcta de tu API\n\n        try {\n            const response = await fetch(url, {\n                method: 'POST',  // Método HTTP\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ titulo, dueno: parseInt(dueno, 10) })  // Cuerpo de la solicitud\n            });\n\n            if (!response.ok) {\n                throw new Error(`Error: ${response.status}`);\n            }\n\n            const result = await response.json(); // Suponiendo que la API responde con JSON\n            console.log('Encuesta creada:', result);\n            alert('Encuesta creada con éxito!');\n        } catch (error) {\n            console.error('Error al crear la encuesta:', error);\n            alert('Error al crear la encuesta');\n        }\n\n        setTitulo('');  // Limpiar el título del formulario\n        setDueno('');   // Limpiar el dueño del formulario\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={titulo}\n                onChange={(e) => setTitulo(e.target.value)}\n                placeholder=\"Título de la encuesta\"\n                required\n            />\n            <input\n                type=\"text\" // Cambiado de number a text para adaptarse a los cambios\n                value={dueno}\n                onChange={(e) => setDueno(e.target.value)}\n                placeholder=\"ID del dueño de la encuesta\"\n                required\n            />\n            <button type=\"submit\">Crear Encuesta</button>\n        </form>\n    );\n}\n\nexport default EncuestaFormulario;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAE;;IAEzB,MAAMC,GAAG,GAAI,kCAAiC,CAAC,CAAC;;IAEhD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAC9BG,MAAM,EAAE,MAAM;QAAG;QACjBC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,MAAM;UAAEE,KAAK,EAAEa,QAAQ,CAACb,KAAK,EAAE,EAAE;QAAE,CAAC,CAAC,CAAE;MAClE,CAAC,CAAC;MAEF,IAAI,CAACM,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,UAAST,QAAQ,CAACU,MAAO,EAAC,CAAC;MAChD;MAEA,MAAMC,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC;MACtCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,MAAM,CAAC;MACvCI,KAAK,CAAC,4BAA4B,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDD,KAAK,CAAC,4BAA4B,CAAC;IACvC;IAEAtB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAE;IAChBE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAG;EACpB,CAAC;EAED,oBACIN,OAAA;IAAM4B,QAAQ,EAAErB,YAAa;IAAAsB,QAAA,gBACzB7B,OAAA;MACI8B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE5B,MAAO;MACd6B,QAAQ,EAAGC,CAAC,IAAK7B,SAAS,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC,0BAAuB;MACnCC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFxC,OAAA;MACI8B,IAAI,EAAC,MAAM,CAAC;MAAA;MACZC,KAAK,EAAE1B,KAAM;MACb2B,QAAQ,EAAGC,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC,gCAA6B;MACzCC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFxC,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEf;AAACtC,EAAA,CArDQD,kBAAkB;AAAAwC,EAAA,GAAlBxC,kBAAkB;AAuD3B,eAAeA,kBAAkB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}