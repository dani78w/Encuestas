{"ast":null,"code":"import { useFormValidationState as $3Of4A$useFormValidationState, mergeValidation as $3Of4A$mergeValidation } from \"@react-stately/form\";\nimport { useControlledState as $3Of4A$useControlledState } from \"@react-stately/utils\";\nimport { useRef as $3Of4A$useRef } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $587d3ad58be6d31f$export$daff6da51032a415(props = {}) {\n  let [selectedValues, setValue] = (0, $3Of4A$useControlledState)(props.value, props.defaultValue || [], props.onChange);\n  let isRequired = !!props.isRequired && selectedValues.length === 0;\n  let invalidValues = (0, $3Of4A$useRef)(new Map());\n  let validation = (0, $3Of4A$useFormValidationState)({\n    ...props,\n    value: selectedValues\n  });\n  let isInvalid = validation.displayValidation.isInvalid;\n  var _props_validationState;\n  const state = {\n    ...validation,\n    value: selectedValues,\n    setValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      setValue(value);\n    },\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isSelected(value) {\n      return selectedValues.includes(value);\n    },\n    addValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (!selectedValues.includes(value)) setValue(selectedValues.concat(value));\n    },\n    removeValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (selectedValues.includes(value)) setValue(selectedValues.filter(existingValue => existingValue !== value));\n    },\n    toggleValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (selectedValues.includes(value)) setValue(selectedValues.filter(existingValue => existingValue !== value));else setValue(selectedValues.concat(value));\n    },\n    setInvalid(value, v) {\n      let s = new Map(invalidValues.current);\n      if (v.isInvalid) s.set(value, v);else s.delete(value);\n      invalidValues.current = s;\n      validation.updateValidation((0, $3Of4A$mergeValidation)(...s.values()));\n    },\n    validationState: (_props_validationState = props.validationState) !== null && _props_validationState !== void 0 ? _props_validationState : isInvalid ? \"invalid\" : null,\n    isInvalid: isInvalid,\n    isRequired: isRequired\n  };\n  return state;\n}\nexport { $587d3ad58be6d31f$export$daff6da51032a415 as useCheckboxGroupState };","map":{"version":3,"names":["useFormValidationState","$3Of4A$useFormValidationState","mergeValidation","$3Of4A$mergeValidation","useControlledState","$3Of4A$useControlledState","useRef","$3Of4A$useRef","$587d3ad58be6d31f$export$daff6da51032a415","props","selectedValues","setValue","value","defaultValue","onChange","isRequired","length","invalidValues","Map","validation","isInvalid","displayValidation","_props_validationState","state","isReadOnly","isDisabled","isSelected","includes","addValue","concat","removeValue","filter","existingValue","toggleValue","setInvalid","v","s","current","set","delete","updateValidation","values","validationState","useCheckboxGroupState"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-stately/checkbox/dist/useCheckboxGroupState.mjs"],"sourcesContent":["import {useFormValidationState as $3Of4A$useFormValidationState, mergeValidation as $3Of4A$mergeValidation} from \"@react-stately/form\";\nimport {useControlledState as $3Of4A$useControlledState} from \"@react-stately/utils\";\nimport {useRef as $3Of4A$useRef} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nfunction $587d3ad58be6d31f$export$daff6da51032a415(props = {}) {\n    let [selectedValues, setValue] = (0, $3Of4A$useControlledState)(props.value, props.defaultValue || [], props.onChange);\n    let isRequired = !!props.isRequired && selectedValues.length === 0;\n    let invalidValues = (0, $3Of4A$useRef)(new Map());\n    let validation = (0, $3Of4A$useFormValidationState)({\n        ...props,\n        value: selectedValues\n    });\n    let isInvalid = validation.displayValidation.isInvalid;\n    var _props_validationState;\n    const state = {\n        ...validation,\n        value: selectedValues,\n        setValue (value) {\n            if (props.isReadOnly || props.isDisabled) return;\n            setValue(value);\n        },\n        isDisabled: props.isDisabled || false,\n        isReadOnly: props.isReadOnly || false,\n        isSelected (value) {\n            return selectedValues.includes(value);\n        },\n        addValue (value) {\n            if (props.isReadOnly || props.isDisabled) return;\n            if (!selectedValues.includes(value)) setValue(selectedValues.concat(value));\n        },\n        removeValue (value) {\n            if (props.isReadOnly || props.isDisabled) return;\n            if (selectedValues.includes(value)) setValue(selectedValues.filter((existingValue)=>existingValue !== value));\n        },\n        toggleValue (value) {\n            if (props.isReadOnly || props.isDisabled) return;\n            if (selectedValues.includes(value)) setValue(selectedValues.filter((existingValue)=>existingValue !== value));\n            else setValue(selectedValues.concat(value));\n        },\n        setInvalid (value, v) {\n            let s = new Map(invalidValues.current);\n            if (v.isInvalid) s.set(value, v);\n            else s.delete(value);\n            invalidValues.current = s;\n            validation.updateValidation((0, $3Of4A$mergeValidation)(...s.values()));\n        },\n        validationState: (_props_validationState = props.validationState) !== null && _props_validationState !== void 0 ? _props_validationState : isInvalid ? \"invalid\" : null,\n        isInvalid: isInvalid,\n        isRequired: isRequired\n    };\n    return state;\n}\n\n\nexport {$587d3ad58be6d31f$export$daff6da51032a415 as useCheckboxGroupState};\n//# sourceMappingURL=useCheckboxGroupState.mjs.map\n"],"mappings":"AAAA,SAAQA,sBAAsB,IAAIC,6BAA6B,EAAEC,eAAe,IAAIC,sBAAsB,QAAO,qBAAqB;AACtI,SAAQC,kBAAkB,IAAIC,yBAAyB,QAAO,sBAAsB;AACpF,SAAQC,MAAM,IAAIC,aAAa,QAAO,OAAO;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,yCAAyCA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAE;EAC3D,IAAI,CAACC,cAAc,EAAEC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAEN,yBAAyB,EAAEI,KAAK,CAACG,KAAK,EAAEH,KAAK,CAACI,YAAY,IAAI,EAAE,EAAEJ,KAAK,CAACK,QAAQ,CAAC;EACtH,IAAIC,UAAU,GAAG,CAAC,CAACN,KAAK,CAACM,UAAU,IAAIL,cAAc,CAACM,MAAM,KAAK,CAAC;EAClE,IAAIC,aAAa,GAAG,CAAC,CAAC,EAAEV,aAAa,EAAE,IAAIW,GAAG,CAAC,CAAC,CAAC;EACjD,IAAIC,UAAU,GAAG,CAAC,CAAC,EAAElB,6BAA6B,EAAE;IAChD,GAAGQ,KAAK;IACRG,KAAK,EAAEF;EACX,CAAC,CAAC;EACF,IAAIU,SAAS,GAAGD,UAAU,CAACE,iBAAiB,CAACD,SAAS;EACtD,IAAIE,sBAAsB;EAC1B,MAAMC,KAAK,GAAG;IACV,GAAGJ,UAAU;IACbP,KAAK,EAAEF,cAAc;IACrBC,QAAQA,CAAEC,KAAK,EAAE;MACb,IAAIH,KAAK,CAACe,UAAU,IAAIf,KAAK,CAACgB,UAAU,EAAE;MAC1Cd,QAAQ,CAACC,KAAK,CAAC;IACnB,CAAC;IACDa,UAAU,EAAEhB,KAAK,CAACgB,UAAU,IAAI,KAAK;IACrCD,UAAU,EAAEf,KAAK,CAACe,UAAU,IAAI,KAAK;IACrCE,UAAUA,CAAEd,KAAK,EAAE;MACf,OAAOF,cAAc,CAACiB,QAAQ,CAACf,KAAK,CAAC;IACzC,CAAC;IACDgB,QAAQA,CAAEhB,KAAK,EAAE;MACb,IAAIH,KAAK,CAACe,UAAU,IAAIf,KAAK,CAACgB,UAAU,EAAE;MAC1C,IAAI,CAACf,cAAc,CAACiB,QAAQ,CAACf,KAAK,CAAC,EAAED,QAAQ,CAACD,cAAc,CAACmB,MAAM,CAACjB,KAAK,CAAC,CAAC;IAC/E,CAAC;IACDkB,WAAWA,CAAElB,KAAK,EAAE;MAChB,IAAIH,KAAK,CAACe,UAAU,IAAIf,KAAK,CAACgB,UAAU,EAAE;MAC1C,IAAIf,cAAc,CAACiB,QAAQ,CAACf,KAAK,CAAC,EAAED,QAAQ,CAACD,cAAc,CAACqB,MAAM,CAAEC,aAAa,IAAGA,aAAa,KAAKpB,KAAK,CAAC,CAAC;IACjH,CAAC;IACDqB,WAAWA,CAAErB,KAAK,EAAE;MAChB,IAAIH,KAAK,CAACe,UAAU,IAAIf,KAAK,CAACgB,UAAU,EAAE;MAC1C,IAAIf,cAAc,CAACiB,QAAQ,CAACf,KAAK,CAAC,EAAED,QAAQ,CAACD,cAAc,CAACqB,MAAM,CAAEC,aAAa,IAAGA,aAAa,KAAKpB,KAAK,CAAC,CAAC,CAAC,KACzGD,QAAQ,CAACD,cAAc,CAACmB,MAAM,CAACjB,KAAK,CAAC,CAAC;IAC/C,CAAC;IACDsB,UAAUA,CAAEtB,KAAK,EAAEuB,CAAC,EAAE;MAClB,IAAIC,CAAC,GAAG,IAAIlB,GAAG,CAACD,aAAa,CAACoB,OAAO,CAAC;MACtC,IAAIF,CAAC,CAACf,SAAS,EAAEgB,CAAC,CAACE,GAAG,CAAC1B,KAAK,EAAEuB,CAAC,CAAC,CAAC,KAC5BC,CAAC,CAACG,MAAM,CAAC3B,KAAK,CAAC;MACpBK,aAAa,CAACoB,OAAO,GAAGD,CAAC;MACzBjB,UAAU,CAACqB,gBAAgB,CAAC,CAAC,CAAC,EAAErC,sBAAsB,EAAE,GAAGiC,CAAC,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IACDC,eAAe,EAAE,CAACpB,sBAAsB,GAAGb,KAAK,CAACiC,eAAe,MAAM,IAAI,IAAIpB,sBAAsB,KAAK,KAAK,CAAC,GAAGA,sBAAsB,GAAGF,SAAS,GAAG,SAAS,GAAG,IAAI;IACvKA,SAAS,EAAEA,SAAS;IACpBL,UAAU,EAAEA;EAChB,CAAC;EACD,OAAOQ,KAAK;AAChB;AAGA,SAAQf,yCAAyC,IAAImC,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}