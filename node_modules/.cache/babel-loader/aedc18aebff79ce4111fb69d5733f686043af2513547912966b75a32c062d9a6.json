{"ast":null,"code":"import { tableNestedRows as $4ns2c$tableNestedRows } from \"@react-stately/flags\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let rowProps = {\n    role: \"row\"\n  };\n  if (isVirtualized && !((0, $4ns2c$tableNestedRows)() && \"expandedKeys\" in state)) rowProps[\"aria-rowindex\"] = node.index + 1; // aria-rowindex is 1 based\n  return {\n    rowProps: rowProps\n  };\n}\nexport { $f917ee10f4c32dab$export$1b95a7d2d517b841 as useTableHeaderRow };","map":{"version":3,"names":["tableNestedRows","$4ns2c$tableNestedRows","$f917ee10f4c32dab$export$1b95a7d2d517b841","props","state","ref","node","isVirtualized","rowProps","role","index","useTableHeaderRow"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/table/dist/useTableHeaderRow.mjs"],"sourcesContent":["import {tableNestedRows as $4ns2c$tableNestedRows} from \"@react-stately/flags\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nfunction $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {\n    let { node: node, isVirtualized: isVirtualized } = props;\n    let rowProps = {\n        role: \"row\"\n    };\n    if (isVirtualized && !((0, $4ns2c$tableNestedRows)() && \"expandedKeys\" in state)) rowProps[\"aria-rowindex\"] = node.index + 1; // aria-rowindex is 1 based\n    return {\n        rowProps: rowProps\n    };\n}\n\n\nexport {$f917ee10f4c32dab$export$1b95a7d2d517b841 as useTableHeaderRow};\n//# sourceMappingURL=useTableHeaderRow.mjs.map\n"],"mappings":"AAAA,SAAQA,eAAe,IAAIC,sBAAsB,QAAO,sBAAsB;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAClE,IAAI;IAAEC,IAAI,EAAEA,IAAI;IAAEC,aAAa,EAAEA;EAAc,CAAC,GAAGJ,KAAK;EACxD,IAAIK,QAAQ,GAAG;IACXC,IAAI,EAAE;EACV,CAAC;EACD,IAAIF,aAAa,IAAI,EAAE,CAAC,CAAC,EAAEN,sBAAsB,EAAE,CAAC,IAAI,cAAc,IAAIG,KAAK,CAAC,EAAEI,QAAQ,CAAC,eAAe,CAAC,GAAGF,IAAI,CAACI,KAAK,GAAG,CAAC,CAAC,CAAC;EAC9H,OAAO;IACHF,QAAQ,EAAEA;EACd,CAAC;AACL;AAGA,SAAQN,yCAAyC,IAAIS,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}