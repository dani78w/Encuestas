{"ast":null,"code":"import $jR5iF$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { useLocale as $jR5iF$useLocale, useLocalizedStringDictionary as $jR5iF$useLocalizedStringDictionary } from \"@react-aria/i18n\";\nimport { useMemo as $jR5iF$useMemo } from \"react\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // @ts-ignore\n\nfunction $3aeceb3a64eb8358$export$d42c60378c8168f8() {\n  let {\n    locale: locale\n  } = (0, $jR5iF$useLocale)();\n  let dictionary = (0, $jR5iF$useLocalizedStringDictionary)((0, $parcel$interopDefault($jR5iF$intlStringsmodulejs)), \"@react-aria/datepicker\");\n  return (0, $jR5iF$useMemo)(() => {\n    // Try to use Intl.DisplayNames if possible. It may be supported in browsers, but not support the dateTimeField\n    // type as that was only added in v2. https://github.com/tc39/intl-displaynames-v2\n    try {\n      // @ts-ignore\n      return new Intl.DisplayNames(locale, {\n        type: \"dateTimeField\"\n      });\n    } catch (err) {\n      return new $3aeceb3a64eb8358$var$DisplayNamesPolyfill(locale, dictionary);\n    }\n  }, [locale, dictionary]);\n}\nclass $3aeceb3a64eb8358$var$DisplayNamesPolyfill {\n  of(field) {\n    return this.dictionary.getStringForLocale(field, this.locale);\n  }\n  constructor(locale, dictionary) {\n    this.locale = locale;\n    this.dictionary = dictionary;\n  }\n}\nexport { $3aeceb3a64eb8358$export$d42c60378c8168f8 as useDisplayNames };","map":{"version":3,"names":["$jR5iF$intlStringsmodulejs","useLocale","$jR5iF$useLocale","useLocalizedStringDictionary","$jR5iF$useLocalizedStringDictionary","useMemo","$jR5iF$useMemo","$parcel$interopDefault","a","__esModule","default","$3aeceb3a64eb8358$export$d42c60378c8168f8","locale","dictionary","Intl","DisplayNames","type","err","$3aeceb3a64eb8358$var$DisplayNamesPolyfill","of","field","getStringForLocale","constructor","useDisplayNames"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/datepicker/dist/useDisplayNames.mjs"],"sourcesContent":["import $jR5iF$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport {useLocale as $jR5iF$useLocale, useLocalizedStringDictionary as $jR5iF$useLocalizedStringDictionary} from \"@react-aria/i18n\";\nimport {useMemo as $jR5iF$useMemo} from \"react\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // @ts-ignore\n\n\n\nfunction $3aeceb3a64eb8358$export$d42c60378c8168f8() {\n    let { locale: locale } = (0, $jR5iF$useLocale)();\n    let dictionary = (0, $jR5iF$useLocalizedStringDictionary)((0, ($parcel$interopDefault($jR5iF$intlStringsmodulejs))), \"@react-aria/datepicker\");\n    return (0, $jR5iF$useMemo)(()=>{\n        // Try to use Intl.DisplayNames if possible. It may be supported in browsers, but not support the dateTimeField\n        // type as that was only added in v2. https://github.com/tc39/intl-displaynames-v2\n        try {\n            // @ts-ignore\n            return new Intl.DisplayNames(locale, {\n                type: \"dateTimeField\"\n            });\n        } catch (err) {\n            return new $3aeceb3a64eb8358$var$DisplayNamesPolyfill(locale, dictionary);\n        }\n    }, [\n        locale,\n        dictionary\n    ]);\n}\nclass $3aeceb3a64eb8358$var$DisplayNamesPolyfill {\n    of(field) {\n        return this.dictionary.getStringForLocale(field, this.locale);\n    }\n    constructor(locale, dictionary){\n        this.locale = locale;\n        this.dictionary = dictionary;\n    }\n}\n\n\nexport {$3aeceb3a64eb8358$export$d42c60378c8168f8 as useDisplayNames};\n//# sourceMappingURL=useDisplayNames.mjs.map\n"],"mappings":"AAAA,OAAOA,0BAA0B,MAAM,mBAAmB;AAC1D,SAAQC,SAAS,IAAIC,gBAAgB,EAAEC,4BAA4B,IAAIC,mCAAmC,QAAO,kBAAkB;AACnI,SAAQC,OAAO,IAAIC,cAAc,QAAO,OAAO;AAG/C,SAASC,sBAAsBA,CAACC,CAAC,EAAE;EACjC,OAAOA,CAAC,IAAIA,CAAC,CAACC,UAAU,GAAGD,CAAC,CAACE,OAAO,GAAGF,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAVA,CAUI;;AAIJ,SAASG,yCAAyCA,CAAA,EAAG;EACjD,IAAI;IAAEC,MAAM,EAAEA;EAAO,CAAC,GAAG,CAAC,CAAC,EAAEV,gBAAgB,EAAE,CAAC;EAChD,IAAIW,UAAU,GAAG,CAAC,CAAC,EAAET,mCAAmC,GAAG,CAAC,EAAGG,sBAAsB,CAACP,0BAA0B,CAAE,GAAG,wBAAwB,CAAC;EAC9I,OAAO,CAAC,CAAC,EAAEM,cAAc,EAAE,MAAI;IAC3B;IACA;IACA,IAAI;MACA;MACA,OAAO,IAAIQ,IAAI,CAACC,YAAY,CAACH,MAAM,EAAE;QACjCI,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,OAAO,IAAIC,0CAA0C,CAACN,MAAM,EAAEC,UAAU,CAAC;IAC7E;EACJ,CAAC,EAAE,CACCD,MAAM,EACNC,UAAU,CACb,CAAC;AACN;AACA,MAAMK,0CAA0C,CAAC;EAC7CC,EAAEA,CAACC,KAAK,EAAE;IACN,OAAO,IAAI,CAACP,UAAU,CAACQ,kBAAkB,CAACD,KAAK,EAAE,IAAI,CAACR,MAAM,CAAC;EACjE;EACAU,WAAWA,CAACV,MAAM,EAAEC,UAAU,EAAC;IAC3B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAChC;AACJ;AAGA,SAAQF,yCAAyC,IAAIY,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}