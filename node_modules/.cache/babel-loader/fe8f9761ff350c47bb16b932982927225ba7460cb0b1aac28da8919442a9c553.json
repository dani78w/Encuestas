{"ast":null,"code":"import { useEffect as $ig234$useEffect } from \"react\";\nimport { filterDOMProps as $ig234$filterDOMProps, useFormReset as $ig234$useFormReset, getOwnerWindow as $ig234$getOwnerWindow, mergeProps as $ig234$mergeProps } from \"@react-aria/utils\";\nimport { useControlledState as $ig234$useControlledState } from \"@react-stately/utils\";\nimport { useField as $ig234$useField } from \"@react-aria/label\";\nimport { useFocusable as $ig234$useFocusable } from \"@react-aria/focus\";\nimport { useFormValidation as $ig234$useFormValidation } from \"@react-aria/form\";\nimport { useFormValidationState as $ig234$useFormValidationState } from \"@react-stately/form\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $2d73ec29415bd339$export$712718f7aec83d5(props, ref) {\n  let {\n    inputElementType = \"input\",\n    isDisabled = false,\n    isRequired = false,\n    isReadOnly = false,\n    type = \"text\",\n    validationBehavior = \"aria\"\n  } = props;\n  let [value, setValue] = (0, $ig234$useControlledState)(props.value, props.defaultValue || \"\", props.onChange);\n  let {\n    focusableProps: focusableProps\n  } = (0, $ig234$useFocusable)(props, ref);\n  let validationState = (0, $ig234$useFormValidationState)({\n    ...props,\n    value: value\n  });\n  let {\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = validationState.displayValidation;\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $ig234$useField)({\n    ...props,\n    isInvalid: isInvalid,\n    errorMessage: props.errorMessage || validationErrors\n  });\n  let domProps = (0, $ig234$filterDOMProps)(props, {\n    labelable: true\n  });\n  const inputOnlyProps = {\n    type: type,\n    pattern: props.pattern\n  };\n  (0, $ig234$useFormReset)(ref, value, setValue);\n  (0, $ig234$useFormValidation)(props, validationState, ref);\n  (0, $ig234$useEffect)(() => {\n    // This works around a React/Chrome bug that prevents textarea elements from validating when controlled.\n    // We prevent React from updating defaultValue (i.e. children) of textarea when `value` changes,\n    // which causes Chrome to skip validation. Only updating `value` is ok in our case since our\n    // textareas are always controlled. React is planning on removing this synchronization in a\n    // future major version.\n    // https://github.com/facebook/react/issues/19474\n    // https://github.com/facebook/react/issues/11896\n    if (ref.current instanceof (0, $ig234$getOwnerWindow)(ref.current).HTMLTextAreaElement) {\n      let input = ref.current;\n      Object.defineProperty(input, \"defaultValue\", {\n        get: () => input.value,\n        set: () => {},\n        configurable: true\n      });\n    }\n  }, [ref]);\n  return {\n    labelProps: labelProps,\n    inputProps: (0, $ig234$mergeProps)(domProps, inputElementType === \"input\" && inputOnlyProps, {\n      disabled: isDisabled,\n      readOnly: isReadOnly,\n      required: isRequired && validationBehavior === \"native\",\n      \"aria-required\": isRequired && validationBehavior === \"aria\" || undefined,\n      \"aria-invalid\": isInvalid || undefined,\n      \"aria-errormessage\": props[\"aria-errormessage\"],\n      \"aria-activedescendant\": props[\"aria-activedescendant\"],\n      \"aria-autocomplete\": props[\"aria-autocomplete\"],\n      \"aria-haspopup\": props[\"aria-haspopup\"],\n      value: value,\n      onChange: e => setValue(e.target.value),\n      autoComplete: props.autoComplete,\n      autoCapitalize: props.autoCapitalize,\n      maxLength: props.maxLength,\n      minLength: props.minLength,\n      name: props.name,\n      placeholder: props.placeholder,\n      inputMode: props.inputMode,\n      // Clipboard events\n      onCopy: props.onCopy,\n      onCut: props.onCut,\n      onPaste: props.onPaste,\n      // Composition events\n      onCompositionEnd: props.onCompositionEnd,\n      onCompositionStart: props.onCompositionStart,\n      onCompositionUpdate: props.onCompositionUpdate,\n      // Selection events\n      onSelect: props.onSelect,\n      // Input events\n      onBeforeInput: props.onBeforeInput,\n      onInput: props.onInput,\n      ...focusableProps,\n      ...fieldProps\n    }),\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  };\n}\nexport { $2d73ec29415bd339$export$712718f7aec83d5 as useTextField };","map":{"version":3,"names":["useEffect","$ig234$useEffect","filterDOMProps","$ig234$filterDOMProps","useFormReset","$ig234$useFormReset","getOwnerWindow","$ig234$getOwnerWindow","mergeProps","$ig234$mergeProps","useControlledState","$ig234$useControlledState","useField","$ig234$useField","useFocusable","$ig234$useFocusable","useFormValidation","$ig234$useFormValidation","useFormValidationState","$ig234$useFormValidationState","$2d73ec29415bd339$export$712718f7aec83d5","props","ref","inputElementType","isDisabled","isRequired","isReadOnly","type","validationBehavior","value","setValue","defaultValue","onChange","focusableProps","validationState","isInvalid","validationErrors","validationDetails","displayValidation","labelProps","fieldProps","descriptionProps","errorMessageProps","errorMessage","domProps","labelable","inputOnlyProps","pattern","current","HTMLTextAreaElement","input","Object","defineProperty","get","set","configurable","inputProps","disabled","readOnly","required","undefined","e","target","autoComplete","autoCapitalize","maxLength","minLength","name","placeholder","inputMode","onCopy","onCut","onPaste","onCompositionEnd","onCompositionStart","onCompositionUpdate","onSelect","onBeforeInput","onInput","useTextField"],"sources":["/Users/daniel/Documents/Webs/Encuestas/rama-front/Encuestas/node_modules/@react-aria/textfield/dist/useTextField.mjs"],"sourcesContent":["import {useEffect as $ig234$useEffect} from \"react\";\nimport {filterDOMProps as $ig234$filterDOMProps, useFormReset as $ig234$useFormReset, getOwnerWindow as $ig234$getOwnerWindow, mergeProps as $ig234$mergeProps} from \"@react-aria/utils\";\nimport {useControlledState as $ig234$useControlledState} from \"@react-stately/utils\";\nimport {useField as $ig234$useField} from \"@react-aria/label\";\nimport {useFocusable as $ig234$useFocusable} from \"@react-aria/focus\";\nimport {useFormValidation as $ig234$useFormValidation} from \"@react-aria/form\";\nimport {useFormValidationState as $ig234$useFormValidationState} from \"@react-stately/form\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\n\n\n\nfunction $2d73ec29415bd339$export$712718f7aec83d5(props, ref) {\n    let { inputElementType: inputElementType = \"input\", isDisabled: isDisabled = false, isRequired: isRequired = false, isReadOnly: isReadOnly = false, type: type = \"text\", validationBehavior: validationBehavior = \"aria\" } = props;\n    let [value, setValue] = (0, $ig234$useControlledState)(props.value, props.defaultValue || \"\", props.onChange);\n    let { focusableProps: focusableProps } = (0, $ig234$useFocusable)(props, ref);\n    let validationState = (0, $ig234$useFormValidationState)({\n        ...props,\n        value: value\n    });\n    let { isInvalid: isInvalid, validationErrors: validationErrors, validationDetails: validationDetails } = validationState.displayValidation;\n    let { labelProps: labelProps, fieldProps: fieldProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps } = (0, $ig234$useField)({\n        ...props,\n        isInvalid: isInvalid,\n        errorMessage: props.errorMessage || validationErrors\n    });\n    let domProps = (0, $ig234$filterDOMProps)(props, {\n        labelable: true\n    });\n    const inputOnlyProps = {\n        type: type,\n        pattern: props.pattern\n    };\n    (0, $ig234$useFormReset)(ref, value, setValue);\n    (0, $ig234$useFormValidation)(props, validationState, ref);\n    (0, $ig234$useEffect)(()=>{\n        // This works around a React/Chrome bug that prevents textarea elements from validating when controlled.\n        // We prevent React from updating defaultValue (i.e. children) of textarea when `value` changes,\n        // which causes Chrome to skip validation. Only updating `value` is ok in our case since our\n        // textareas are always controlled. React is planning on removing this synchronization in a\n        // future major version.\n        // https://github.com/facebook/react/issues/19474\n        // https://github.com/facebook/react/issues/11896\n        if (ref.current instanceof (0, $ig234$getOwnerWindow)(ref.current).HTMLTextAreaElement) {\n            let input = ref.current;\n            Object.defineProperty(input, \"defaultValue\", {\n                get: ()=>input.value,\n                set: ()=>{},\n                configurable: true\n            });\n        }\n    }, [\n        ref\n    ]);\n    return {\n        labelProps: labelProps,\n        inputProps: (0, $ig234$mergeProps)(domProps, inputElementType === \"input\" && inputOnlyProps, {\n            disabled: isDisabled,\n            readOnly: isReadOnly,\n            required: isRequired && validationBehavior === \"native\",\n            \"aria-required\": isRequired && validationBehavior === \"aria\" || undefined,\n            \"aria-invalid\": isInvalid || undefined,\n            \"aria-errormessage\": props[\"aria-errormessage\"],\n            \"aria-activedescendant\": props[\"aria-activedescendant\"],\n            \"aria-autocomplete\": props[\"aria-autocomplete\"],\n            \"aria-haspopup\": props[\"aria-haspopup\"],\n            value: value,\n            onChange: (e)=>setValue(e.target.value),\n            autoComplete: props.autoComplete,\n            autoCapitalize: props.autoCapitalize,\n            maxLength: props.maxLength,\n            minLength: props.minLength,\n            name: props.name,\n            placeholder: props.placeholder,\n            inputMode: props.inputMode,\n            // Clipboard events\n            onCopy: props.onCopy,\n            onCut: props.onCut,\n            onPaste: props.onPaste,\n            // Composition events\n            onCompositionEnd: props.onCompositionEnd,\n            onCompositionStart: props.onCompositionStart,\n            onCompositionUpdate: props.onCompositionUpdate,\n            // Selection events\n            onSelect: props.onSelect,\n            // Input events\n            onBeforeInput: props.onBeforeInput,\n            onInput: props.onInput,\n            ...focusableProps,\n            ...fieldProps\n        }),\n        descriptionProps: descriptionProps,\n        errorMessageProps: errorMessageProps,\n        isInvalid: isInvalid,\n        validationErrors: validationErrors,\n        validationDetails: validationDetails\n    };\n}\n\n\nexport {$2d73ec29415bd339$export$712718f7aec83d5 as useTextField};\n//# sourceMappingURL=useTextField.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}